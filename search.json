[{"path":[]},{"path":"https://bs4dash.rinterface.com/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://bs4dash.rinterface.com/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://bs4dash.rinterface.com/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://bs4dash.rinterface.com/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://bs4dash.rinterface.com/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement [INSERT CONTACT METHOD]. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://bs4dash.rinterface.com/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://bs4dash.rinterface.com/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://bs4dash.rinterface.com/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://bs4dash.rinterface.com/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://bs4dash.rinterface.com/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://bs4dash.rinterface.com/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.0, available https://www.contributor-covenant.org/version/2/0/ code_of_conduct.html. Community Impact Guidelines inspired Mozilla’s code conduct enforcement ladder. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https:// www.contributor-covenant.org/translations.","code":""},{"path":"https://bs4dash.rinterface.com/articles/bs4Dash.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"bs4Dash","text":"bs4Dash relies basis shinydashboard, AdminLTE HTML template, except version higher (3.1.0 vs 2.4). biggest difference dependence Bootstrap 4, natively supported {Shiny}. ’s elements like tabsetPanel(), actionButton(), … rewritten provide full Bootstrap4 support. addition, bs4Dash comes extra elements help develop Shiny apps professional look feel. summary main features: Since 2.0.0 release, bs4Dash overwrites shinydashboard functions dashboardPage() box() facilitate transition one package another.","code":""},{"path":[]},{"path":"https://bs4dash.rinterface.com/articles/bs4Dash.html","id":"breaking-changes","dir":"Articles","previous_headings":"What changes in v2.0.0 ?","what":"Breaking changes","title":"bs4Dash","text":"v2.0.0 clearly major breaking change bs4Dash. means coming v0.5.0 (latest CRAN version date), rewrite part code. easy decision take necessary improve package quality (naming consistency, …). Now transition shinydashboard bs4Dash easier since function parameters harmonized. reverse always guaranteed number extra parameters bs4Dash.","code":""},{"path":"https://bs4dash.rinterface.com/articles/bs4Dash.html","id":"more-checks","dir":"Articles","previous_headings":"What changes in v2.0.0 ?","what":"More checks","title":"bs4Dash","text":"hood, functions safer controls done user inputs reduce risk accidentally providing wrong values.","code":""},{"path":"https://bs4dash.rinterface.com/articles/bs4Dash.html","id":"new-features","dir":"Articles","previous_headings":"What changes in v2.0.0 ?","what":"New features","title":"bs4Dash","text":"exiting features 2.0.0 probably ability leverage awesome fresh package (see details) dashboardPage() freshTheme parameter. Additionally, skinSelector() allows dynamically change dashboard skin client side. also update_ functions programmatically control elements server. Now dashboardSidebar() may collapsed, dashboardControlbar(). dashboardPage() options parameter easy way fine tune AdminLTE behavior (see list available options). box() component reworked reduce number parameters include new sub-components like boxSidebar() may programmatically collapsed, boxLabel(). box() input binding indicating current state server side, perform specific tasks. Finally, colors better documented thanks Victor Perrier dreamRs. instance, primary color shown , danger , eventually helps users choose available options.","code":""},{"path":"https://bs4dash.rinterface.com/articles/bs4Dash.html","id":"basic-example","dir":"Articles","previous_headings":"","what":"Basic Example","title":"bs4Dash","text":"simple app may build bs4Dash. Interestingly, ’ll able notice scroll top button feature scroll bottom (bottom-right corner), well live theme switcher navigation bar goes light dark. new feature exclusive bs4Dash.","code":""},{"path":"https://bs4dash.rinterface.com/articles/css-preloader.html","id":"how-to-set-up-a-preloader","dir":"Articles","previous_headings":"","what":"How to set up a preloader?","title":"CSS preloaders","text":"Pass argument preloader dashboardPage() function. expects list containing parameters necessary waiter::waiterShowOnLoad. duration automatically handled listening shiny:idle event. Please look waiter documentation details. ’s !","code":""},{"path":"https://bs4dash.rinterface.com/articles/extra-elements.html","id":"accordion","dir":"Articles","previous_headings":"","what":"Accordion","title":"Extra Elements","text":"Accordions category collapsible elements. collapsible items alter state items collapsible container, accordion item toggle opened accordion, ensure 1 item visible . accordion() expects contain accordionItems(). Importantly, guaranty uniqueness accordion, must provide id parameter. parameter allows programmatically toggle accordion item, updateAccordion() function.","code":""},{"path":"https://bs4dash.rinterface.com/articles/extra-elements.html","id":"user-messages","dir":"Articles","previous_headings":"","what":"User messages","title":"Extra Elements","text":"bs4Dash make possible create entire chat system within Shiny app. userMessages() main container, userMessage() message element. updateUserMessages() looks userMessages() id : Remove existing message. Add new message. Edit existing message. Importantly, assume message structure composed follows: type parameter controls message background color. sent message, color inherited userMessages() status, received message, color gray default. text argument refers message content. may simple text, shiny tags event combinations shiny inputs/ouput, shown example.","code":"list(   author = \"David\",   date = \"Now\",   image = \"https://i.pinimg.com/originals/f1/15/df/f115dfc9cab063597b1221d015996b39.jpg\",   type = \"received\",   text = tagList(     sliderInput(       \"obs\",        \"Number of observations:\",       min = 0,        max = 1000,        value = 500     ),     plotOutput(\"distPlot\")   )"},{"path":[]},{"path":"https://bs4dash.rinterface.com/articles/improved-boxes.html","id":"the-box-state","dir":"Articles","previous_headings":"Boxes on Steroids!","what":"The box state","title":"Improved boxes","text":"box() without doubt central component bs4Dash. Thanks AdminLTE API, bs4Dash able provide interactivity component. instance, may: Know state box time. state captures different parameters collapsed, closed, maximized. Toggle box. Close/Restore box. update box properties: title, status, solidHeader, background, width, height, collapsible, closable maximizable. benefit feature, one must pass id parameter access server side input$<id>. Let’s consider example: call updateBox() function, specifying action accomplish: toggle remove restore update Knowing state box significantly opens new possibilities within application, thereby increasing interactivity. want know underlying mechanisms, look box widget documentation.","code":""},{"path":"https://bs4dash.rinterface.com/articles/improved-boxes.html","id":"box-components","dir":"Articles","previous_headings":"Boxes on Steroids!","what":"Box components","title":"Improved boxes","text":"bs4Dash, may embed labels, sidebar dropdown menus box header. Box Tools. left right: boxLabel, boxDropdown, collapsible closable buttons, boxSidebar trigger.","code":""},{"path":"https://bs4dash.rinterface.com/articles/improved-boxes.html","id":"box-labels","dir":"Articles","previous_headings":"Boxes on Steroids! > Box components","what":"Box Labels","title":"Improved boxes","text":"boxLabel() passed box() label slot. typically contain number short text.","code":""},{"path":"https://bs4dash.rinterface.com/articles/improved-boxes.html","id":"box-sidebar","dir":"Articles","previous_headings":"Boxes on Steroids! > Box components","what":"Box Sidebar","title":"Improved boxes","text":"boxSidebar() invoked box() sidebar parameter. sidebar id allowing programmatically toggle server side updateBoxSidebar(). component generally used contain input element want show box, box body generally contains visualizations plots tables. boxSidebar() highly customizable one may change background color, width icon trigger, latter displayed right side box header, depicted Figure @ref(fig:boxTools). example showing set sidebar toggle . interest able toggle sidebar server? Image want open sidebar soon user clicks specific action button.","code":""},{"path":"https://bs4dash.rinterface.com/articles/improved-boxes.html","id":"box-dropdown","dir":"Articles","previous_headings":"Boxes on Steroids! > Box components","what":"Box Dropdown","title":"Improved boxes","text":"boxDropdown() super powerful tool since dropdown items may behave like action buttons. feature allows seamlessly add interactivity box component gather features one place. example , clicking first item triggers toast().","code":""},{"path":"https://bs4dash.rinterface.com/articles/improved-boxes.html","id":"other-boxes","dir":"Articles","previous_headings":"Boxes on Steroids!","what":"Other Boxes","title":"Improved boxes","text":"bs4Dash provides box components able adapt various situations. wanted create box comments, social content?","code":""},{"path":"https://bs4dash.rinterface.com/articles/improved-boxes.html","id":"userbox","dir":"Articles","previous_headings":"Boxes on Steroids! > Other Boxes","what":"userBox","title":"Improved boxes","text":"userBox() intended highlight user profiles. many common parameters box() overall layout. 2 major diffences box() userBox() : ability add user image box header. Optionally add background image box header. color parameter applied box header. Additionally, may also select 2 types: centered image left-aligned image. title argument expects userDescription(): userBox() also entirely updatable server side, built top box() function:","code":"userDescription(   title = \"Nadia Carmichael\",   subtitle = \"lead Developer\",   type = 2,   image = \"https://adminlte.io/themes/AdminLTE/dist/img/user7-128x128.jpg\", )"},{"path":"https://bs4dash.rinterface.com/articles/improved-boxes.html","id":"socialbox","dir":"Articles","previous_headings":"Boxes on Steroids! > Other Boxes","what":"socialBox","title":"Improved boxes","text":"socialBox() dedicated contain events, comments, anything related people. title parameter hosts userBlock(): Elements like attachmentBlock() userMessages() good fit component. ... slot may hosts multiple boxComment, consisting user comments. Right now, programmatic way (understand update function available) handle future release bs4Dash obviously fill gap. app shows combination multiple elements socialBox():","code":"userBlock(   image = \"https://adminlte.io/themes/AdminLTE/dist/img/user4-128x128.jpg\",   title = \"Social Box\",   subtitle = \"example-01.05.2018\" )"},{"path":"https://bs4dash.rinterface.com/articles/more-skins.html","id":"a-real-time-skin-selector","dir":"Articles","previous_headings":"","what":"A Real Time Skin Selector","title":"Improved Skins","text":"bs4Dash new feature called skinSelector(). JavaScript based widget allowing end user change app skin. 20 unique colors 2 versions, light dark. Note dashboardControlbar() perfect place host skinSelector().","code":""},{"path":"https://bs4dash.rinterface.com/articles/more-skins.html","id":"fresh","dir":"Articles","previous_headings":"","what":"Fresh","title":"Improved Skins","text":"{fresh} developed dreamRs team. built top sass, provides solid R API write SASS variables compile CSS. fresh captures AdminLTE2 (well AdminLTE3 Bootstrap 4) SASS variables allow deep customization, hiding compilation burden hood. bs4dash_color() bs4Dash_status() provide interface available AdminLTE colors allow overwrite default. strongly suggest avoid setting default green blue, might become confusing. Instead, better play color palettes. bs4dash_sidebar_light() allows re-style sidebar component, bs4dash_layout() controls main background color, bs4dash_yiq() fine tune global contrast bs4dash_vars() offers deeper customization (navbar, …). fresh theme based dark theme color palettes.","code":""},{"path":"https://bs4dash.rinterface.com/articles/step-by-step.html","id":"create-a-basic-page","dir":"Articles","previous_headings":"","what":"Create a basic page","title":"How to start?","text":"template start bs4Dash: Basic page template dashboardPage() main wrapper: mandatory slots navbar (dashboardHeader()), sidebar (dashboardSidebar()) (dashboardBody()). Note dashboardControlbar() dashboardFooter() optional. title parameter gives name web browser tab. freshTheme, provided, expects fresh powered theme created fresh::create_theme(). allows deeper customization colors fit specific needs like industry brand colors. preloader expects loader tag built waiter, see , instance: moment, options available, idea provide deeper customization AdminLTE3 template like changing sidebars cards animation speed, … fullscreen TRUE, icon displayed navbar switch full screen mode. help automatically enable/disable tooltips popover present shiny app: easier approach using server methods addPopover(), addTooltip(), … less specific. dark allows toggle dark mode: FALSE, theme switch hidden dashboard takes light design. scrollToTop allows toggle scroll top button shown bottom right corner. Now, time fill template!","code":"library(shiny) library(bs4Dash)  shinyApp(   ui = dashboardPage(     title = \"Basic Dashboard\",     header = dashboardHeader(),     sidebar = dashboardSidebar(),     controlbar = dashboardControlbar(),     footer = dashboardFooter(),     body = dashboardBody()   ),   server = function(input, output) {} ) dashboardPage(   header,   sidebar,   body,   controlbar = NULL,   footer = NULL,   title = NULL,   freshTheme = NULL,   preloader = NULL,   options = NULL,   fullscreen = FALSE,   help = FALSE,   dark = FALSE,   scrollToTop = FALSE ) preloader <- list(html = tagList(spin_1(), \"Loading ...\"), color = \"#343a40\")"},{"path":"https://bs4dash.rinterface.com/articles/step-by-step.html","id":"sidebar-setup","dir":"Articles","previous_headings":"","what":"Sidebar Setup","title":"How to start?","text":"quickly describe dashboardSidebar() function: lot options available: disable disable sidebar. width controls sidebar width. Two skins, namely “light” “dark”. elevation number 0 5, applies shadow sidebar add shadow effect. sidebar status determins color menuItem() . 20 different colors listed getAdminLTEColors(). collapsed , TRUE sidebar collapsed start. minified, TRUE sidebar minified start. difference collapse minified? Minified means little part sidebar still visible. expandOnHover, minified TRUE, property TRUE, sidebar opens hovering re-collapses soon focus lost. fixed, TRUE, sidebar vertical overflow, allows see menus without scrolling . id used updateSidebar() function programmatically toggle sidebar server. input$<id> indicates state sidebar: TRUE means open FALSE means collapsed/minified. customArea area bottom sidebar contain elements like buttons. skin switch feature allows automatically toggle sidebar skin. Importantly, sidebar contains sidebarMenu() well items like sidebarUserPanel(), sidebarHeader(): sidebarMenu() drives navigation within dashboard. id parameter allows : Get name currently selected tab, input$<id>. Update currently selected tab updateTabItems(), actually shiny::updateTabsetPanel. sidebarMenu() also offers 4 cosmetic parameters: flat style parameter like material design. compact makes sidebar content smaller. childIndent shows indentation parent item nested subitems. legacy allows use old AdminLTE2 style. Interestingly, menuItem() can simple item contain sub-items, namely menuSubItem(): startExpanded defines whether item container opened app starts. menuItem() contains nested items, necessary give tabName. text may also contain complex HTML tags like dashboardBadge(). want use menuItem() browse external website, use href parameter well newTab open new web browser tab. Like shinydashboard, input$sidebarItemExpanded hosts value currently expanded sidebarItem.","code":"dashboardSidebar(   disable = FALSE,   width = NULL,   skin = \"dark\",   status = \"primary\",   elevation = 4,   collapsed = FALSE,   minified = TRUE,   expandOnHover = TRUE,   fixed = TRUE,   id = \"sidebar\",   customArea = NULL,   ... ) sidebarUserPanel(     image = \"https://image.flaticon.com/icons/svg/1149/1149168.svg\",     name = \"Welcome Onboard!\" )  sidebarMenu(   id = \"sidebarmenu\",   sidebarHeader(\"Header 1\"),   menuItem(     \"Item 1\",     tabName = \"item1\",     icon = icon(\"sliders\")   ),   menuItem(     \"Item 2\",     tabName = \"item2\",     icon = icon(\"id-card\")   ) ) menuItem(     text = \"Item List 1\",     icon = icon(\"bars\"),     startExpanded = TRUE,     menuSubItem(         text = \"Item 3\",         tabName = \"tab3\",         icon = icon(\"circle-thin\")     ),     menuSubItem(         text = \"Item 4\",         tabName = \"tab4\",         icon = icon(\"circle-thin\")     ) )"},{"path":"https://bs4dash.rinterface.com/articles/step-by-step.html","id":"navbar-setup","dir":"Articles","previous_headings":"","what":"Navbar Setup","title":"How to start?","text":"dashboardHeader() function creates navbar bs4Dash: title parameter can host simple text complex content like dashboardBrand(): dashboardBrand() enhanced title color status, points optional url may contain logo. title width can controlled titleWidth, like shinydashboard. Like dashboardSidebar(), dashboardHeader() offers lot theming options skin status, also border compact. respectively show bottom border smaller text. sidebarIcon controlbarIcon control icons sidebar controlbar, respectively. fixed parameter useful one wants see navbar even bottom dashboard, without scroll . leftUi, ... rightUi containers can contains content left right. Ideally, put dropdownMenu() well taskItem(), messageItem(), notificationItem(), dashboardUser()…","code":"dashboardHeader(   title = NULL,   titleWidth = NULL,   disable = FALSE,   .list = NULL,   skin = \"light\",   status = \"white\",   border = TRUE,   compact = FALSE,   sidebarIcon = shiny::icon(\"bars\"),   controlbarIcon = shiny::icon(\"th\"),   fixed = FALSE,   leftUi = NULL,   rightUi = NULL ) title <- dashboardBrand(     title = \"My dashboard\",     color = \"primary\",     href = \"https://adminlte.io/themes/v3\",     image = \"https://adminlte.io/themes/v3/dist/img/AdminLTELogo.png\" )"},{"path":"https://bs4dash.rinterface.com/articles/step-by-step.html","id":"right-sidebar-setup","dir":"Articles","previous_headings":"","what":"Right Sidebar Setup","title":"How to start?","text":"dashboardControlbar() provides extra sidebar, right side: Like dashboardSidebar(), dashboardControlbar() may programmatically toggled server updateControlbar(), provided id parameter value. practice, id passed user, bs4Dash assigns specific id. One can control dashboardControlbar() state start collapsed. TRUE, controlbar collapsed inversely. default, overlay TRUE, meaning controlbar opens top body content. FALSE, pushes body content left. pinned allows controlbar remain open even click outside (clicking outside collapses controlbar default). useful keep focus important options whenever necessary. Finally, controlbar entirely themable, like dashboardSidebar() dashboardHeader(). dashboardControlbar() contains controlbarMenu() hosts controlbarItem(). feature built top shiny::tabsetPanel, rebranded Bootstrap 4 compatibility: controlbarMenu() may updated server updateControlbarMenu() (shiny::updateTabsetPanel). want simple container without menu, add specific class account padding, shown :","code":"dashboardControlbar(     id = NULL,     disable = FALSE,     width = 250,     collapsed = TRUE,     overlay = TRUE,     skin = \"dark\",     pinned = NULL ) controlbarMenu(     ...,     id = NULL,     selected = NULL,     type = c(\"tabs\", \"pills\"),     position = NULL,     vertical = FALSE,     side = \"left\",     .list = NULL ) dashboardControlbar(     div(         class = \"p-3\",         # any content     ) )"},{"path":"https://bs4dash.rinterface.com/articles/step-by-step.html","id":"footer-setup","dir":"Articles","previous_headings":"","what":"Footer Setup","title":"How to start?","text":"use dashboardFooter(): Nothing special add !","code":"dashboardFooter(   left = a(     href = \"https://twitter.com/divadnojnarg\",     target = \"_blank\", \"@DivadNojnarg\"   ),   right = \"2020\" )"},{"path":"https://bs4dash.rinterface.com/articles/step-by-step.html","id":"setting-up-the-body-content","dir":"Articles","previous_headings":"","what":"Setting up the body content","title":"How to start?","text":"dashboardBody() main dashboard container: principle pretty straightforward: dashboardBody() elements must embeded tabItems() list containing may elements number items. item tabItem(). Importantly, tabName argument must provide unique. Moreover, must identical corresponding menuItem(), navigation tabs work. exactly principle shinydashboard. Therefore, users lost. practice, sidebar empty (without menu), still possible get rid tabItems() tabItem().","code":"dashboardBody(   tabItems(     tabItem(       tabName = \"item1\",       fluidRow(         lapply(1:3, FUN = function(i) {           sortable(             width = 4,             p(class = \"text-center\", paste(\"Column\", i)),             lapply(1:2, FUN = function(j) {               box(                 title = paste0(\"I am the \", j, \"-th card of the \", i, \"-th column\"),                 width = 12,                 \"Click on my header\"               )             })           )         })       )     ),     tabItem(       tabName = \"item2\",       box(         title = \"Card with messages\",         width = 9,         userMessages(           width = 12,           status = \"success\",           userMessage(             author = \"Alexander Pierce\",             date = \"20 Jan 2:00 pm\",             image = \"https://adminlte.io/themes/AdminLTE/dist/img/user1-128x128.jpg\",             type = \"received\",             \"Is this template really for free? That's unbelievable!\"           ),           userMessage(             author = \"Dana Pierce\",             date = \"21 Jan 4:00 pm\",             image = \"https://adminlte.io/themes/AdminLTE/dist/img/user5-128x128.jpg\",             type = \"sent\",             \"Indeed, that's unbelievable!\"           )         )       )     )   ) )"},{"path":"https://bs4dash.rinterface.com/articles/step-by-step.html","id":"wrap-up","dir":"Articles","previous_headings":"","what":"Wrap Up","title":"How to start?","text":"code first bs4Dash application:  Dark  * credits go https://codyhouse.co/gem/css-jquery-image-comparison-slider/ nice image slider widget! Advanced shiny user probably design shiny modules generate page, really encourage. However, deal modules purpose article.","code":"shinyApp(   ui = dashboardPage(     title = \"Basic Dashboard\",     fullscreen = TRUE,     header = dashboardHeader(       title = dashboardBrand(         title = \"bs4Dash\",         color = \"primary\",         href = \"https://www.google.fr\",         image = \"https://adminlte.io/themes/AdminLTE/dist/img/user2-160x160.jpg\",       ),       skin = \"light\",       status = \"white\",       border = TRUE,       sidebarIcon = icon(\"bars\"),       controlbarIcon = icon(\"th\"),       fixed = FALSE,       leftUi = tagList(         dropdownMenu(           badgeStatus = \"info\",           type = \"notifications\",           notificationItem(             inputId = \"triggerAction2\",             text = \"Error!\",             status = \"danger\"           )         ),         dropdownMenu(           badgeStatus = \"info\",           type = \"tasks\",           taskItem(             inputId = \"triggerAction3\",             text = \"My progress\",             color = \"orange\",             value = 10           )         )       ),       rightUi = dropdownMenu(         badgeStatus = \"danger\",         type = \"messages\",         messageItem(           inputId = \"triggerAction1\",           message = \"message 1\",           from = \"Divad Nojnarg\",           image = \"https://adminlte.io/themes/v3/dist/img/user3-128x128.jpg\",           time = \"today\",           color = \"lime\"         )       )     ),     sidebar = dashboardSidebar(       skin = \"light\",       status = \"primary\",       elevation = 3,       sidebarUserPanel(         image = \"https://image.flaticon.com/icons/svg/1149/1149168.svg\",         name = \"Welcome Onboard!\"       ),       sidebarMenu(         sidebarHeader(\"Header 1\"),         menuItem(           \"Item 1\",           tabName = \"item1\",           icon = icon(\"sliders\")         ),         menuItem(           \"Item 2\",           tabName = \"item2\",           icon = icon(\"id-card\")         )       )     ),     controlbar = dashboardControlbar(       skin = \"light\",       pinned = TRUE,       collapsed = FALSE,       overlay = FALSE,       controlbarMenu(         id = \"controlbarmenu\",         controlbarItem(           title = \"Item 1\",           sliderInput(             inputId = \"obs\",             label = \"Number of observations:\",             min = 0,             max = 1000,             value = 500           ),           column(             width = 12,             align = \"center\",             radioButtons(               inputId = \"dist\",               label = \"Distribution type:\",               c(                 \"Normal\" = \"norm\",                 \"Uniform\" = \"unif\",                 \"Log-normal\" = \"lnorm\",                 \"Exponential\" = \"exp\"               )             )           )         ),         controlbarItem(           \"Item 2\",           \"Simple text\"         )       )     ),     footer = dashboardFooter(       left = a(         href = \"https://twitter.com/divadnojnarg\",         target = \"_blank\", \"@DivadNojnarg\"       ),       right = \"2018\"     ),     body = dashboardBody(       tabItems(         tabItem(           tabName = \"item1\",           fluidRow(             lapply(1:3, FUN = function(i) {               sortable(                 width = 4,                 p(class = \"text-center\", paste(\"Column\", i)),                 lapply(1:2, FUN = function(j) {                   box(                     title = paste0(\"I am the \", j, \"-th card of the \", i, \"-th column\"),                     width = 12,                     \"Click on my header\"                   )                 })               )             })           )         ),         tabItem(           tabName = \"item2\",           box(             title = \"Card with messages\",             width = 9,             userMessages(               width = 12,               status = \"success\",               userMessage(                 author = \"Alexander Pierce\",                 date = \"20 Jan 2:00 pm\",                 image = \"https://adminlte.io/themes/AdminLTE/dist/img/user1-128x128.jpg\",                 type = \"received\",                 \"Is this template really for free? That's unbelievable!\"               ),               userMessage(                 author = \"Dana Pierce\",                 date = \"21 Jan 4:00 pm\",                 image = \"https://adminlte.io/themes/AdminLTE/dist/img/user5-128x128.jpg\",                 type = \"sent\",                 \"Indeed, that's unbelievable!\"               )             )           )         )       )     )   ),   server = function(input, output) {} )"},{"path":"https://bs4dash.rinterface.com/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"David Granjon. Author, maintainer. RinteRface. Copyright holder. Almasaeed Studio. Contributor, copyright holder.           AdminLTE3 theme Bootstrap 4 Winston Chang. Contributor, copyright holder.           Utils functions shinydashboard","code":""},{"path":"https://bs4dash.rinterface.com/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Granjon D (2024). bs4Dash: 'Bootstrap 4' Version 'shinydashboard'. R package version 2.3.4, https://bs4dash.rinterface.com/, https://github.com/RinteRface/bs4Dash.","code":"@Manual{,   title = {bs4Dash: A 'Bootstrap 4' Version of 'shinydashboard'},   author = {David Granjon},   year = {2024},   note = {R package version 2.3.4, https://bs4dash.rinterface.com/},   url = {https://github.com/RinteRface/bs4Dash}, }"},{"path":"https://bs4dash.rinterface.com/index.html","id":"bs4dash","dir":"","previous_headings":"","what":"A Bootstrap 4 Version of shinydashboard","title":"A Bootstrap 4 Version of shinydashboard","text":"Bootstrap 4 shinydashboard using AdminLTE3","code":""},{"path":"https://bs4dash.rinterface.com/index.html","id":"from-shinydashboard-to-bs4dash","dir":"","previous_headings":"","what":"From {shinydashboard} to {bs4Dash}","title":"A Bootstrap 4 Version of shinydashboard","text":"Taking simple shinydashboard example: Moving bs4Dash rather simple, just replace library(shinydashboard):","code":"library(shiny) library(shinydashboard)  ui <- dashboardPage(   dashboardHeader(title = \"Basic dashboard\"),   dashboardSidebar(),   dashboardBody(     # Boxes need to be put in a row (or column)     fluidRow(       box(plotOutput(\"plot1\", height = 250)),        box(         title = \"Controls\",         sliderInput(\"slider\", \"Number of observations:\", 1, 100, 50)       )     )   ) )  server <- function(input, output) {   set.seed(122)   histdata <- rnorm(500)    output$plot1 <- renderPlot({     data <- histdata[seq_len(input$slider)]     hist(data)   }) }  shinyApp(ui, server) library(bs4Dash) ui <- dashboardPage(   dashboardHeader(title = \"Basic dashboard\"),   dashboardSidebar(),   dashboardBody(     # Boxes need to be put in a row (or column)     fluidRow(       box(plotOutput(\"plot1\", height = 250)),        box(         title = \"Controls\",         sliderInput(\"slider\", \"Number of observations:\", 1, 100, 50)       )     )   ) )  server <- function(input, output) {   set.seed(122)   histdata <- rnorm(500)    output$plot1 <- renderPlot({     data <- histdata[seq_len(input$slider)]     hist(data)   }) }  shinyApp(ui, server)"},{"path":"https://bs4dash.rinterface.com/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"A Bootstrap 4 Version of shinydashboard","text":"","code":"# latest devel version devtools::install_github(\"RinteRface/bs4Dash\") # from CRAN install.packages(\"bs4Dash\")"},{"path":"https://bs4dash.rinterface.com/index.html","id":"demo","dir":"","previous_headings":"","what":"Demo","title":"A Bootstrap 4 Version of shinydashboard","text":"may also run:","code":"library(bs4Dash) bs4DashGallery()"},{"path":"https://bs4dash.rinterface.com/index.html","id":"issues","dir":"","previous_headings":"","what":"Issues","title":"A Bootstrap 4 Version of shinydashboard","text":"Issues listed .","code":""},{"path":"https://bs4dash.rinterface.com/index.html","id":"acknowledgement","dir":"","previous_headings":"","what":"Acknowledgement","title":"A Bootstrap 4 Version of shinydashboard","text":"warmly thank Glyphicons creator providing free Bootstrap.","code":""},{"path":"https://bs4dash.rinterface.com/index.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"A Bootstrap 4 Version of shinydashboard","text":"Please note bs4Dash project released Contributor Code Conduct. contributing project, agree toabide terms.","code":""},{"path":"https://bs4dash.rinterface.com/reference/accordion.html","id":null,"dir":"Reference","previous_headings":"","what":"Bootstrap 4 accordion container — bs4Accordion","title":"Bootstrap 4 accordion container — bs4Accordion","text":"accordion creates accordion container. Accordions part collapsible elements. accordionItem inserted accordion. updateAccordion toggles accordion client.","code":""},{"path":"https://bs4dash.rinterface.com/reference/accordion.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bootstrap 4 accordion container — bs4Accordion","text":"","code":"bs4Accordion(..., id, width = 12, .list = NULL)  bs4AccordionItem(   ...,   title,   status = NULL,   collapsed = TRUE,   solidHeader = TRUE )  updateAccordion(id, selected, session = shiny::getDefaultReactiveDomain())  accordion(..., id, width = 12, .list = NULL)  accordionItem(..., title, status = NULL, collapsed = TRUE, solidHeader = TRUE)"},{"path":"https://bs4dash.rinterface.com/reference/accordion.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bootstrap 4 accordion container — bs4Accordion","text":"... slot accordionItem. id Accordion target. width width accordion. .list pass accordionItem within list. title Optional title. status status item. determines item's background   color.  Valid statuses defined follows: primary: #007bff . secondary: #6c757d . info: #17a2b8 . success: #28a745 . warning: #ffc107 . danger: #dc3545 . gray-dark: #343a40 . gray: #adb5bd . white: #fff . indigo: #6610f2 . lightblue: #3c8dbc . navy: #001f3f . purple: #605ca8 . fuchsia: #f012be . pink: #e83e8c . maroon: #d81b60 . orange: #ff851b . lime: #01ff70 . teal: #39cccc . olive: #3d9970 . collapsed TRUE, start collapsed. must used collapsible=TRUE. solidHeader header shown solid color background? selected Index newly selected accordionItem. session Shiny session object.","code":""},{"path":"https://bs4dash.rinterface.com/reference/accordion.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Bootstrap 4 accordion container — bs4Accordion","text":"David Granjon, dgranjon@ymail.com","code":""},{"path":"https://bs4dash.rinterface.com/reference/accordion.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bootstrap 4 accordion container — bs4Accordion","text":"","code":"if (interactive()) {  library(shiny)  library(bs4Dash)    shinyApp(   ui = dashboardPage(     dashboardHeader(),     dashboardSidebar(),     dashboardBody(       accordion(        id = \"accordion1\",         accordionItem(           title = \"Accordion 1 Item 1\",           status = \"danger\",           collapsed = TRUE,           \"This is some text!\"         ),         accordionItem(           title = \"Accordion 1 Item 2\",           status = \"indigo\",           collapsed = FALSE,           \"This is some text!\"         )       ),       accordion(        id = \"accordion2\",         accordionItem(           title = \"Accordion 2 Item 1\",           status = \"info\",           collapsed = TRUE,           \"This is some text!\"         ),         accordionItem(           title = \"Accordion 2 Item 2\",           status = \"success\",           collapsed = FALSE,           \"This is some text!\"         )       ),       accordion(         id = \"accordion_dynamic\",         .list = lapply(           1:2,           function(i)             accordionItem(               title = paste('Accordion 1 Item', i),               status = \"danger\",               collapsed = ifelse (i == 1, TRUE, FALSE),               \"This is some text!\"             )          )        )     ),     title = \"Accordion\"   ),   server = function(input, output) {    observe({      print(input$accordion1)      print(input$accordion2)      print(input$accordion_dynamic)    })   }  ) }   # Update accordion if (interactive()) {  library(shiny)  library(bs4Dash)    shinyApp(   ui = dashboardPage(     dashboardHeader(),     dashboardSidebar(),     dashboardBody(       radioButtons(\"controller\", \"Controller\", choices = c(1, 2)),       br(),       accordion(         id = \"accordion1\",         accordionItem(           title = \"Accordion 1 Item 1\",           status = \"danger\",           collapsed = TRUE,           \"This is some text!\"         ),         accordionItem(           title = \"Accordion 1 Item 2\",           status = \"warning\",           collapsed = TRUE,           \"This is some text!\"         )       )     ),     title = \"Update Accordion\"   ),   server = function(input, output, session) {     observeEvent(input$controller, {       updateAccordion(id = \"accordion1\", selected = input$controller)     })     observe(print(input$accordion1))     observeEvent(input$accordion1, {       showNotification(sprintf(\"You selected accordion N° %s\", input$accordion1), type = \"message\")     })   }  ) }"},{"path":"https://bs4dash.rinterface.com/reference/actionButton.html","id":null,"dir":"Reference","previous_headings":"","what":"Bootstrap 4 Action button/link — actionButton","title":"Bootstrap 4 Action button/link — actionButton","text":"Creates action button link whose value initially zero, increments one time pressed.","code":""},{"path":"https://bs4dash.rinterface.com/reference/actionButton.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bootstrap 4 Action button/link — actionButton","text":"","code":"actionButton(   inputId,   label,   icon = NULL,   width = NULL,   ...,   status = NULL,   gradient = FALSE,   outline = FALSE,   size = NULL,   flat = FALSE )"},{"path":"https://bs4dash.rinterface.com/reference/actionButton.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bootstrap 4 Action button/link — actionButton","text":"inputId `input` slot used access value. label contents button link–usually text label, also use HTML, like image. icon optional [icon()] appear button. width width input, e.g. `'400px'`, `'100 see [validateCssUnit()]. ... Named attributes applied button link. status Button status color. Valid statuses defined follows: primary: #007bff . secondary: #6c757d . info: #17a2b8 . success: #28a745 . warning: #ffc107 . danger: #dc3545 . gradient Whether apply gradient color. Default FALSE. outline Whether display outline style. Status must NULL TRUE. Default FALSE. size Button size. Default NULL. Possible choices: c(\"lg\", \"sm\", \"xs\"). flat Whether apply flat style. Default FALSE.","code":""},{"path":"https://bs4dash.rinterface.com/reference/actionButton.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Bootstrap 4 Action button/link — actionButton","text":"One may also pass status directly via ... parameter using class = \"btn-primary\", primary status instance. thing styles like size.","code":""},{"path":"https://bs4dash.rinterface.com/reference/actionButton.html","id":"server-value","dir":"Reference","previous_headings":"","what":"Server value","title":"Bootstrap 4 Action button/link — actionButton","text":"integer class `\"shinyActionButtonValue\"`. class differs ordinary integers value 0 considered \"falsy\". implies two things:   * Event handlers (e.g., [observeEvent()], [eventReactive()]) execute initial load.   * Input validation (e.g., [req()], [need()]) fail initial load.","code":""},{"path":[]},{"path":"https://bs4dash.rinterface.com/reference/actionButton.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bootstrap 4 Action button/link — actionButton","text":"","code":"## Only run examples in interactive R sessions if (interactive()) {  library(shiny)  library(bs4Dash)   shinyApp(   ui = dashboardPage(     header = dashboardHeader(       title = bs4DashBrand(         title = \"My dashboard\",         color = \"primary\",         src = \"https://adminlte.io/themes/v3\",         image = \"https://adminlte.io/themes/v3/dist/img/AdminLTELogo.png\"       )     ),     sidebar = dashboardSidebar(),     body = dashboardBody(       sliderInput(\"obs\", \"Number of observations\", 0, 1000, 500),       actionButton(        \"goButton\", \"Go!\",         status = \"danger\",         outline = TRUE,         flat = TRUE,         size = \"lg\"       ),      plotOutput(\"distPlot\")     ),     controlbar = dashboardControlbar(),     title = \"DashboardPage\"   ),   server = function(input, output) {    output$distPlot <- renderPlot({     # Take a dependency on input$goButton. This will run once initially,     # because the value changes from NULL to 0.     input$goButton      # Use isolate() to avoid dependency on input$obs     dist <- isolate(rnorm(input$obs))     hist(dist)    })   }  )  }  ## Example of adding extra class values actionButton(\"largeButton\", \"Large Primary Button\", class = \"btn-primary btn-lg\") #> <button class=\"btn btn-default action-button btn-primary btn-lg\" id=\"largeButton\" type=\"button\">Large Primary Button<\/button>"},{"path":"https://bs4dash.rinterface.com/reference/alert.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Bootstrap 4 alert on the server side — createAlert","title":"Create a Bootstrap 4 alert on the server side — createAlert","text":"createAlert creates alert inserts DOM. closeAlert closes alert created via createAlert.","code":""},{"path":"https://bs4dash.rinterface.com/reference/alert.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Bootstrap 4 alert on the server side — createAlert","text":"","code":"createAlert(   id = NULL,   selector = NULL,   options,   session = shiny::getDefaultReactiveDomain() )  closeAlert(id, session = shiny::getDefaultReactiveDomain())"},{"path":"https://bs4dash.rinterface.com/reference/alert.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Bootstrap 4 alert on the server side — createAlert","text":"id Anchor id. selector jQuery selector. Allow customization anchor (nested tags). options List options pass alert. See : content: Alert content. title: Alert title. closable: Whether allow user close alert. FALSE default. width: Alert width. 1 12. elevation: Alert elevation. status: Alert status. \"primary\", \"success\", \"warning\", \"danger\" \"info\". session Shiny session object.","code":""},{"path":"https://bs4dash.rinterface.com/reference/alert.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Create a Bootstrap 4 alert on the server side — createAlert","text":"Unlike shinyBS, need specify anchorId alertId. id refers anchorId, alertId simply \"anchorId-alert\". server side, one can access alert status input$<id>. TRUE, alert created visible, FALSE alert just closed.","code":""},{"path":"https://bs4dash.rinterface.com/reference/alert.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a Bootstrap 4 alert on the server side — createAlert","text":"","code":"if (interactive()) {   library(shiny)   library(bs4Dash)    shinyApp(     ui = dashboardPage(       header = dashboardHeader(),       sidebar = dashboardSidebar(),       body = dashboardBody(         tooltip(           sliderInput(\"obs\", \"Observations:\", 10, min = 1, max = 100),           placement = \"right\",           title = \"Set me higher than 50!\"         ),         div(id = \"myalert\", style = \"position: absolute; bottom: 0; right: 0;\")       ),       controlbar = dashboardControlbar(),       title = \"Alerts\",     ),     server = function(input, output, session) {       observeEvent(input$obs, {         if (input$obs > 50) {           createAlert(             id = \"myalert\",             options = list(               title = \"Alert\",               closable = TRUE,               width = 12,               elevations = 4,               status = \"primary\",               content = \"Alert content ...\"             )           )         } else {           closeAlert(id = \"myalert\")         }       })        observe(print(input$myalert))        observeEvent(input$myalert, {         alertStatus <- if (input$myalert) \"opened\" else \"closed\"         toastColor <- if (input$myalert) \"bg-lime\" else \"bg-fuchsia\"         toast(           title = sprintf(\"Alert succesfully %s!\", alertStatus),           options = list(             class = toastColor,             autohide = TRUE,             position = \"topRight\"           )         )       })     }   ) }"},{"path":"https://bs4dash.rinterface.com/reference/appButton.html","id":null,"dir":"Reference","previous_headings":"","what":"AdminLTE2 special large button — appButton","title":"AdminLTE2 special large button — appButton","text":"Create large button ideal web applications identical classic Shiny action button.","code":""},{"path":"https://bs4dash.rinterface.com/reference/appButton.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"AdminLTE2 special large button — appButton","text":"","code":"appButton(..., inputId, label, icon = NULL, width = NULL, color = NULL)"},{"path":"https://bs4dash.rinterface.com/reference/appButton.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"AdminLTE2 special large button — appButton","text":"... Named attributes applied button link. inputId input slot used access value. label contents button link–usually text label, also use HTML, like image. icon optional icon() appear button. width width input, e.g. '400px', '100%'; see validateCssUnit(). color Button backgroun color. Valid statuses defined follows: primary: #007bff . secondary: #6c757d . info: #17a2b8 . success: #28a745 . warning: #ffc107 . danger: #dc3545 . gray-dark: #343a40 . gray: #adb5bd . white: #fff . indigo: #6610f2 . lightblue: #3c8dbc . navy: #001f3f . purple: #605ca8 . fuchsia: #f012be . pink: #e83e8c . maroon: #d81b60 . orange: #ff851b . lime: #01ff70 . teal: #39cccc . olive: #3d9970 .","code":""},{"path":"https://bs4dash.rinterface.com/reference/appButton.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"AdminLTE2 special large button — appButton","text":"David Granjon, dgranjon@ymail.com","code":""},{"path":"https://bs4dash.rinterface.com/reference/appButton.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"AdminLTE2 special large button — appButton","text":"","code":"if (interactive()) {  library(shiny)  library(bs4Dash)    shinyApp(   ui = dashboardPage(     dashboardHeader(),     dashboardSidebar(),     dashboardBody(      box(       title = \"App Buttons\",       status = NULL,       appButton(         inputId = \"myAppButton\",         label = \"Users\",          icon = icon(\"users\"),          color = \"orange\",         dashboardBadge(textOutput(\"btnVal\"), color = \"primary\")       )      )     ),     title = \"App buttons\"   ),   server = function(input, output) {    output$btnVal <- renderText(input$myAppButton)   }  ) }"},{"path":"https://bs4dash.rinterface.com/reference/app_container.html","id":null,"dir":"Reference","previous_headings":"","what":"Create container for bs4Dash demo app — app_container","title":"Create container for bs4Dash demo app — app_container","text":"Container based device.css","code":""},{"path":"https://bs4dash.rinterface.com/reference/app_container.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create container for bs4Dash demo app — app_container","text":"","code":"app_container(url, deps = FALSE)"},{"path":"https://bs4dash.rinterface.com/reference/app_container.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create container for bs4Dash demo app — app_container","text":"url app URL. httr GET test run . failed, function returns NULL. deps Whether include marvel device assets. Default FALSE. first occurence must set deps TRUE CSS loaded page.","code":""},{"path":"https://bs4dash.rinterface.com/reference/attachmentBlock.html","id":null,"dir":"Reference","previous_headings":"","what":"AdminLTE3 attachment container — attachmentBlock","title":"AdminLTE3 attachment container — attachmentBlock","text":"attachmentBlock create attachment container, nice wrap articles... insert box.","code":""},{"path":"https://bs4dash.rinterface.com/reference/attachmentBlock.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"AdminLTE3 attachment container — attachmentBlock","text":"","code":"attachmentBlock(..., image, title = NULL, href = NULL)"},{"path":"https://bs4dash.rinterface.com/reference/attachmentBlock.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"AdminLTE3 attachment container — attachmentBlock","text":"... element. image url path image. title Attachment title. href External link.","code":""},{"path":[]},{"path":"https://bs4dash.rinterface.com/reference/attachmentBlock.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"AdminLTE3 attachment container — attachmentBlock","text":"David Granjon, dgranjon@ymail.com","code":""},{"path":"https://bs4dash.rinterface.com/reference/attachmentBlock.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"AdminLTE3 attachment container — attachmentBlock","text":"","code":"if (interactive()) {  library(shiny)  library(bs4Dash)    shinyApp(   ui = dashboardPage(     dashboardHeader(),     dashboardSidebar(),     dashboardBody(      box(       title = \"attachmentBlock example\",       attachmentBlock(        image = \"https://adminlte.io/themes/v3/dist/img/user1-128x128.jpg\",        title = \"Test\",        href = \"https://google.com\",        \"This is the content\"       )      )     ),     title = \"attachmentBlock\"   ),   server = function(input, output) { }  ) }"},{"path":"https://bs4dash.rinterface.com/reference/badge.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Bootstrap 4 dashboard badge item — bs4Badge","title":"Create a Bootstrap 4 dashboard badge item — bs4Badge","text":"dashboardBadge creates badge. may inserted element like inside actionButton dashboardSidebar.","code":""},{"path":"https://bs4dash.rinterface.com/reference/badge.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Bootstrap 4 dashboard badge item — bs4Badge","text":"","code":"bs4Badge(..., color, position = c(\"left\", \"right\"), rounded = FALSE)  dashboardBadge(..., color, position = c(\"left\", \"right\"), rounded = FALSE)"},{"path":"https://bs4dash.rinterface.com/reference/badge.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Bootstrap 4 dashboard badge item — bs4Badge","text":"... Badge content. color Badge color. Valid colors: primary: #007bff . secondary: #6c757d . info: #17a2b8 . success: #28a745 . warning: #ffc107 . danger: #dc3545 . position Badge position: \"left\" \"right\". rounded Whether badge rounded instead square. FALSE default.","code":""},{"path":"https://bs4dash.rinterface.com/reference/badge.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Create a Bootstrap 4 dashboard badge item — bs4Badge","text":"David Granjon, dgranjon@ymail.com","code":""},{"path":"https://bs4dash.rinterface.com/reference/badge.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a Bootstrap 4 dashboard badge item — bs4Badge","text":"","code":"if(interactive()){  library(shiny)  library(bs4Dash)    shinyApp(   ui = dashboardPage(     dashboardHeader(),     dashboardSidebar(),     dashboardBody(      dashboardBadge(\"Badge 1\", color = \"danger\"),      actionButton(       inputId = \"badge\",        label = \"Hello\",        icon = NULL,        width = NULL,        dashboardBadge(1, color = \"primary\")      )     )   ),   server = function(input, output) { }  ) }"},{"path":"https://bs4dash.rinterface.com/reference/box.html","id":null,"dir":"Reference","previous_headings":"","what":"AdminLTE3 description block — descriptionBlock","title":"AdminLTE3 description block — descriptionBlock","text":"descriptionBlock creates description block, perfect writing statistics insert box. boxPad creates vertical container descriptionBlock. included box. Build adminLTE3 card update box server side.","code":""},{"path":"https://bs4dash.rinterface.com/reference/box.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"AdminLTE3 description block — descriptionBlock","text":"","code":"descriptionBlock(   number = NULL,   numberColor = NULL,   numberIcon = NULL,   header = NULL,   text = NULL,   rightBorder = TRUE,   marginBottom = FALSE )  cardPad(..., color = NULL, style = NULL)  bs4Card(   ...,   title = NULL,   footer = NULL,   status = NULL,   solidHeader = FALSE,   background = NULL,   width = 6,   height = NULL,   collapsible = TRUE,   collapsed = FALSE,   closable = FALSE,   maximizable = FALSE,   icon = NULL,   gradient = FALSE,   boxToolSize = \"sm\",   elevation = NULL,   headerBorder = TRUE,   label = NULL,   dropdownMenu = NULL,   sidebar = NULL,   id = NULL )  updatebs4Card(   id,   action = c(\"remove\", \"toggle\", \"toggleMaximize\", \"restore\", \"update\"),   options = NULL,   session = shiny::getDefaultReactiveDomain() )  box(   ...,   title = NULL,   footer = NULL,   status = NULL,   solidHeader = FALSE,   background = NULL,   width = 6,   height = NULL,   collapsible = TRUE,   collapsed = FALSE,   closable = FALSE,   maximizable = FALSE,   icon = NULL,   gradient = FALSE,   boxToolSize = \"sm\",   elevation = NULL,   headerBorder = TRUE,   label = NULL,   dropdownMenu = NULL,   sidebar = NULL,   id = NULL )  updateCard(   id,   action = c(\"remove\", \"toggle\", \"toggleMaximize\", \"restore\", \"update\"),   options = NULL,   session = shiny::getDefaultReactiveDomain() )  updateBox(   id,   action = c(\"remove\", \"toggle\", \"toggleMaximize\", \"restore\", \"update\"),   options = NULL,   session = shiny::getDefaultReactiveDomain() )  boxPad(..., color = NULL, style = NULL)"},{"path":"https://bs4dash.rinterface.com/reference/box.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"AdminLTE3 description block — descriptionBlock","text":"number number. numberColor Number color. Valid colors defined follows: primary: #007bff . secondary: #6c757d . info: #17a2b8 . success: #28a745 . warning: #ffc107 . danger: #dc3545 . gray-dark: #343a40 . gray: #adb5bd . white: #fff . indigo: #6610f2 . lightblue: #3c8dbc . navy: #001f3f . purple: #605ca8 . fuchsia: #f012be . pink: #e83e8c . maroon: #d81b60 . orange: #ff851b . lime: #01ff70 . teal: #39cccc . olive: #3d9970 . numberIcon Number icon, . Expect icon. header Bold text. text Additional text. rightBorder TRUE default. Whether display right border separate two blocks. last block right right border. marginBottom FALSE default. Set TRUE descriptionBlock used boxPad context. ... Contents box. color Background color. Valid colors defined follows: primary: #007bff . secondary: #6c757d . info: #17a2b8 . success: #28a745 . warning: #ffc107 . danger: #dc3545 . gray-dark: #343a40 . gray: #adb5bd . white: #fff . indigo: #6610f2 . lightblue: #3c8dbc . navy: #001f3f . purple: #605ca8 . fuchsia: #f012be . pink: #e83e8c . maroon: #d81b60 . orange: #ff851b . lime: #01ff70 . teal: #39cccc . olive: #3d9970 . style Custom CSS, . title Optional title. footer Optional footer text. status status item. determines item's background   color.  Valid statuses defined follows: primary: #007bff . secondary: #6c757d . info: #17a2b8 . success: #28a745 . warning: #ffc107 . danger: #dc3545 . gray-dark: #343a40 . gray: #adb5bd . white: #fff . indigo: #6610f2 . lightblue: #3c8dbc . navy: #001f3f . purple: #605ca8 . fuchsia: #f012be . pink: #e83e8c . maroon: #d81b60 . orange: #ff851b . lime: #01ff70 . teal: #39cccc . olive: #3d9970 . solidHeader header shown solid color background? background NULL (default), background box   white. Otherwise, color string. Valid colors listed   validColors. See : primary: #007bff . secondary: #6c757d . info: #17a2b8 . success: #28a745 . warning: #ffc107 . danger: #dc3545 . gray-dark: #343a40 . gray: #adb5bd . white: #fff . indigo: #6610f2 . lightblue: #3c8dbc . navy: #001f3f . purple: #605ca8 . fuchsia: #f012be . pink: #e83e8c . maroon: #d81b60 . orange: #ff851b . lime: #01ff70 . teal: #39cccc . olive: #3d9970 . width width box, using Bootstrap grid system. used row-based layouts. overall width region 12, default card width 6 occupies 1/2 width. column-based layouts, use NULL width; width set column contains box. height height box, pixels CSS unit. default height scales automatically content. collapsible TRUE, display button upper right allows user collapse box. collapsed TRUE, start collapsed. must used collapsible=TRUE. closable TRUE, display button upper right allows user close box. maximizable TRUE, card can displayed full screen mode. icon Header icon. Displayed title. Expect icon. gradient Whether allow gradient effect background color. Default FALSE. boxToolSize Size toolbox: choose among \"xs\", \"sm\", \"md\", \"lg\". elevation Card elevation. headerBorder Whether display border header body. TRUE default label Slot boxLabel. dropdownMenu List items boxtool dropdown menu. Use boxDropdown. sidebar Slot boxSidebar. id Card id. action Action trigger: c(\"remove\", \"toggle\", \"toggleMaximize\", \"restore\", \"update\"). options action update, list new options configure box, list(title = \"new title\", status = NULL, solidHeader = FALSE, background = \"red\", width = 6, height = \"200px\", collapsible = FALSE, closable = FALSE). session Shiny session.","code":""},{"path":[]},{"path":"https://bs4dash.rinterface.com/reference/box.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"AdminLTE3 description block — descriptionBlock","text":"David Granjon, dgranjon@ymail.com","code":""},{"path":"https://bs4dash.rinterface.com/reference/box.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"AdminLTE3 description block — descriptionBlock","text":"","code":"# Box with descriptionBlock if (interactive()) {  library(shiny)  library(bs4Dash)    shinyApp(   ui = dashboardPage(     dashboardHeader(),     dashboardSidebar(),     dashboardBody(      box(       solidHeader = FALSE,       title = \"Status summary\",       background = NULL,       width = 4,       status = \"danger\",       footer = fluidRow(         column(           width = 6,           descriptionBlock(             number = \"17%\",              numberColor = \"pink\",              numberIcon = icon(\"caret-up\"),             header = \"$35,210.43\",              text = \"TOTAL REVENUE\",              rightBorder = TRUE,             marginBottom = FALSE           )         ),         column(           width = 6,           descriptionBlock(             number = \"18%\",              numberColor = \"secondary\",              numberIcon = icon(\"caret-down\"),             header = \"1200\",              text = \"GOAL COMPLETION\",              rightBorder = FALSE,             marginBottom = FALSE           )         )       )      )     ),     title = \"Description Blocks\"   ),   server = function(input, output) { }  ) }  if (interactive()) {  library(shiny)  library(bs4Dash)    shinyApp(   ui = dashboardPage(     dashboardHeader(),     dashboardSidebar(),     dashboardBody(      box(       title = \"Box with right pad\",       status = \"warning\",       fluidRow(         column(width = 6),         column(           width = 6,           boxPad(             color = \"purple\",             descriptionBlock(               header = \"8390\",                text = \"VISITS\",                rightBorder = FALSE,               marginBottom = TRUE             ),             descriptionBlock(               header = \"30%\",                text = \"REFERRALS\",                rightBorder = FALSE,               marginBottom = TRUE             ),             descriptionBlock(               header = \"70%\",                text = \"ORGANIC\",                rightBorder = FALSE,               marginBottom = FALSE             )           )         )       )      )     ),     title = \"boxPad\"   ),   server = function(input, output) { }  ) }  # A box with label, sidebar, dropdown menu if (interactive()) {   library(shiny)   library(bs4Dash)    shinyApp(     ui = dashboardPage(       dashboardHeader(),       dashboardSidebar(),       dashboardBody(         box(           title = \"Closable Box with dropdown\",           closable = TRUE,           width = 12,           status = \"warning\",           solidHeader = FALSE,           collapsible = TRUE,           label = boxLabel(             text = 1,             status = \"danger\"           ),           dropdownMenu = boxDropdown(             boxDropdownItem(\"Link to google\", href = \"https://www.google.com\"),             boxDropdownItem(\"item 2\", href = \"#\"),             dropdownDivider(),             boxDropdownItem(\"item 3\", href = \"#\", icon = icon(\"table-cells\"))           ),           sidebar = boxSidebar(             startOpen = TRUE,             id = \"mycardsidebar\",             sliderInput(               \"obs\",               \"Number of observations:\",               min = 0,               max = 1000,               value = 500             )           ),           plotOutput(\"distPlot\")         )       )     ),     server = function(input, output) {       output$distPlot <- renderPlot({         hist(rnorm(input$obs))       })     }   ) } # Toggle a box on the client if (interactive()) {   library(shiny)   library(bs4Dash)    ui <- dashboardPage(     dashboardHeader(),     dashboardSidebar(),     dashboardBody(       tags$style(\"body { background-color: ghostwhite}\"),       fluidRow(         actionButton(\"toggle_box\", \"Toggle Box\"),         actionButton(\"remove_box\", \"Remove Box\", class = \"bg-danger\"),         actionButton(\"restore_box\", \"Restore Box\", class = \"bg-success\")       ),       actionButton(\"update_box\", \"Update Box\", class = \"bg-info\"),       actionButton(\"update_box2\", \"Update Box 2\", class = \"bg-info\"),       br(),       br(),       box(         title = textOutput(\"box_state\"),         id = \"mybox\",         status = \"danger\",         background = \"maroon\",         solidHeader = TRUE,         gradient = TRUE,         collapsible = TRUE,         closable = TRUE,         plotOutput(\"plot\")       )     )   )    server <- function(input, output, session) {     output$plot <- renderPlot({       req(!input$mybox$collapsed)       plot(rnorm(200))     })      output$box_state <- renderText({       state <- if (input$mybox$collapsed) \"collapsed\" else \"uncollapsed\"       paste(\"My box is\", state)     })      observeEvent(input$toggle_box, {       updateBox(\"mybox\", action = \"toggle\")     })      observeEvent(input$remove_box, {       updateBox(\"mybox\", action = \"remove\")     })      observeEvent(input$restore_box, {       updateBox(\"mybox\", action = \"restore\")     })      observeEvent(input$mybox$visible, {       collapsed <- if (input$mybox$collapsed) \"collapsed\" else \"uncollapsed\"       visible <- if (input$mybox$visible) \"visible\" else \"hidden\"       message <- paste(\"My box is\", collapsed, \"and\", visible)       showNotification(message, type = \"warning\", duration = 1)     })      observeEvent(input$update_box, {       updateBox(         \"mybox\",         action = \"update\",         options = list(           title = h2(\"hello\", dashboardBadge(1, color = \"primary\")),           status = \"warning\",           solidHeader = TRUE,           width = 12,           background = NULL,           height = \"900px\",           closable = FALSE         )       )     })      observeEvent(input$update_box2, {       updateBox(         \"mybox\",         action = \"update\",         options = list(           status = NULL,           solidHeader = FALSE,           width = 4,           background = \"green\",           height = \"500px\",           closable = TRUE         )       )     })   }    shinyApp(ui, server) }"},{"path":"https://bs4dash.rinterface.com/reference/boxDropdown.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a box dropdown item list — cardDropdown","title":"Create a box dropdown item list — cardDropdown","text":"Can used add dropdown items cardtool. insert boxDropdown.","code":""},{"path":"https://bs4dash.rinterface.com/reference/boxDropdown.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a box dropdown item list — cardDropdown","text":"","code":"cardDropdown(..., icon = shiny::icon(\"wrench\"))  cardDropdownItem(..., id = NULL, href = NULL, icon = NULL)  boxDropdown(..., icon = shiny::icon(\"wrench\"))  boxDropdownItem(..., id = NULL, href = NULL, icon = NULL)"},{"path":"https://bs4dash.rinterface.com/reference/boxDropdown.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a box dropdown item list — cardDropdown","text":"... Item content. icon Optional icon. Expect icon. id passed, item behave like action button. href Target url page.","code":""},{"path":[]},{"path":"https://bs4dash.rinterface.com/reference/boxDropdown.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Create a box dropdown item list — cardDropdown","text":"David Granjon, dgranjon@ymail.com","code":""},{"path":"https://bs4dash.rinterface.com/reference/boxLabel.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a label for Boostrap 4 card — bs4CardLabel","title":"Create a label for Boostrap 4 card — bs4CardLabel","text":"Create label Boostrap 4 card Alias bs4CardLabel See bs4CardLabel full details Alias bs4CardLabel See bs4CardLabel full details","code":""},{"path":"https://bs4dash.rinterface.com/reference/boxLabel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a label for Boostrap 4 card — bs4CardLabel","text":"","code":"bs4CardLabel(text, status, tooltip = NULL)  cardLabel(text, status, tooltip = NULL)  boxLabel(text, status, tooltip = NULL)"},{"path":"https://bs4dash.rinterface.com/reference/boxLabel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a label for Boostrap 4 card — bs4CardLabel","text":"text Label text. practice letters number. status label color status. See getAdminLTEColors. tooltip Label tooltip text hover.","code":""},{"path":[]},{"path":"https://bs4dash.rinterface.com/reference/boxLayout.html","id":null,"dir":"Reference","previous_headings":"","what":"Bootstrap 4 container for cards — bs4CardLayout","title":"Bootstrap 4 container for cards — bs4CardLayout","text":"Bootstrap 4 container cards Alias bs4CardLayout See bs4CardLayout full details","code":""},{"path":"https://bs4dash.rinterface.com/reference/boxLayout.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bootstrap 4 container for cards — bs4CardLayout","text":"","code":"bs4CardLayout(..., type = c(\"group\", \"deck\", \"columns\"))  boxLayout(..., type = c(\"group\", \"deck\", \"columns\"))"},{"path":"https://bs4dash.rinterface.com/reference/boxLayout.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bootstrap 4 container for cards — bs4CardLayout","text":"... Slot bs4Dash cards. type Container type. See https://getbootstrap.com/docs/4.0/components/card/#card-layout details.","code":""},{"path":"https://bs4dash.rinterface.com/reference/boxLayout.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Bootstrap 4 container for cards — bs4CardLayout","text":"Cards must width argument set NULL.","code":""},{"path":[]},{"path":"https://bs4dash.rinterface.com/reference/boxLayout.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bootstrap 4 container for cards — bs4CardLayout","text":"","code":"if (interactive()) {   library(shiny)   library(bs4Dash)    # with group   shinyApp(     ui = dashboardPage(       header = dashboardHeader(),       sidebar = dashboardSidebar(),       body = dashboardBody(         boxLayout(           type = \"group\",           lapply(1:4, function(i) {             box(               width = NULL,               title = paste(\"Card\", i),               closable = FALSE,               collapsible = FALSE,               \"Lorem ipsum is so fun!\"             )           })         )       ),       controlbar = dashboardControlbar(),       title = \"Box layout group\"     ),     server = function(input, output) {}   )    # with deck   shinyApp(     ui = dashboardPage(       header = dashboardHeader(),       sidebar = dashboardSidebar(),       body = dashboardBody(         boxLayout(           type = \"deck\",           lapply(1:4, function(i) {             box(               width = NULL,               title = paste(\"Card\", i),               closable = FALSE,               collapsible = FALSE,               \"Lorem ipsum is so fun!\"             )           })         )       ),       controlbar = dashboardControlbar(),       title = \"Box layout deck\"     ),     server = function(input, output) {}   )    # with columns   shinyApp(     ui = dashboardPage(       header = dashboardHeader(),       sidebar = dashboardSidebar(),       body = dashboardBody(         boxLayout(           type = \"columns\",           lapply(1:12, function(i) {             box(               width = NULL,               title = paste(\"Card\", i),               closable = FALSE,               collapsible = FALSE,               height = if (i %% 2 == 1) \"200px\",               status = if (i %% 2 == 0) \"primary\",               if (i %% 2 == 0) \"Lorem ipsum is so fun!\",               if (i == 1 | i == 7 | i == 12) img(src = \"https://via.placeholder.com/290x160\")             )           })         )       ),       controlbar = dashboardControlbar(),       title = \"Box layout columns\"     ),     server = function(input, output) {}   ) }"},{"path":"https://bs4dash.rinterface.com/reference/boxProfile.html","id":null,"dir":"Reference","previous_headings":"","what":"AdminLTE3 card profile — cardProfile","title":"AdminLTE3 card profile — cardProfile","text":"boxProfile goes inside box. Displays user informations elegant container. Create card profile item","code":""},{"path":"https://bs4dash.rinterface.com/reference/boxProfile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"AdminLTE3 card profile — cardProfile","text":"","code":"cardProfile(..., image = NULL, title, subtitle = NULL, bordered = FALSE)  cardProfileItem(title, description)  boxProfile(..., image = NULL, title, subtitle = NULL, bordered = FALSE)  boxProfileItem(title, description)"},{"path":"https://bs4dash.rinterface.com/reference/boxProfile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"AdminLTE3 card profile — cardProfile","text":"... element boxProfileItem. image Profile image, . title Item title. subtitle Subtitle. bordered Whether container border . FALSE default. description Item info.","code":""},{"path":[]},{"path":"https://bs4dash.rinterface.com/reference/boxProfile.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"AdminLTE3 card profile — cardProfile","text":"David Granjon, dgranjon@ymail.com","code":""},{"path":"https://bs4dash.rinterface.com/reference/boxProfile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"AdminLTE3 card profile — cardProfile","text":"","code":"if (interactive()) {   library(shiny)   library(bs4Dash)    shinyApp(     ui = dashboardPage(       header = dashboardHeader(),       sidebar = dashboardSidebar(         sidebarMenu(           sidebarHeader(\"Main content\"),           menuItem(             \"Profile Card\",             tabName = \"profile_card\",             icon = icon(\"desktop\")           )         )       ),       controlbar = dashboardControlbar(),       footer = dashboardFooter(),       title = \"boxProfile\",       body = dashboardBody(         tabItems(           tabItem(             tabName = \"profile_card\",             bs4Card(               status = \"primary\",               solidHeader = TRUE,               boxProfile(                 image = \"https://adminlte.io/themes/AdminLTE/dist/img/user4-128x128.jpg\",                 title = \"Nina Mcintire\",                 subtitle = \"Software Engineer\",                 bordered = TRUE,                 boxProfileItem(                   title = \"Followers\",                   description = 1322                 ),                 boxProfileItem(                   title = \"Following\",                   description = 543                 ),                 boxProfileItem(                   title = \"Friends\",                   description = 13287                 )               )             )           )         )       )     ),     server = function(input, output) {}   ) }"},{"path":"https://bs4dash.rinterface.com/reference/boxSidebar.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a sidebar for Boostrap 4 card — bs4CardSidebar","title":"Create a sidebar for Boostrap 4 card — bs4CardSidebar","text":"insert sidebar slot box.","code":""},{"path":"https://bs4dash.rinterface.com/reference/boxSidebar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a sidebar for Boostrap 4 card — bs4CardSidebar","text":"","code":"bs4CardSidebar(   ...,   id = NULL,   width = 50,   background = \"#333a40\",   startOpen = FALSE,   icon = shiny::icon(\"gears\"),   easyClose = TRUE )  updatebs4CardSidebar(id, session = shiny::getDefaultReactiveDomain())  cardSidebar(   ...,   id = NULL,   width = 50,   background = \"#333a40\",   startOpen = FALSE,   icon = shiny::icon(\"gears\"),   easyClose = TRUE )  boxSidebar(   ...,   id = NULL,   width = 50,   background = \"#333a40\",   startOpen = FALSE,   icon = shiny::icon(\"gears\"),   easyClose = TRUE )  updateCardSidebar(id, session = shiny::getDefaultReactiveDomain())  updateBoxSidebar(id, session = shiny::getDefaultReactiveDomain())"},{"path":"https://bs4dash.rinterface.com/reference/boxSidebar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a sidebar for Boostrap 4 card — bs4CardSidebar","text":"... Sidebar content. id Card sidebar id. width Sidebar opening width percentage. 50% default, means card sidebar take 50 numeric value 25 100. background Sidebar background color. Dark default. startOpen Whether sidebar open start. FALSE default. icon Sidebar icon. Expect icon. easyClose Whether close sidebar click outside. Default TRUE. session Shiny session object.","code":""},{"path":[]},{"path":"https://bs4dash.rinterface.com/reference/boxSidebar.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a sidebar for Boostrap 4 card — bs4CardSidebar","text":"","code":"# Toggle a box sidebar if (interactive()) {   library(shiny)   library(bs4Dash)    shinyApp(     ui = dashboardPage(       header = dashboardHeader(),       body = dashboardBody(         box(           title = \"Update box sidebar\",           closable = TRUE,           width = 12,           height = \"500px\",           solidHeader = FALSE,           collapsible = TRUE,           actionButton(\"update\", \"Toggle card sidebar\"),           sidebar = boxSidebar(             id = \"mycardsidebar\",             p(\"Sidebar Content\")           )         )       ),       sidebar = dashboardSidebar()     ),     server = function(input, output, session) {       observe(print(input$mycardsidebar))        observeEvent(input$update, {         updateBoxSidebar(\"mycardsidebar\")       })     }   ) }"},{"path":"https://bs4dash.rinterface.com/reference/bs4DashGallery.html","id":null,"dir":"Reference","previous_headings":"","what":"Launch the bs4Dash Gallery — bs4DashGallery","title":"Launch the bs4Dash Gallery — bs4DashGallery","text":"gallery components available bs4Dash.","code":""},{"path":"https://bs4dash.rinterface.com/reference/bs4DashGallery.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Launch the bs4Dash Gallery — bs4DashGallery","text":"","code":"bs4DashGallery()"},{"path":"https://bs4dash.rinterface.com/reference/bs4DashGallery.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Launch the bs4Dash Gallery — bs4DashGallery","text":"","code":"if (interactive()) {   bs4DashGallery()  }"},{"path":"https://bs4dash.rinterface.com/reference/callout.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Bootstrap 4 callout — bs4Callout","title":"Create a Bootstrap 4 callout — bs4Callout","text":"AdminLTE3 callout","code":""},{"path":"https://bs4dash.rinterface.com/reference/callout.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Bootstrap 4 callout — bs4Callout","text":"","code":"bs4Callout(   ...,   title,   status = c(\"warning\", \"danger\", \"info\", \"success\"),   width = 6,   elevation = NULL )  callout(   ...,   title,   status = c(\"warning\", \"danger\", \"info\", \"success\"),   width = 6,   elevation = NULL )"},{"path":"https://bs4dash.rinterface.com/reference/callout.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Bootstrap 4 callout — bs4Callout","text":"... Callout content. title Callout title. status Callout status. Valid statuses: info: #17a2b8 . success: #28a745 . warning: #ffc107 . danger: #dc3545 . width Callout width. 1 12. elevation Callout elevation.","code":""},{"path":"https://bs4dash.rinterface.com/reference/callout.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Create a Bootstrap 4 callout — bs4Callout","text":"David Granjon, dgranjon@ymail.com","code":""},{"path":"https://bs4dash.rinterface.com/reference/callout.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a Bootstrap 4 callout — bs4Callout","text":"","code":"if(interactive()){  library(shiny)  library(bs4Dash)    shinyApp(    ui = dashboardPage(      header = dashboardHeader(),      sidebar = dashboardSidebar(),      controlbar = dashboardControlbar(),      footer = dashboardFooter(),      title = \"Callout\",      body = bs4DashBody(        title = \"Callouts\",        callout(         title = \"I am a danger callout!\",         elevation = 4,         status = \"danger\",         \"There is a problem that we need to fix.          A wonderful serenity has taken possession of          my entire soul, like these sweet mornings of          spring which I enjoy with my whole heart.\"        ),        callout(         title = \"I am a danger callout!\",         status = \"warning\",         \"This is a yellow callout.\"        )      )    ),    server = function(input, output) {}  ) }"},{"path":"https://bs4dash.rinterface.com/reference/carousel.html","id":null,"dir":"Reference","previous_headings":"","what":"Bootstrap 4 carousel — bs4Carousel","title":"Bootstrap 4 carousel — bs4Carousel","text":"carousel creates carousel container display media content. carouselItem creates carousel item insert carousel","code":""},{"path":"https://bs4dash.rinterface.com/reference/carousel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bootstrap 4 carousel — bs4Carousel","text":"","code":"bs4Carousel(..., id, indicators = TRUE, width = 12, .list = NULL)  bs4CarouselItem(..., caption = NULL, active = FALSE)  carousel(..., id, indicators = TRUE, width = 12, .list = NULL)  carouselItem(..., caption = NULL, active = FALSE)"},{"path":"https://bs4dash.rinterface.com/reference/carousel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bootstrap 4 carousel — bs4Carousel","text":"... Element images, iframe, ... id Unique carousel id. indicators Whether display left right indicators. width Carousel width. 1 12. .list need pass carouselItem via lapply similar, put item instead passing ... caption Item caption. active Whether item active start.","code":""},{"path":[]},{"path":"https://bs4dash.rinterface.com/reference/carousel.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Bootstrap 4 carousel — bs4Carousel","text":"David Granjon, dgranjon@ymail.com","code":""},{"path":"https://bs4dash.rinterface.com/reference/carousel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bootstrap 4 carousel — bs4Carousel","text":"","code":"if(interactive()){  library(shiny)  library(bs4Dash)    shinyApp(    ui = dashboardPage(      header = dashboardHeader(),      sidebar = dashboardSidebar(),      body = dashboardBody(       carousel(        id = \"mycarousel\",        carouselItem(         caption = \"Item 1\",         tags$img(src = \"https://via.placeholder.com/500\")        ),        carouselItem(         caption = \"Item 2\",         tags$img(src = \"https://via.placeholder.com/500\")        )       )      ),      title = \"Carousel\"    ),    server = function(input, output) { }  ) }"},{"path":"https://bs4dash.rinterface.com/reference/column.html","id":null,"dir":"Reference","previous_headings":"","what":"Boostrap 4 column system — column","title":"Boostrap 4 column system — column","text":"function overwrites Shiny since differences Bootstrap 3 Bootstrap 4 grid systems","code":""},{"path":"https://bs4dash.rinterface.com/reference/column.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Boostrap 4 column system — column","text":"","code":"column(width, ..., offset = 0)"},{"path":"https://bs4dash.rinterface.com/reference/column.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Boostrap 4 column system — column","text":"width grid width column (must 1 12. ... Elements include within column. offset number columns offset column end previous column.","code":""},{"path":"https://bs4dash.rinterface.com/reference/column.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Boostrap 4 column system — column","text":"","code":"if (interactive()) {  library(shiny)  library(bs4Dash)    ui <- bs4DashPage(    navbar = bs4DashNavbar(),    sidebar = dashboardSidebar(      bs4SidebarMenu(        bs4SidebarMenuItem(          \"Welcome!\",          tabName = \"tab_welcome\",          icon = \"home\"        )      )    ),        body = bs4DashBody(      bs4TabItems(        bs4TabItem(          tabName = \"tab_welcome\",          fluidRow(            column(              width = 1,              offset = 11,              actionButton(                \"mybutton\",label = \"\",icon = icon(\"circle-question\")              )            )                      ),          fluidRow(            h2(\"Placeholder\")          )        )      )    )  )    server <- function(input, output, session) {}  shinyApp(ui = ui, server = server) }"},{"path":"https://bs4dash.rinterface.com/reference/dashboardBody.html","id":null,"dir":"Reference","previous_headings":"","what":"Boostrap 4 dashboard body — bs4DashBody","title":"Boostrap 4 dashboard body — bs4DashBody","text":"dashboardBody creates main body container dashboardPage. tabItems creates wrapper multiple tabItem. tabItem creates body tab content.","code":""},{"path":"https://bs4dash.rinterface.com/reference/dashboardBody.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Boostrap 4 dashboard body — bs4DashBody","text":"","code":"bs4DashBody(...)  bs4TabItems(..., .list = NULL)  bs4TabItem(tabName = NULL, ...)  dashboardBody(...)  tabItems(..., .list = NULL)  tabItem(tabName = NULL, ...)"},{"path":"https://bs4dash.rinterface.com/reference/dashboardBody.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Boostrap 4 dashboard body — bs4DashBody","text":"... Contents tab. .list Pass items list lapply family functions. tabName name tab. must correspond tabName sidebar menuItem.","code":""},{"path":[]},{"path":"https://bs4dash.rinterface.com/reference/dashboardBody.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Boostrap 4 dashboard body — bs4DashBody","text":"David Granjon, dgranjon@ymail.com","code":""},{"path":"https://bs4dash.rinterface.com/reference/dashboardBrand.html","id":null,"dir":"Reference","previous_headings":"","what":"Alternative to simple text title — bs4DashBrand","title":"Alternative to simple text title — bs4DashBrand","text":"Alternative simple text title Alias bs4DashBrand See bs4DashBrand full details","code":""},{"path":"https://bs4dash.rinterface.com/reference/dashboardBrand.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Alternative to simple text title — bs4DashBrand","text":"","code":"bs4DashBrand(title, color = NULL, href = NULL, image = NULL, opacity = 0.8)  dashboardBrand(title, color = NULL, href = NULL, image = NULL, opacity = 0.8)"},{"path":"https://bs4dash.rinterface.com/reference/dashboardBrand.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Alternative to simple text title — bs4DashBrand","text":"title Brand title. color Brand color. Valid colors defined follows: primary: #007bff . secondary: #6c757d . info: #17a2b8 . success: #28a745 . warning: #ffc107 . danger: #dc3545 . gray-dark: #343a40 . gray: #adb5bd . white: #fff . indigo: #6610f2 . lightblue: #3c8dbc . navy: #001f3f . purple: #605ca8 . fuchsia: #f012be . pink: #e83e8c . maroon: #d81b60 . orange: #ff851b . lime: #01ff70 . teal: #39cccc . olive: #3d9970 . href External link point . image External image location. opacity Brand opacity: value 0 1.","code":""},{"path":"https://bs4dash.rinterface.com/reference/dashboardBrand.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Alternative to simple text title — bs4DashBrand","text":"title tag inserted title slot bs4DashNavbar.","code":""},{"path":"https://bs4dash.rinterface.com/reference/dashboardControlbar.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Boostrap 4 dashboard right sidebar — bs4DashControlbar","title":"Create a Boostrap 4 dashboard right sidebar — bs4DashControlbar","text":"Build adminLTE3 dashboard right sidebar","code":""},{"path":"https://bs4dash.rinterface.com/reference/dashboardControlbar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Boostrap 4 dashboard right sidebar — bs4DashControlbar","text":"","code":"bs4DashControlbar(   ...,   id = NULL,   disable = FALSE,   width = 250,   collapsed = TRUE,   overlay = TRUE,   skin = NULL,   pinned = NULL )  controlbarMenu(   ...,   id = NULL,   selected = NULL,   type = c(\"tabs\", \"pills\", \"hidden\"),   vertical = FALSE,   side = \"left\",   .list = NULL )  controlbarItem(title, ..., value = title, icon = NULL)  updateControlbarMenu(   session = shiny::getDefaultReactiveDomain(),   inputId,   selected = NULL )  updateControlbar(id, session = shiny::getDefaultReactiveDomain())  dashboardControlbar(   ...,   id = NULL,   disable = FALSE,   width = 250,   collapsed = TRUE,   overlay = TRUE,   skin = NULL,   pinned = NULL )"},{"path":"https://bs4dash.rinterface.com/reference/dashboardControlbar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Boostrap 4 dashboard right sidebar — bs4DashControlbar","text":"... UI element. id Controlbar id. disable TRUE, sidebar disabled. width Controlbar width. must either number specifies width pixels, string specifies width CSS units. 250 px default. collapsed Whether control bar right side collapsed start. TRUE default. overlay Whether sidebar covers content expanded. Default TRUE. skin Controlbar skin. \"dark\" \"light\". Matches dashboardPage dark parameter value. pinned Whether block controlbar state (TRUE FALSE). Default NULL. selected value (, none supplied, title) tab selected default. NULL, first tab selected. type `\"tabs\"` Standard tab look `\"pills\"` Selected tabs use background fill color vertical Whether displays tabs vertically. Default FALSE. side Tabs side: \"left\" \"right\". .list case programmatically generated items. See example. title Display title tab value value sent tabsetPanel reports tab selected. omitted tabsetPanel id, title used. icon Optional icon appear tab. attribute valid using tabPanel within navbarPage(). session Shiny session object. inputId id tabsetPanel, navlistPanel, navbarPage object.","code":""},{"path":"https://bs4dash.rinterface.com/reference/dashboardControlbar.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Create a Boostrap 4 dashboard right sidebar — bs4DashControlbar","text":"David Granjon, dgranjon@ymail.com","code":""},{"path":"https://bs4dash.rinterface.com/reference/dashboardControlbar.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a Boostrap 4 dashboard right sidebar — bs4DashControlbar","text":"","code":"if (interactive()) {   library(shiny)   library(bs4Dash)    shinyApp(     ui = dashboardPage(       header = dashboardHeader(),       sidebar = dashboardSidebar(),       body = dashboardBody(         actionButton(inputId = \"controlbarToggle\", label = \"Toggle Controlbar\")       ),       controlbar = dashboardControlbar(         id = \"controlbar\",         collapsed = FALSE,         overlay = TRUE       ),       title = \"updateControlbar\"     ),     server = function(input, output, session) {       observeEvent(input$controlbar, {         if (input$controlbar) {           showModal(modalDialog(             title = \"Alert\",             \"The controlbar is opened.\",             easyClose = TRUE,             footer = NULL           ))         }       })        observeEvent(input$controlbarToggle, {         updateControlbar(id = \"controlbar\", session = session)       })        observe({         print(input$controlbar)       })     }   ) }"},{"path":"https://bs4dash.rinterface.com/reference/dashboardFooter.html","id":null,"dir":"Reference","previous_headings":"","what":"Dashboard Footer — bs4DashFooter","title":"Dashboard Footer — bs4DashFooter","text":"creates dashboard footer insert dashboardPage.","code":""},{"path":"https://bs4dash.rinterface.com/reference/dashboardFooter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dashboard Footer — bs4DashFooter","text":"","code":"bs4DashFooter(left = NULL, right = NULL, fixed = FALSE)  dashboardFooter(left = NULL, right = NULL, fixed = FALSE)"},{"path":"https://bs4dash.rinterface.com/reference/dashboardFooter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Dashboard Footer — bs4DashFooter","text":"left Left text. right Right text. fixed Whether fix footer. Default FALSE.","code":""},{"path":"https://bs4dash.rinterface.com/reference/dashboardFooter.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Dashboard Footer — bs4DashFooter","text":"David Granjon, dgranjon@ymail.com","code":""},{"path":"https://bs4dash.rinterface.com/reference/dashboardHeader.html","id":null,"dir":"Reference","previous_headings":"","what":"Boostrap 4 dashboard navbar — bs4DashNavbar","title":"Boostrap 4 dashboard navbar — bs4DashNavbar","text":"dashboardHeader creates adminLTE3 dashboard navbar included dashboardPage.","code":""},{"path":"https://bs4dash.rinterface.com/reference/dashboardHeader.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Boostrap 4 dashboard navbar — bs4DashNavbar","text":"","code":"bs4DashNavbar(   ...,   title = NULL,   titleWidth = NULL,   disable = FALSE,   .list = NULL,   leftUi = NULL,   rightUi = NULL,   skin = \"light\",   status = \"white\",   border = TRUE,   compact = FALSE,   sidebarIcon = shiny::icon(\"bars\"),   controlbarIcon = shiny::icon(\"table-cells\"),   fixed = FALSE )  dashboardHeader(   ...,   title = NULL,   titleWidth = NULL,   disable = FALSE,   .list = NULL,   leftUi = NULL,   rightUi = NULL,   skin = \"light\",   status = \"white\",   border = TRUE,   compact = FALSE,   sidebarIcon = shiny::icon(\"bars\"),   controlbarIcon = shiny::icon(\"table-cells\"),   fixed = FALSE )"},{"path":"https://bs4dash.rinterface.com/reference/dashboardHeader.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Boostrap 4 dashboard navbar — bs4DashNavbar","text":"... UI element left right Ui. Can include navbarMenu host navigation navbar. title Dashboard title (displayed top-left side). Alternatively, use dashboardBrand evolved title. titleWidth argument deprecated; bs4Dash (AdminLTE3) title width tightly related sidebar width, contrary shinydashboard (AdminLTE2). disable TRUE, display header bar. .list optional list containing items put header. ... arguments, list format. can useful working programmatically generated items. leftUi Custom left Ui content. element like dropdownMenu. rightUi Custom right Ui content. element like dropdownMenu. skin Navbar skin. \"dark\" \"light\". status Navbar status. Valid statuses defined follows: primary: #007bff . secondary: #6c757d . info: #17a2b8 . success: #28a745 . warning: #ffc107 . danger: #dc3545 . gray-dark: #343a40 . gray: #adb5bd . white: #fff . indigo: #6610f2 . lightblue: #3c8dbc . navy: #001f3f . purple: #605ca8 . fuchsia: #f012be . pink: #e83e8c . maroon: #d81b60 . orange: #ff851b . lime: #01ff70 . teal: #39cccc . olive: #3d9970 . border Whether separate navbar body border. TRUE default. compact Whether items compacted. FALSE default. sidebarIcon Icon main sidebar toggle. controlbarIcon Icon toggle controlbar (left). fixed Whether fix navbar top. FALSE default.","code":""},{"path":"https://bs4dash.rinterface.com/reference/dashboardHeader.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Boostrap 4 dashboard navbar — bs4DashNavbar","text":"David Granjon, dgranjon@ymail.com","code":""},{"path":"https://bs4dash.rinterface.com/reference/dashboardPage.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Boostrap 4 dashboard page — bs4DashPage","title":"Create a Boostrap 4 dashboard page — bs4DashPage","text":"Build adminLTE3 dashboard page","code":""},{"path":"https://bs4dash.rinterface.com/reference/dashboardPage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Boostrap 4 dashboard page — bs4DashPage","text":"","code":"bs4DashPage(   header,   sidebar,   body,   controlbar = NULL,   footer = NULL,   title = NULL,   skin = NULL,   freshTheme = NULL,   preloader = NULL,   options = NULL,   fullscreen = FALSE,   help = FALSE,   dark = FALSE,   scrollToTop = FALSE )  dashboardPage(   header,   sidebar,   body,   controlbar = NULL,   footer = NULL,   title = NULL,   skin = NULL,   freshTheme = NULL,   preloader = NULL,   options = NULL,   fullscreen = FALSE,   help = FALSE,   dark = FALSE,   scrollToTop = FALSE )"},{"path":"https://bs4dash.rinterface.com/reference/dashboardPage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Boostrap 4 dashboard page — bs4DashPage","text":"header Slot bs4DashNavbar. sidebar Slot bs4DashSidebar. body Slot bs4DashBody. controlbar Slot bs4DashControlbar (right side). footer Slot bs4DashFooter. title App title. skin Deprecated skin parameters. See skinSelector live theming. freshTheme skin powered fresh package. compatible skin. See https://dreamrs.github.io/fresh/articles/vars-shinydashboard.html. preloader bs4Dash uses waiter (see https://waiter.john-coene.com/#/). Pass list like list(html = spin_1(), color = \"#333e48\") configure waiterShowOnLoad (refer package help styles). options Extra option overwrite vanilla AdminLTE configuration. See https://adminlte.io/themes/AdminLTE/documentation/index.html#adminlte-options. Expect list. fullscreen Whether allow fullscreen feature navbar. Default FALSE. help Whether enable/disable popovers tooltips. allows seamlessly use tooltip popover without individually toggle . Default FALSE, toggle shown enabled. TRUE, tooltips popovers enabled. Set NULL want hide help icon. dark Whether display toggle switch dark light mode dashboardHeader. Default FALSE, app starts light mode, possibility switch dark. TRUE, app starts dark possibility switch back light. NULL, toggle shown app starts light, always . scrollToTop Whether display scroll top button whenever page height large. Default FALSE.","code":""},{"path":"https://bs4dash.rinterface.com/reference/dashboardPage.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Create a Boostrap 4 dashboard page — bs4DashPage","text":"David Granjon, dgranjon@ymail.com","code":""},{"path":"https://bs4dash.rinterface.com/reference/dashboardPage.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a Boostrap 4 dashboard page — bs4DashPage","text":"","code":"if (interactive()) {   library(shiny)   library(bs4Dash)   library(fresh)    shinyApp(     ui = dashboardPage(       freshTheme = create_theme(         bs4dash_vars(           navbar_light_color = \"#bec5cb\",           navbar_light_active_color = \"#FFF\",           navbar_light_hover_color = \"#FFF\"         ),         bs4dash_yiq(           contrasted_threshold = 10,           text_dark = \"#FFF\",           text_light = \"#272c30\"         ),         bs4dash_layout(           main_bg = \"#353c42\"         ),         bs4dash_sidebar_light(           bg = \"#272c30\",           color = \"#bec5cb\",           hover_color = \"#FFF\",           submenu_bg = \"#272c30\",           submenu_color = \"#FFF\",           submenu_hover_color = \"#FFF\"         ),         bs4dash_status(           primary = \"#5E81AC\", danger = \"#BF616A\", light = \"#272c30\"         ),         bs4dash_color(           gray_900 = \"#FFF\", white = \"#272c30\"         )       ),       options = NULL,       header = dashboardHeader(         title = dashboardBrand(           title = \"My dashboard\",           color = \"primary\",           href = \"https://adminlte.io/themes/v3\",           image = \"https://adminlte.io/themes/v3/dist/img/AdminLTELogo.png\"         )       ),       sidebar = dashboardSidebar(),       body = dashboardBody(         box(status = \"danger\"),         box(status = \"primary\"),         box(status = \"orange\")       ),       controlbar = dashboardControlbar(),       title = \"DashboardPage\"     ),     server = function(input, output) { }   ) }"},{"path":"https://bs4dash.rinterface.com/reference/dashboardSidebar.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Boostrap 4 dashboard main sidebar — bs4DashSidebar","title":"Create a Boostrap 4 dashboard main sidebar — bs4DashSidebar","text":"dashboardSidebar creates adminLTE3 dashboard main sidebar insert sidebar slot dashboardPage. updateSidebar toggles dashboardSidebar client. sidebarMenu creates menu dashboardSidebar. menuItem creates item put sidebarMenu. menuSubItem creates item put menuItem. sidebarHeader creates header put dashboardSidebar. sidebarUserPanel creates user Panel put dashboardSidebar. updateTabItems controls active tab tabItems server. behaves just like updateTabsetPanel.","code":""},{"path":"https://bs4dash.rinterface.com/reference/dashboardSidebar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Boostrap 4 dashboard main sidebar — bs4DashSidebar","text":"","code":"bs4DashSidebar(   ...,   disable = FALSE,   width = NULL,   skin = NULL,   status = \"primary\",   elevation = 4,   collapsed = FALSE,   minified = TRUE,   expandOnHover = TRUE,   fixed = TRUE,   id = NULL,   customArea = NULL )  updatebs4Sidebar(id, session = shiny::getDefaultReactiveDomain())  bs4SidebarMenu(   ...,   id = NULL,   .list = NULL,   flat = FALSE,   compact = FALSE,   childIndent = TRUE,   legacy = FALSE )  bs4SidebarMenuItem(   text,   ...,   icon = NULL,   badgeLabel = NULL,   badgeColor = \"success\",   tabName = NULL,   href = NULL,   newTab = TRUE,   selected = NULL,   expandedName = as.character(gsub(\"[[:space:]]\", \"\", text)),   startExpanded = FALSE,   condition = NULL,   .list = NULL )  bs4SidebarMenuSubItem(   text,   tabName = NULL,   href = NULL,   newTab = NULL,   icon = shiny::icon(\"angles-right\"),   selected = NULL )  bs4SidebarHeader(title)  bs4SidebarUserPanel(name, image = NULL)  updatebs4TabItems(   session = shiny::getDefaultReactiveDomain(),   inputId,   selected = NULL )  dashboardSidebar(   ...,   disable = FALSE,   width = NULL,   skin = NULL,   status = \"primary\",   elevation = 4,   collapsed = FALSE,   minified = TRUE,   expandOnHover = TRUE,   fixed = TRUE,   id = NULL,   customArea = NULL )  updateSidebar(id, session = shiny::getDefaultReactiveDomain())  sidebarHeader(title)  sidebarMenu(   ...,   id = NULL,   .list = NULL,   flat = FALSE,   compact = FALSE,   childIndent = TRUE,   legacy = FALSE )  sidebarUserPanel(name, image = NULL)  menuItem(   text,   ...,   icon = NULL,   badgeLabel = NULL,   badgeColor = \"success\",   tabName = NULL,   href = NULL,   newTab = TRUE,   selected = NULL,   expandedName = as.character(gsub(\"[[:space:]]\", \"\", text)),   startExpanded = FALSE,   condition = NULL,   .list = NULL )  menuSubItem(   text,   tabName = NULL,   href = NULL,   newTab = NULL,   icon = shiny::icon(\"angles-right\"),   selected = NULL )  updateTabItems(   session = shiny::getDefaultReactiveDomain(),   inputId,   selected = NULL )"},{"path":"https://bs4dash.rinterface.com/reference/dashboardSidebar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Boostrap 4 dashboard main sidebar — bs4DashSidebar","text":"... menuSubItem. disable TRUE, sidebar disabled. width width sidebar. must either number specifies width pixels, string specifies width CSS units. skin Sidebar skin. \"dark\" \"light\". Matches dashboardPage dark parameter value. status Sidebar status. Valid statuses defined follows: primary: #007bff . secondary: #6c757d . info: #17a2b8 . success: #28a745 . warning: #ffc107 . danger: #dc3545 . gray-dark: #343a40 . gray: #adb5bd . white: #fff . indigo: #6610f2 . lightblue: #3c8dbc . navy: #001f3f . purple: #605ca8 . fuchsia: #f012be . pink: #e83e8c . maroon: #d81b60 . orange: #ff851b . lime: #01ff70 . teal: #39cccc . olive: #3d9970 . elevation Sidebar elevation. 4 default (5). collapsed TRUE, sidebar collapsed app startup. minified Whether slightly close sidebar still show item icons. Default TRUE. expandOnHover Whether expand sidebar om hover. TRUE default. fixed Whether fix sidebar. Default TRUE. id sidebarMenu, id present, id used Shiny input value, report tab selected. example, id=\"tabs\", input$tabs tabName currently-selected menuItem. customArea Sidebar bottom space area. works sidebar fixed. session Shiny session object. .list optional list containing items put menu ... arguments, list format. can useful working programmatically generated items. flat Whether sidebar items flat design. FALSE default. compact Whether items compacted. FALSE default. childIndent Whether indent children. TRUE default. legacy Whether use old adminLTE2 item selection display. Default FALSE. text Item name. icon icon tag, created icon. NULL, display icon. badgeLabel label optional badge. Usually number short word like \"new\". badgeColor color badge. Valid colors: primary: #007bff . secondary: #6c757d . info: #17a2b8 . success: #28a745 . warning: #ffc107 . danger: #dc3545 . tabName correspond exactly tabName given tabItem. href link address. compatible tabName. newTab href supplied, link open new browser tab? selected TRUE, menuSubItem start selected. item selected=TRUE. expandedName unique name given menuItem serves indicate one () currently expanded. (applicable menuItems children mostly useful bookmarking state.) startExpanded Whether expand menuItem start. condition using menuItem conditionalPanel, write condition (see https://github.com/RinteRface/bs4Dash/issues/35). title title. name Name user. image filename URL use image person. local file, image contained www/ subdirectory application. inputId id tabsetPanel, navlistPanel, navbarPage object.","code":""},{"path":"https://bs4dash.rinterface.com/reference/dashboardSidebar.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Create a Boostrap 4 dashboard main sidebar — bs4DashSidebar","text":"See examples use case condition parameter.","code":""},{"path":[]},{"path":"https://bs4dash.rinterface.com/reference/dashboardSidebar.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Create a Boostrap 4 dashboard main sidebar — bs4DashSidebar","text":"David Granjon, dgranjon@ymail.com","code":""},{"path":"https://bs4dash.rinterface.com/reference/dashboardSidebar.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a Boostrap 4 dashboard main sidebar — bs4DashSidebar","text":"","code":"if (interactive()) {   library(shiny)   library(bs4Dash)    shinyApp(     ui = dashboardPage(       header = dashboardHeader(),       sidebar = dashboardSidebar(id = \"sidebar\"),       body = dashboardBody(         actionButton(inputId = \"sidebarToggle\", label = \"Toggle Sidebar\")       )     ),     server = function(input, output, session) {       observeEvent(input$sidebar, {         if (input$sidebar) {           showModal(modalDialog(             title = \"Alert\",             \"The sidebar is opened.\",             easyClose = TRUE,             footer = NULL           ))         }       })        observeEvent(input$sidebarToggle, {         updateSidebar(id = \"sidebar\", session = session)       })        observe({         print(input$sidebar)       })     }   ) } if (interactive()) {   # sidebarItem with conditional value   library(shiny)   library(bs4Dash)    ui <- dashboardPage(     dashboardHeader(),     dashboardSidebar(       sidebarMenu(         id = \"sidebarMenu\",         menuItem(           text = \"Tab 1\",           tabName = \"tab1\"         ),         menuItem(           condition = \"input.show == true\",           text = \"Tab 2\",           tabName = \"tab2\"         )       )     ),     dashboardBody(       tabItems(         tabItem(           tabName = \"tab1\",           h1(\"Welcome!\"),           checkboxInput(\"show\", \"Show Tab 2\", FALSE)         ),         tabItem(           tabName = \"tab2\",           h1(\"Hey! You found me!\")         )       )     )   )   server <- function(input, output) {}   shinyApp(ui = ui, server = server) } ## Only run this example in interactive R sessions if (interactive()) {   library(shiny)   library(bs4Dash)    shinyApp(     ui = dashboardPage(       header = dashboardHeader(skin = \"dark\"),       body = dashboardBody(         tabItems(           tabItem(             tabName = \"tab1\",             sliderInput(\"obs\", \"Number of observations:\",               min = 0, max = 1000, value = 500             ),             plotOutput(\"distPlot\")           ),           tabItem(             tabName = \"tab2\",             checkboxGroupInput(               \"variable\", \"Variables to show:\",               c(                 \"Cylinders\" = \"cyl\",                 \"Transmission\" = \"am\",                 \"Gears\" = \"gear\"               )             ),             tableOutput(\"data\")           ),           tabItem(             tabName = \"tab3\",             checkboxInput(\"val\", \"Some value\", FALSE),             textOutput(\"value\")           ),           tabItem(             tabName = \"tab4\",             \"Nothing special here!\"           ),           tabItem(             tabName = \"tab5\",             \"Tab 5\"           ),           tabItem(             tabName = \"tab6\",             \"Tab 6\"           ),           tabItem(             tabName = \"tab7\",             \"Tab 7\"           )         )       ),       sidebar = dashboardSidebar(         skin = \"light\",         inputId = \"sidebarState\",         sidebarMenu(           id = \"sidebar\",           menuItem(             text = \"Tab 1\",             tabName = \"tab1\",             icon = icon(\"van-shuttle\")           ),           menuItem(             text = \"Tab 2\",             tabName = \"tab2\",             icon = icon(\"shuttle-space\"),             selected = TRUE           ),           menuItem(             text = \"Item List 1\",             icon = icon(\"bars\"),             startExpanded = TRUE,             menuSubItem(               text = \"Item 3\",               tabName = \"tab3\",               icon = icon(\"circle\")             ),             menuSubItem(               text = \"Item 4\",               tabName = \"tab4\",               icon = icon(\"circle\")             )           ),           menuItem(             text = \"Item List 2\",             icon = icon(\"bars\"),             startExpanded = FALSE,             menuSubItem(               text = \"Item 5\",               tabName = \"tab5\",               icon = icon(\"circle\")             ),             menuSubItem(               text = \"Item 6\",               tabName = \"tab6\",               icon = icon(\"circle\")             )           ),           menuItem(             text = \"Tab 7\",             tabName = \"tab7\",             icon = icon(\"house\")           )         )       ),       controlbar = dashboardControlbar(         skin = \"light\",         sliderInput(           inputId = \"controller\",           label = \"Update the first tabset\",           min = 1,           max = 6,           value = 2         )       ),       footer = bs4DashFooter()     ),     server = function(input, output, session) {       observe(print(input$sidebarItemExpanded))       observe(print(input$sidebar))        # update tabset1       observeEvent(input$controller,         {           updateTabItems(             session,             inputId = \"sidebar\",             selected = paste0(\"tab\", input$controller)           )         },         ignoreInit = TRUE       )        output$distPlot <- renderPlot({         hist(rnorm(input$obs))       })        output$data <- renderTable(         {           mtcars[, c(\"mpg\", input$variable), drop = FALSE]         },         rownames = TRUE       )        output$value <- renderText({         input$val       })     }   ) }"},{"path":"https://bs4dash.rinterface.com/reference/dashboardUser.html","id":null,"dir":"Reference","previous_headings":"","what":"Bootstrap 4 user profile. — bs4UserMenu","title":"Bootstrap 4 user profile. — bs4UserMenu","text":"dashboardUser insert rightUi leftUi slot dashboardHeader. can inserted dashboardUser. can used placeholder dynamically-generated dashboardUser.","code":""},{"path":"https://bs4dash.rinterface.com/reference/dashboardUser.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bootstrap 4 user profile. — bs4UserMenu","text":"","code":"bs4UserMenu(   ...,   name = NULL,   image = NULL,   title = NULL,   subtitle = NULL,   footer = NULL,   status = NULL )  dashboardUserItem(item, width)  userOutput(id, tag = shiny::tags$li)  renderUser(expr, env = parent.frame(), quoted = FALSE, outputArgs = list())  dashboardUser(   ...,   name = NULL,   image = NULL,   title = NULL,   subtitle = NULL,   footer = NULL,   status = NULL )"},{"path":"https://bs4dash.rinterface.com/reference/dashboardUser.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bootstrap 4 user profile. — bs4UserMenu","text":"... Body content. Slot dashboardUserItem. name User name. image User profile picture. title title. subtitle subtitle. footer Footer . status Ribbon status. Valid colors defined follows: primary: #007bff . secondary: #6c757d . info: #17a2b8 . success: #28a745 . warning: #ffc107 . danger: #dc3545 . gray-dark: #343a40 . gray: #adb5bd . white: #fff . indigo: #6610f2 . lightblue: #3c8dbc . navy: #001f3f . purple: #605ca8 . fuchsia: #f012be . pink: #e83e8c . maroon: #d81b60 . orange: #ff851b . lime: #01ff70 . teal: #39cccc . olive: #3d9970 . item HTML Tag. width Item width 1 12. id Output variable name. tag tag function, like tags$li tags$ul. expr expression returns Shiny tag object, HTML(), list objects. env parent environment reactive expression. default, calling environment, defining ordinary non-reactive expression. expr quosure quoted TRUE, env ignored. quoted TRUE, quote()ed value expr used expr evaluated. expr quosure like use expression value expr, must set quoted TRUE. outputArgs list arguments passed implicit call uiOutput() renderUI used interactive R Markdown document.","code":""},{"path":[]},{"path":"https://bs4dash.rinterface.com/reference/dashboardUser.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bootstrap 4 user profile. — bs4UserMenu","text":"","code":"if (interactive()) {   library(shiny)   library(bs4Dash)    shinyApp(     ui = dashboardPage(       header = dashboardHeader(rightUi = userOutput(\"user\")),       sidebar = dashboardSidebar(),       body = dashboardBody(),       title = \"DashboardPage\"     ),     server = function(input, output) {       output$user <- renderUser({         dashboardUser(           name = \"Divad Nojnarg\",           image = \"https://adminlte.io/themes/AdminLTE/dist/img/user2-160x160.jpg\",           title = \"shinydashboardPlus\",           subtitle = \"Author\",           footer = p(\"The footer\", class = \"text-center\"),           fluidRow(             dashboardUserItem(               width = 6,               \"Item 1\"             ),             dashboardUserItem(               width = 6,               \"Item 2\"             )           )         )       })     }   ) }"},{"path":"https://bs4dash.rinterface.com/reference/dropdownDivider.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a box dropdown divider — dropdownDivider","title":"Create a box dropdown divider — dropdownDivider","text":"Create box dropdown divider","code":""},{"path":"https://bs4dash.rinterface.com/reference/dropdownDivider.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a box dropdown divider — dropdownDivider","text":"","code":"dropdownDivider()"},{"path":"https://bs4dash.rinterface.com/reference/dropdownDivider.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Create a box dropdown divider — dropdownDivider","text":"Useful separate 2 sections dropdown items.","code":""},{"path":"https://bs4dash.rinterface.com/reference/dropdownDivider.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Create a box dropdown divider — dropdownDivider","text":"David Granjon, dgranjon@ymail.com","code":""},{"path":"https://bs4dash.rinterface.com/reference/dropdownHeader.html","id":null,"dir":"Reference","previous_headings":"","what":"Dropdown header helper — dropdownHeader","title":"Dropdown header helper — dropdownHeader","text":"Display header text within dropdown menu","code":""},{"path":"https://bs4dash.rinterface.com/reference/dropdownHeader.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dropdown header helper — dropdownHeader","text":"","code":"dropdownHeader(text)"},{"path":"https://bs4dash.rinterface.com/reference/dropdownHeader.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Dropdown header helper — dropdownHeader","text":"text Text display.","code":""},{"path":"https://bs4dash.rinterface.com/reference/dropdownHeader.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Dropdown header helper — dropdownHeader","text":"shiny tag.","code":""},{"path":"https://bs4dash.rinterface.com/reference/dropdownMenu.html","id":null,"dir":"Reference","previous_headings":"","what":"Boostrap 4 dashboard dropdown menu — bs4DropdownMenu","title":"Boostrap 4 dashboard dropdown menu — bs4DropdownMenu","text":"dropdownMenu creates adminLTE3 dashboard dropdown menu, inserted dashboardHeader. messageItem creates message item place dropdownMenu. messageItem creates message item place dropdownMenu. taskItem creates task item place dropdownMenu.","code":""},{"path":"https://bs4dash.rinterface.com/reference/dropdownMenu.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Boostrap 4 dashboard dropdown menu — bs4DropdownMenu","text":"","code":"bs4DropdownMenu(   ...,   type = c(\"messages\", \"notifications\", \"tasks\"),   badgeStatus = \"primary\",   icon = NULL,   headerText = NULL,   .list = NULL,   href = NULL )  messageItem(   from,   message,   icon = shiny::icon(\"user\"),   time = NULL,   href = NULL,   image = NULL,   color = \"secondary\",   inputId = NULL )  notificationItem(   text,   icon = shiny::icon(\"triangle-exclamation\"),   status = \"success\",   href = NULL,   inputId = NULL )  taskItem(text, value = 0, color = \"info\", href = NULL, inputId = NULL)  dropdownMenu(   ...,   type = c(\"messages\", \"notifications\", \"tasks\"),   badgeStatus = \"primary\",   icon = NULL,   headerText = NULL,   .list = NULL,   href = NULL )"},{"path":"https://bs4dash.rinterface.com/reference/dropdownMenu.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Boostrap 4 dashboard dropdown menu — bs4DropdownMenu","text":"... Items put menu. Typically, message menus contain messageItems, notification menus contain notificationItems, task menus contain taskItems. type type menu. one \"messages\", \"notifications\", \"tasks\". badgeStatus status badge displays number items   menu. determines badge's color. Valid statuses defined follows: primary: #007bff . secondary: #6c757d . info: #17a2b8 . success: #28a745 . warning: #ffc107 . danger: #dc3545 . . value NULL means display badge. icon icon tag, created icon. headerText optional text argument used header dropdown menu (visible menu expanded). none provided user, default \"x messages,\" x number items menu (type specified \"notifications\" \"tasks,\" default text shows \"x notifications\"  \"x tasks,\" respectively). .list optional list containing items put menu ... arguments, list format. can useful working programmatically generated items. href optional URL link . message . message Text message. time String representing time message sent. string may used. example, relative date/time like \"5 minutes\", \"today\", \"12:30pm yesterday\", absolute time, like \"2014-12-01 13:45\". NULL, time displayed. image User image. color color bar. Valid colors defined follows: primary: #007bff . secondary: #6c757d . info: #17a2b8 . success: #28a745 . warning: #ffc107 . danger: #dc3545 . gray-dark: #343a40 . gray: #adb5bd . white: #fff . indigo: #6610f2 . lightblue: #3c8dbc . navy: #001f3f . purple: #605ca8 . fuchsia: #f012be . pink: #e83e8c . maroon: #d81b60 . orange: #ff851b . lime: #01ff70 . teal: #39cccc . olive: #3d9970 . inputId Whether allow item act actionButton. text task text. status status item. determines item's background   color. Valid statuses defined follows: primary: #007bff . secondary: #6c757d . info: #17a2b8 . success: #28a745 . warning: #ffc107 . danger: #dc3545 . gray-dark: #343a40 . gray: #adb5bd . white: #fff . indigo: #6610f2 . lightblue: #3c8dbc . navy: #001f3f . purple: #605ca8 . fuchsia: #f012be . pink: #e83e8c . maroon: #d81b60 . orange: #ff851b . lime: #01ff70 . teal: #39cccc . olive: #3d9970 . value percent value use bar.","code":""},{"path":[]},{"path":"https://bs4dash.rinterface.com/reference/dropdownMenu.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Boostrap 4 dashboard dropdown menu — bs4DropdownMenu","text":"David Granjon, dgranjon@ymail.com","code":""},{"path":"https://bs4dash.rinterface.com/reference/dropdownMenu.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Boostrap 4 dashboard dropdown menu — bs4DropdownMenu","text":"","code":"if (interactive()) {   library(shiny)   library(bs4Dash)    shinyApp(     ui = dashboardPage(       header = dashboardHeader(         rightUi = dropdownMenu(           badgeStatus = \"danger\",           type = \"messages\",           messageItem(             inputId = \"triggerAction1\",             message = \"message 1\",             from = \"Divad Nojnarg\",             image = \"https://adminlte.io/themes/v3/dist/img/user3-128x128.jpg\",             time = \"today\",             color = \"lime\"           )         ),         leftUi = tagList(           dropdownMenu(             badgeStatus = \"info\",             type = \"notifications\",             notificationItem(               inputId = \"triggerAction2\",               text = \"Error!\",               status = \"danger\"             )           ),           dropdownMenu(             badgeStatus = \"info\",             type = \"tasks\",             taskItem(               inputId = \"triggerAction3\",               text = \"My progress\",               color = \"orange\",               value = 10             )           )         )       ),       sidebar = dashboardSidebar(),       controlbar = dashboardControlbar(),       footer = dashboardFooter(),       title = \"dropdownMenu\",       body = dashboardBody()     ),     server = function(input, output) {       observeEvent(input$triggerAction1, {         showModal(modalDialog(           title = \"Important message\",           \"This is an important message!\"         ))       })     }   ) }"},{"path":"https://bs4dash.rinterface.com/reference/dropdownMenuOutput.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a dropdown menu output (client side) — dropdownMenuOutput","title":"Create a dropdown menu output (client side) — dropdownMenuOutput","text":"UI-side function creating dynamic dropdown menu.","code":""},{"path":"https://bs4dash.rinterface.com/reference/dropdownMenuOutput.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a dropdown menu output (client side) — dropdownMenuOutput","text":"","code":"dropdownMenuOutput(outputId)"},{"path":"https://bs4dash.rinterface.com/reference/dropdownMenuOutput.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a dropdown menu output (client side) — dropdownMenuOutput","text":"outputId Output variable name.","code":""},{"path":[]},{"path":"https://bs4dash.rinterface.com/reference/findSidebarItem.html","id":null,"dir":"Reference","previous_headings":"","what":"Internally used by sidebarMenu to find treeview items and normal items. — findSidebarItem","title":"Internally used by sidebarMenu to find treeview items and normal items. — findSidebarItem","text":"Internally used sidebarMenu find treeview items normal items.","code":""},{"path":"https://bs4dash.rinterface.com/reference/findSidebarItem.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internally used by sidebarMenu to find treeview items and normal items. — findSidebarItem","text":"","code":"findSidebarItem(items, regex)"},{"path":"https://bs4dash.rinterface.com/reference/findSidebarItem.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Internally used by sidebarMenu to find treeview items and normal items. — findSidebarItem","text":"items List search . regex Regex apply.","code":""},{"path":"https://bs4dash.rinterface.com/reference/getAdminLTEColors.html","id":null,"dir":"Reference","previous_headings":"","what":"Get all AdminLTE colors. — getAdminLTEColors","title":"Get all AdminLTE colors. — getAdminLTEColors","text":"Get AdminLTE colors.","code":""},{"path":"https://bs4dash.rinterface.com/reference/getAdminLTEColors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get all AdminLTE colors. — getAdminLTEColors","text":"","code":"getAdminLTEColors()"},{"path":"https://bs4dash.rinterface.com/reference/infoBox.html","id":null,"dir":"Reference","previous_headings":"","what":"Boostrap 4 info box — renderbs4InfoBox","title":"Boostrap 4 info box — renderbs4InfoBox","text":"beautiful AdminLTE3 info box.","code":""},{"path":"https://bs4dash.rinterface.com/reference/infoBox.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Boostrap 4 info box — renderbs4InfoBox","text":"","code":"renderbs4InfoBox(expr, env = parent.frame(), quoted = FALSE)  bs4InfoBoxOutput(outputId, width = 4)  bs4InfoBox(   title,   value = NULL,   subtitle = NULL,   icon = shiny::icon(\"chart-bar\"),   color = NULL,   width = 4,   href = NULL,   fill = FALSE,   gradient = FALSE,   elevation = NULL,   iconElevation = NULL,   tabName = NULL )  infoBox(   title,   value = NULL,   subtitle = NULL,   icon = shiny::icon(\"chart-bar\"),   color = NULL,   width = 4,   href = NULL,   fill = FALSE,   gradient = FALSE,   elevation = NULL,   iconElevation = NULL,   tabName = NULL )  infoBoxOutput(outputId, width = 4)  renderInfoBox(expr, env = parent.frame(), quoted = FALSE)"},{"path":"https://bs4dash.rinterface.com/reference/infoBox.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Boostrap 4 info box — renderbs4InfoBox","text":"expr expression returns Shiny tag object, HTML(), list objects. env parent environment reactive expression. default, calling environment, defining ordinary non-reactive expression. expr quosure quoted TRUE, env ignored. quoted TRUE, quote()ed value expr used expr evaluated. expr quosure like use expression value expr, must set quoted TRUE. outputId Output variable name. width width box, using Bootstrap grid system. used row-based layouts. overall width region 12, default width 4 occupies 1/3 width. column-based layouts, use NULL width; width set column contains box. title Info box title. value value display box. Usually number short text. subtitle extra UI element. icon icon tag, created icon. color color box. Valid colors defined follows: primary: #007bff . secondary: #6c757d . info: #17a2b8 . success: #28a745 . warning: #ffc107 . danger: #dc3545 . gray-dark: #343a40 . gray: #adb5bd . white: #fff . indigo: #6610f2 . lightblue: #3c8dbc . navy: #001f3f . purple: #605ca8 . fuchsia: #f012be . pink: #e83e8c . maroon: #d81b60 . orange: #ff851b . lime: #01ff70 . teal: #39cccc . olive: #3d9970 . href optional URL link . fill FALSE (default), use white background content, color argument background icon. TRUE, use color argument background content; icon use color slightly darkened background. gradient Whether use gradient style background color. Default FALSE. elevation Box elevation. iconElevation Icon elevation compared main content (relief). 3 default. tabName Optional: infoBox behaves like menuItem may used navigate multiple tabItem.","code":""},{"path":[]},{"path":"https://bs4dash.rinterface.com/reference/infoBox.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Boostrap 4 info box — renderbs4InfoBox","text":"David Granjon, dgranjon@ymail.com","code":""},{"path":"https://bs4dash.rinterface.com/reference/infoBox.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Boostrap 4 info box — renderbs4InfoBox","text":"","code":"if (interactive()) {   library(shiny)   library(bs4Dash)    shinyApp(     ui = dashboardPage(       header = dashboardHeader(),       sidebar = dashboardSidebar(         sidebarMenu(           menuItem(             text = \"Item 1\",             tabName = \"tab1\"           ),           menuItem(             text = \"Item 2\",             tabName = \"tab2\"           )         )       ),       controlbar = dashboardControlbar(),       footer = dashboardFooter(),       title = \"test\",       body = dashboardBody(         tabItems(           tabItem(             tabName = \"tab1\",             fluidRow(               infoBox(                 title = \"Messages\",                 value = 1410,                 icon = icon(\"envelope\"),                 color = \"orange\",                 fill = TRUE,               ),               infoBox(                 title = \"Bookmarks\",                 color = \"info\",                 value = 240,                 icon = icon(\"bookmark\"),                 tabName = \"tab2\"               )             )           ),           tabItem(             tabName = \"tab2\",             infoBox(               title = \"Comments\",               color = \"indigo\",               gradient = TRUE,               value = 41410,               subtitle = \"A subtitle\",               icon = icon(\"comments\"),               tabName = \"tab1\"             )           )         )       )     ),     server = function(input, output) {}   ) }"},{"path":"https://bs4dash.rinterface.com/reference/insertTab.html","id":null,"dir":"Reference","previous_headings":"","what":"Insert a tabPanel in a tabsetPanel — insertTab","title":"Insert a tabPanel in a tabsetPanel — insertTab","text":"Insert tabPanel tabsetPanel","code":""},{"path":"https://bs4dash.rinterface.com/reference/insertTab.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Insert a tabPanel in a tabsetPanel — insertTab","text":"","code":"insertTab(   inputId,   tab,   target,   position = c(\"before\", \"after\"),   select = FALSE,   session = shiny::getDefaultReactiveDomain() )"},{"path":"https://bs4dash.rinterface.com/reference/insertTab.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Insert a tabPanel in a tabsetPanel — insertTab","text":"inputId tabsetPanel id. tab tabPanel insert. target tabPanel new tab inserted. position Insert : c(\"\", \"\"). select Whether select newly inserted tab. FALSE default. session Shiny session object.","code":""},{"path":"https://bs4dash.rinterface.com/reference/insertTab.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Insert a tabPanel in a tabsetPanel — insertTab","text":"","code":"if (interactive()) {  library(shiny)  library(bs4Dash)    shinyApp(   ui = dashboardPage(     header = dashboardHeader(),     sidebar = dashboardSidebar(),     controlbar = dashboardControlbar(),     footer = dashboardFooter(),     title = \"Handle tabs\",     body = dashboardBody(       actionButton(\"add\", \"Add 'Dynamic' tab\"),       actionButton(\"remove\", \"Remove 'Foo' tab\"),       actionButton(\"hideTab\", \"Hide 'Foo' tab\"),       actionButton(\"showTab\", \"Show 'Foo' tab\"),       br(), br(),       tabBox(         id = \"tabs\",         title = \"A card with tabs\",         selected = \"Bar\",         status = \"primary\",         solidHeader = FALSE,          type = \"tabs\",         tabPanel(\"Hello\", \"This is the hello tab\"),         tabPanel(\"Foo\", \"This is the foo tab\"),         tabPanel(\"Bar\", \"This is the bar tab\")       )     )   ),   server = function(input, output, session) {     observeEvent(input$add, {       insertTab(         inputId = \"tabs\",         tabPanel(\"Dynamic\", \"This a dynamically-added tab\"),         target = \"Bar\",         select = TRUE       )     })          observeEvent(input$remove, {       removeTab(inputId = \"tabs\", target = \"Foo\")     })          observeEvent(input$hideTab, {       hideTab(inputId = \"tabs\", target = \"Foo\")     })          observeEvent(input$showTab, {       showTab(inputId = \"tabs\", target = \"Foo\")     })   }  ) }"},{"path":"https://bs4dash.rinterface.com/reference/ionicon.html","id":null,"dir":"Reference","previous_headings":"","what":"BS4 ionicons — ionicon","title":"BS4 ionicons — ionicon","text":"Create ionicon.","code":""},{"path":"https://bs4dash.rinterface.com/reference/ionicon.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"BS4 ionicons — ionicon","text":"","code":"ionicon(name)"},{"path":"https://bs4dash.rinterface.com/reference/ionicon.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"BS4 ionicons — ionicon","text":"name Name icon. See https://ionic.io/ionicons/.","code":""},{"path":"https://bs4dash.rinterface.com/reference/ionicon.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"BS4 ionicons — ionicon","text":"Similar icon function shiny.","code":""},{"path":"https://bs4dash.rinterface.com/reference/ionicon.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"BS4 ionicons — ionicon","text":"David Granjon, dgranjon@ymail.com","code":""},{"path":"https://bs4dash.rinterface.com/reference/ionicon.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"BS4 ionicons — ionicon","text":"","code":"if(interactive()){  library(shiny)  library(bs4Dash)    shinyApp(    ui = dashboardPage(      header = dashboardHeader(),      sidebar = dashboardSidebar(),      controlbar = dashboardControlbar(),      footer = dashboardFooter(),      title = \"Ionicons\",      body = dashboardBody(       ionicon(name =\"heart\"),       ionicon(name =\"beer\")     )    ),    server = function(input, output) {}  ) }"},{"path":"https://bs4dash.rinterface.com/reference/jumbotron.html","id":null,"dir":"Reference","previous_headings":"","what":"BS4 jumbotron for AdminLTE3 — bs4Jumbotron","title":"BS4 jumbotron for AdminLTE3 — bs4Jumbotron","text":"Create jumbotron","code":""},{"path":"https://bs4dash.rinterface.com/reference/jumbotron.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"BS4 jumbotron for AdminLTE3 — bs4Jumbotron","text":"","code":"bs4Jumbotron(   ...,   title = NULL,   lead = NULL,   href = NULL,   btnName = \"More\",   status = c(\"primary\", \"warning\", \"danger\", \"info\", \"success\") )  jumbotron(   ...,   title = NULL,   lead = NULL,   href = NULL,   btnName = \"More\",   status = c(\"primary\", \"warning\", \"danger\", \"info\", \"success\") )"},{"path":"https://bs4dash.rinterface.com/reference/jumbotron.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"BS4 jumbotron for AdminLTE3 — bs4Jumbotron","text":"... content. title Jumbotron title. lead Jumbotron lead. href Jumbrotron external link. btnName Jumbotron button name. status Jumbotron background color. \"primary\", \"success\", \"warning\", \"danger\" \"info\".","code":""},{"path":"https://bs4dash.rinterface.com/reference/jumbotron.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"BS4 jumbotron for AdminLTE3 — bs4Jumbotron","text":"David Granjon, dgranjon@ymail.com","code":""},{"path":"https://bs4dash.rinterface.com/reference/jumbotron.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"BS4 jumbotron for AdminLTE3 — bs4Jumbotron","text":"","code":"if(interactive()){  library(shiny)  library(bs4Dash)    shinyApp(    ui = dashboardPage(      header = dashboardHeader(),      sidebar = dashboardSidebar(),      controlbar = dashboardControlbar(),      footer = dashboardFooter(),      title = \"Jumbotron\",      body = dashboardBody(       jumbotron(       title = \"Hello, world!\",       lead = \"This is a simple hero unit, a simple jumbotron-style        component for calling extra attention to featured        content or information.\",       \"It uses utility classes for typography and spacing        to space content out within the larger container.\",       status = \"primary\",       href = \"https://www.google.com\"       )      )    ),    server = function(input, output) {}  ) }"},{"path":"https://bs4dash.rinterface.com/reference/listgroup.html","id":null,"dir":"Reference","previous_headings":"","what":"BS4 list group for AdminLTE3 — bs4ListGroup","title":"BS4 list group for AdminLTE3 — bs4ListGroup","text":"Create list group Create list group item","code":""},{"path":"https://bs4dash.rinterface.com/reference/listgroup.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"BS4 list group for AdminLTE3 — bs4ListGroup","text":"","code":"bs4ListGroup(   ...,   type = c(\"basic\", \"action\", \"heading\"),   width = 4,   .list = NULL )  bs4ListGroupItem(   ...,   title = NULL,   subtitle = NULL,   footer = NULL,   active = FALSE,   disabled = FALSE,   href = NULL )  listGroup(..., type = c(\"basic\", \"action\", \"heading\"), width = 4, .list = NULL)  listGroupItem(   ...,   title = NULL,   subtitle = NULL,   footer = NULL,   active = FALSE,   disabled = FALSE,   href = NULL )"},{"path":"https://bs4dash.rinterface.com/reference/listgroup.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"BS4 list group for AdminLTE3 — bs4ListGroup","text":"... Item content. type List group type. width List group width. 4 default. 1 12. .list Slot programmatically generated items. title Item title (type \"heading\"). subtitle Item subtitle (type \"heading\"). footer Item footer content (type \"heading\"). active Whether item active . FALSE default. type \"action\" \"heading\". disabled Whether item disabled . FALSE default. type \"action\" \"heading\". href Item external link.","code":""},{"path":"https://bs4dash.rinterface.com/reference/listgroup.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"BS4 list group for AdminLTE3 — bs4ListGroup","text":"David Granjon, dgranjon@ymail.com","code":""},{"path":"https://bs4dash.rinterface.com/reference/listgroup.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"BS4 list group for AdminLTE3 — bs4ListGroup","text":"","code":"if(interactive()){  library(shiny)  library(bs4Dash)    shinyApp(    ui = dashboardPage(      header = dashboardHeader(),      sidebar = dashboardSidebar(),      controlbar = dashboardControlbar(),      footer = dashboardFooter(),      title = \"test\",      body = dashboardBody(       fluidRow(        listGroup(         type = \"basic\",         listGroupItem(\"Cras justo odio\"),         listGroupItem(\"Dapibus ac facilisis in\"),         listGroupItem(\"Morbi leo risus\")        ),        listGroup(         type = \"action\",         listGroupItem(          \"Cras justo odio\",          active = TRUE,           disabled = FALSE,           href = \"https://www.google.com\"         ),         listGroupItem(          active = FALSE,           disabled = FALSE,           \"Dapibus ac facilisis in\",          href = \"https://www.google.com\"         ),         listGroupItem(          \"Morbi leo risus\",          active = FALSE,           disabled = TRUE,           href = \"https://www.google.com\"         )        ),        listGroup(         type = \"heading\",         listGroupItem(          \"Donec id elit non mi porta gravida at eget metus.           Maecenas sed diam eget risus varius blandit.\",          active = TRUE,           disabled = FALSE,           title = \"List group item heading\",           subtitle = \"3 days ago\",           footer = \"Donec id elit non mi porta.\"         ),         listGroupItem(          \"Donec id elit non mi porta gravida at eget metus.           Maecenas sed diam eget risus varius blandit.\",          active = FALSE,           disabled = FALSE,           title = \"List group item heading\",           subtitle = \"3 days ago\",           footer = \"Donec id elit non mi porta.\"         )        )      )     )    ),    server = function(input, output) {}  ) }"},{"path":"https://bs4dash.rinterface.com/reference/loading.html","id":null,"dir":"Reference","previous_headings":"","what":"AdminLTE3 loading state element — bs4Loading","title":"AdminLTE3 loading state element — bs4Loading","text":"section still work progress computation running","code":""},{"path":"https://bs4dash.rinterface.com/reference/loading.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"AdminLTE3 loading state element — bs4Loading","text":"","code":"bs4Loading()  loadingState()"},{"path":"https://bs4dash.rinterface.com/reference/loading.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"AdminLTE3 loading state element — bs4Loading","text":"Loading state can programmatically used conputation running instance.","code":""},{"path":"https://bs4dash.rinterface.com/reference/loading.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"AdminLTE3 loading state element — bs4Loading","text":"David Granjon, dgranjon@ymail.com","code":""},{"path":"https://bs4dash.rinterface.com/reference/loading.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"AdminLTE3 loading state element — bs4Loading","text":"","code":"if(interactive()){  library(shiny)  library(bs4Dash)    shinyApp(   ui = dashboardPage(     dashboardHeader(),     dashboardSidebar(),     dashboardBody(      box(       title = \"loading spinner\",       loadingState()       )     ),     title = \"Loading State\"   ),   server = function(input, output) { }  ) }"},{"path":"https://bs4dash.rinterface.com/reference/menuItemOutput.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a sidebar menu item output (client side) — menuItemOutput","title":"Create a sidebar menu item output (client side) — menuItemOutput","text":"UI-side function creating dynamic sidebar menu item.","code":""},{"path":"https://bs4dash.rinterface.com/reference/menuItemOutput.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a sidebar menu item output (client side) — menuItemOutput","text":"","code":"menuItemOutput(outputId)"},{"path":"https://bs4dash.rinterface.com/reference/menuItemOutput.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a sidebar menu item output (client side) — menuItemOutput","text":"outputId Output variable name.","code":""},{"path":[]},{"path":"https://bs4dash.rinterface.com/reference/menuOutput.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a dynamic menu output for bs4Dash (client side) — menuOutput","title":"Create a dynamic menu output for bs4Dash (client side) — menuOutput","text":"can used placeholder dynamically-generated dropdownMenu, notificationItem, messageItem, taskItem sidebarMenu, menuItem. called directly, must make sure supply correct type tag. simpler use wrapper functions present; example, dropdownMenuOutput sidebarMenuOutput.","code":""},{"path":"https://bs4dash.rinterface.com/reference/menuOutput.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a dynamic menu output for bs4Dash (client side) — menuOutput","text":"","code":"menuOutput(outputId, tag = shiny::tags$li)"},{"path":"https://bs4dash.rinterface.com/reference/menuOutput.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a dynamic menu output for bs4Dash (client side) — menuOutput","text":"outputId Output variable name. tag tag function, like tags$li tags$ul.","code":""},{"path":[]},{"path":"https://bs4dash.rinterface.com/reference/navbar-menu.html","id":null,"dir":"Reference","previous_headings":"","what":"Navbar tab item — navbarTab","title":"Navbar tab item — navbarTab","text":"Similar menuItem dashboardHeader. Like sidebarMenu inside dashboardHeader.","code":""},{"path":"https://bs4dash.rinterface.com/reference/navbar-menu.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Navbar tab item — navbarTab","text":"","code":"navbarTab(text, ..., tabName = NULL, icon = NULL, .list = NULL)  navbarMenu(..., id = NULL)  updateNavbarTabs(   session = shiny::getDefaultReactiveDomain(),   inputId,   selected = NULL )"},{"path":"https://bs4dash.rinterface.com/reference/navbar-menu.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Navbar tab item — navbarTab","text":"text Tab text. ... Slot navbarTab. tabName correspond exactly tabName given tabItem. icon icon tag, created shiny::icon. NULL, display icon. .list Use slot programmatically pass navbarTab like lapply. id Menu id. Useful leverage updateNavbarTabs server. session Shiny session object. inputId id tabsetPanel, navlistPanel, navbarPage object. selected TRUE, menuSubItem start selected. item selected=TRUE.","code":""},{"path":"https://bs4dash.rinterface.com/reference/navbar-menu.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Navbar tab item — navbarTab","text":"can nest navbarTab like menuSubItem. avoid create many functions.","code":""},{"path":"https://bs4dash.rinterface.com/reference/navbar-menu.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Navbar tab item — navbarTab","text":"","code":"if (interactive()) {  library(shiny)  library(bs4Dash)    tabs <- tabItems(.list = lapply(1:7, function(i) {   tabItem(tabName = sprintf(\"Tab%s\", i), sprintf(\"Tab %s\", i))  }))    shinyApp(    ui = dashboardPage(      header = dashboardHeader(        navbarMenu(          id = \"navmenu\",          navbarTab(tabName = \"Tab1\", text = \"Tab 1\"),          navbarTab(tabName = \"Tab2\", text = \"Tab 2\"),          navbarTab(            text = \"Menu\",            dropdownHeader(\"Dropdown header\"),            navbarTab(tabName = \"Tab3\", text = \"Tab 3\"),            dropdownDivider(),            navbarTab(              text = \"Sub menu\",              dropdownHeader(\"Another header\"),              navbarTab(tabName = \"Tab4\", text = \"Tab 4\"),              dropdownHeader(\"Yet another header\"),              navbarTab(tabName = \"Tab5\", text = \"Tab 5\"),              navbarTab(                text = \"Sub sub menu\",                navbarTab(tabName = \"Tab6\", text = \"Tab 6\"),                navbarTab(tabName = \"Tab7\", text = \"Tab 7\")              )            )          )        )      ),      body = dashboardBody(tabs),      controlbar = dashboardControlbar(        sliderInput(          inputId = \"controller\",          label = \"Update the first tabset\",          min = 1,          max = 4,          value = 1        )      ),      sidebar = dashboardSidebar(disable = TRUE)    ),    server = function(input, output, session) {      observeEvent(input$controller, {        updateNavbarTabs(          session,          inputId = \"navmenu\",          selected = paste0(\"Tab\", input$controller)        )      },      ignoreInit = TRUE      )    }  ) }"},{"path":"https://bs4dash.rinterface.com/reference/navbarDropdown.html","id":null,"dir":"Reference","previous_headings":"","what":"Build navbar dropdown for navigation — navbarDropdown","title":"Build navbar dropdown for navigation — navbarDropdown","text":"different dropdownMenu.","code":""},{"path":"https://bs4dash.rinterface.com/reference/navbarDropdown.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build navbar dropdown for navigation — navbarDropdown","text":"","code":"navbarDropdown(text, ...)"},{"path":"https://bs4dash.rinterface.com/reference/navbarDropdown.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Build navbar dropdown for navigation — navbarDropdown","text":"text Dropdown menu title. ... Slot nested items navbarTab.","code":""},{"path":"https://bs4dash.rinterface.com/reference/pagination.html","id":null,"dir":"Reference","previous_headings":"","what":"Bootstrap 4 pagination widget — pagination","title":"Bootstrap 4 pagination widget — pagination","text":"See https://getbootstrap.com/docs/4.0/components/pagination/. Insert inside pagination.","code":""},{"path":"https://bs4dash.rinterface.com/reference/pagination.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bootstrap 4 pagination widget — pagination","text":"","code":"pagination(   ...,   id = NULL,   selected = NULL,   align = c(\"center\", \"left\", \"right\"),   size = c(\"md\", \"sm\", \"lg\"),   previousBtn = \"«\",   nextBtn = \"»\",   .list = NULL )  paginationItem(title, ..., value = title, icon = NULL, disabled = FALSE)  updatePagination(   id,   selected = NULL,   disabled = NULL,   session = shiny::getDefaultReactiveDomain() )"},{"path":"https://bs4dash.rinterface.com/reference/pagination.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bootstrap 4 pagination widget — pagination","text":"... Slot paginationItem. id Unique widget id. programmatic update. See updatePagination. selected element select start. align Alignment. size Buttons size. previousBtn Previous button text. nextBtn Next button text. .list Programmatically generated paginationItem. title Display title tab value value sent tabsetPanel reports tab selected. omitted tabsetPanel id, title used. icon Optional icon appear tab. attribute valid using tabPanel within navbarPage(). disabled Whether disable item. Default FALSE. session Shiny session object.","code":""},{"path":"https://bs4dash.rinterface.com/reference/pagination.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bootstrap 4 pagination widget — pagination","text":"HTML pagination container HTML tag. Send message R JS update pagination widget client.","code":""},{"path":"https://bs4dash.rinterface.com/reference/pagination.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bootstrap 4 pagination widget — pagination","text":"","code":"if (interactive()) {  library(shiny)  library(bs4Dash)   shinyApp(    ui = dashboardPage(     header = dashboardHeader(),      sidebar = dashboardSidebar(),     body = dashboardBody(      pagination(        paginationItem(\"page1\", box(title = \"This is a box!\")),        paginationItem(\"page2\", \"This is page 2\", disabled = TRUE),        paginationItem(\"page3\", \"This is page 3\", disabled = TRUE),        paginationItem(          \"page4\",          sliderInput(            \"obs\",            \"Number of observations:\",            min = 0,            max = 1000,            value = 500          ),          plotOutput(\"distPlot\"),          icon = icon(\"cog\")        )      )     )    ),    server = function(input, output, session) {      output$distPlot <- renderPlot({        hist(rnorm(input$obs))      })    }  ) } if (interactive()) {  library(shiny)  library(bs4Dash)   shinyApp(    ui = dashboardPage(     header = dashboardHeader(),      sidebar = dashboardSidebar(),     body = dashboardBody(      fluidRow(        actionButton(\"update\", \"Select page 4\", class = \"mx-2\"),        actionButton(\"disable\", \"Disable page 1\", class = \"mx-2\"),        actionButton(\"enable\", \"Enable page 1\", class = \"mx-2\"),        textOutput(\"selected_page\")      ),      br(),      pagination(        id = \"mypagination\",        paginationItem(\"page1\", box(title = \"This is a box!\")),        paginationItem(\"page2\", \"This is page 2\", disabled = TRUE),        paginationItem(\"page3\", \"This is page 3\"),        paginationItem(          \"page4\",          sliderInput(            \"obs\",            \"Number of observations:\",            min = 0,            max = 1000,            value = 500          ),          plotOutput(\"distPlot\"),          icon = icon(\"cog\")        )      )     )    ),    server = function(input, output, session) {           observeEvent(input$update,{        updatePagination(\"mypagination\", selected = \"page4\")      })           observeEvent(input$disable,{        updatePagination(\"mypagination\", disabled = \"page1\")      })           observeEvent(input$enable,{        updatePagination(\"mypagination\", selected = \"page1\")      })           output$selected_page <- renderText({        sprintf(\"Currently selected page: %s\", input$mypagination)      })           output$distPlot <- renderPlot({        hist(rnorm(input$obs))      })    }  ) }"},{"path":"https://bs4dash.rinterface.com/reference/popover.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Bootstrap 4 popover from the UI side — popover","title":"Create a Bootstrap 4 popover from the UI side — popover","text":"replaces shinyBS popover feature compatible Bootstrap 4 addPopover adds popover given target. removePopover destroys current targeted popover.","code":""},{"path":"https://bs4dash.rinterface.com/reference/popover.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Bootstrap 4 popover from the UI side — popover","text":"","code":"popover(tag, content, title, placement = c(\"top\", \"bottom\", \"left\", \"right\"))  addPopover(   id = NULL,   selector = NULL,   options,   session = shiny::getDefaultReactiveDomain() )  removePopover(id, session = shiny::getDefaultReactiveDomain())"},{"path":"https://bs4dash.rinterface.com/reference/popover.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Bootstrap 4 popover from the UI side — popover","text":"tag Popover target. content Popover content. title Popover title. placement Popover placement: \"top\", \"bottom\", \"left\" \"right\". id Popover target id. selector jQuery selector. Allow customization target (nested tags). options List options pass popover. See https://getbootstrap.com/docs/4.0/components/popovers/. session Shiny session object.","code":""},{"path":"https://bs4dash.rinterface.com/reference/popover.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Create a Bootstrap 4 popover from the UI side — popover","text":"popover automatically handles tooltip removal must seperately implemented. dashboardHeader help parameter TRUE, popovers may enabled disabled depending switch value, may solve problem. allows toggle popovers whenever required. replaces shinyBS popover feature compatible Bootstrap 4","code":""},{"path":"https://bs4dash.rinterface.com/reference/popover.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a Bootstrap 4 popover from the UI side — popover","text":"","code":"if (interactive()) {   library(shiny)   library(bs4Dash)    shinyApp(     ui = dashboardPage(       header = dashboardHeader(),       sidebar = dashboardSidebar(),       controlbar = dashboardControlbar(),       footer = dashboardFooter(),       title = \"Popover UI\",       body = dashboardBody(         popover(           actionButton(\"goButton\", \"Click me to see the popover!\"),           title = \"My popover\",           placement = \"right\",           content = \"Vivamus sagittis lacus vel augue laoreet rutrum faucibus.\"         )       )     ),     server = function(input, output) {}   ) } if (interactive()) {   library(shiny)   library(bs4Dash)    shinyApp(     ui = dashboardPage(       header = dashboardHeader(),       sidebar = dashboardSidebar(),       controlbar = dashboardControlbar(),       footer = dashboardFooter(),       title = \"Popover server\",       body = dashboardBody(         sliderInput(\"obs\", \"Number of observations:\",           min = 0, max = 1000, value = 500         ),         plotOutput(\"distPlot\")       )     ),     server = function(input, output, session) {       output$distPlot <- renderPlot({         hist(rnorm(input$obs))       })        observeEvent(input$obs, {         if (input$obs > 500) {           addPopover(             id = \"distPlot\",             options = list(               content = \"Vivamus sagittis lacus vel augue laoreet rutrum faucibus.\",               title = \"Server popover\",               placement = \"bottom\",               trigger = \"hover\"             )           )         } else {           removePopover(id = \"distPlot\")         }       })     }   ) }"},{"path":"https://bs4dash.rinterface.com/reference/productList.html","id":null,"dir":"Reference","previous_headings":"","what":"AdminLTE3 product list container — productList","title":"AdminLTE3 product list container — productList","text":"productList creates container display commercial items elegant container. Insert box. productListItem creates product item insert productList.","code":""},{"path":"https://bs4dash.rinterface.com/reference/productList.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"AdminLTE3 product list container — productList","text":"","code":"productList(...)  productListItem(..., image = NULL, title = NULL, subtitle = NULL, color = NULL)"},{"path":"https://bs4dash.rinterface.com/reference/productList.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"AdminLTE3 product list container — productList","text":"... product description. image image url, . title product name. subtitle product price. color price color. Valid color listed : primary: #007bff . secondary: #6c757d . info: #17a2b8 . success: #28a745 . warning: #ffc107 . danger: #dc3545 .","code":""},{"path":"https://bs4dash.rinterface.com/reference/productList.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"AdminLTE3 product list container — productList","text":"David Granjon, dgranjon@ymail.com","code":""},{"path":"https://bs4dash.rinterface.com/reference/productList.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"AdminLTE3 product list container — productList","text":"","code":"# Box with productList if (interactive()) {  library(shiny)  library(bs4Dash)    shinyApp(   ui = dashboardPage(     dashboardHeader(),     dashboardSidebar(),     dashboardBody(      box(       title = \"Product List\",       status = \"primary\",       productList(         productListItem(           image = \"https://www.pngmart.com/files/1/Haier-TV-PNG.png\",            title = \"Samsung TV\",            subtitle = \"$1800\",            color = \"warning\",           \"This is an amazing TV, but I don't like TV!\"         ),         productListItem(           image = \"https://upload.wikimedia.org/wikipedia/commons/7/77/IMac_Pro.svg\",            title = \"Imac 27\",            subtitle = \"$4999\",            color = \"danger\",           \"This is were I spend most of my time!\"         )       )      )     ),     title = \"Product List\"   ),   server = function(input, output) { }  ) }"},{"path":"https://bs4dash.rinterface.com/reference/progress.html","id":null,"dir":"Reference","previous_headings":"","what":"AdminLTE3 progress bar — bs4ProgressBar","title":"AdminLTE3 progress bar — bs4ProgressBar","text":"Create Bootstrap 4 progress bar.","code":""},{"path":"https://bs4dash.rinterface.com/reference/progress.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"AdminLTE3 progress bar — bs4ProgressBar","text":"","code":"bs4ProgressBar(   value,   min = 0,   max = 100,   vertical = FALSE,   striped = FALSE,   animated = FALSE,   status = \"primary\",   size = NULL,   label = NULL )  bs4MultiProgressBar(   value,   min = 0,   max = 100,   vertical = FALSE,   striped = FALSE,   animated = FALSE,   status = \"primary\",   size = NULL,   label = NULL )  progressBar(   value,   min = 0,   max = 100,   vertical = FALSE,   striped = FALSE,   animated = FALSE,   status = \"primary\",   size = NULL,   label = NULL )  multiProgressBar(   value,   min = 0,   max = 100,   vertical = FALSE,   striped = FALSE,   animated = FALSE,   status = \"primary\",   size = NULL,   label = NULL )"},{"path":"https://bs4dash.rinterface.com/reference/progress.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"AdminLTE3 progress bar — bs4ProgressBar","text":"value Progress bar value. min Progress bar minimum value. max Progress bar maximum value. vertical Whether display progress bar vertical mode. FALSE default. striped Whether progress bar striped . FALSE default. animated Whether animate progress bar. Default FALSE. status Progress bar status. Valid colors defined follows: primary: #007bff . secondary: #6c757d . info: #17a2b8 . success: #28a745 . warning: #ffc107 . danger: #dc3545 . gray-dark: #343a40 . gray: #adb5bd . white: #fff . indigo: #6610f2 . lightblue: #3c8dbc . navy: #001f3f . purple: #605ca8 . fuchsia: #f012be . pink: #e83e8c . maroon: #d81b60 . orange: #ff851b . lime: #01ff70 . teal: #39cccc . olive: #3d9970 . size Progress bar size. NULL, \"sm\", \"xs\" \"xxs\". label Progress label. NULL default.","code":""},{"path":"https://bs4dash.rinterface.com/reference/progress.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"AdminLTE3 progress bar — bs4ProgressBar","text":"multiProgressBar(), value can vector corresponds progress segment within progress bar. supplied, striped, animated, status, label must length value length 1, case vector recycling used.","code":""},{"path":"https://bs4dash.rinterface.com/reference/progress.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"AdminLTE3 progress bar — bs4ProgressBar","text":"David Granjon, dgranjon@ymail.com","code":""},{"path":"https://bs4dash.rinterface.com/reference/progress.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"AdminLTE3 progress bar — bs4ProgressBar","text":"","code":"if(interactive()){  library(shiny)  library(bs4Dash)    shinyApp(    ui = dashboardPage(      header = dashboardHeader(),      sidebar = dashboardSidebar(),      body = dashboardBody(       box(        title = \"Horizontal\",        progressBar(         value = 10,         striped = TRUE,         animated = TRUE        ),        progressBar(         value = 50,         status = \"warning\",         size = \"xs\"        ),        progressBar(         value = 20,         status = \"danger\",         size = \"sm\"        ),        multiProgressBar(         value = c(50, 20),         status = c(\"warning\", \"danger\"),         size = \"sm\"        )       ),       box(        title = \"Vertical\",        progressBar(         value = 10,         striped = TRUE,         animated = TRUE,         vertical = TRUE        ),        progressBar(         value = 50,         status = \"warning\",         size = \"xs\",         vertical = TRUE        ),        progressBar(         value = 20,         status = \"danger\",         size = \"sm\",         vertical = TRUE        ),        multiProgressBar(         value = c(50, 20),         status = c(\"warning\", \"danger\"),         size = \"sm\",         vertical = TRUE        )       )      ),      title = \"Progress bars\"    ),    server = function(input, output) { }  ) }"},{"path":"https://bs4dash.rinterface.com/reference/quote.html","id":null,"dir":"Reference","previous_headings":"","what":"Boostrap 4 block quote — bs4Quote","title":"Boostrap 4 block quote — bs4Quote","text":"Build bootstrap 4 block quote","code":""},{"path":"https://bs4dash.rinterface.com/reference/quote.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Boostrap 4 block quote — bs4Quote","text":"","code":"bs4Quote(..., color)  blockQuote(..., color)"},{"path":"https://bs4dash.rinterface.com/reference/quote.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Boostrap 4 block quote — bs4Quote","text":"... Content. color Block color.  Valid colors defined follows: primary: #007bff . secondary: #6c757d . info: #17a2b8 . success: #28a745 . warning: #ffc107 . danger: #dc3545 . gray-dark: #343a40 . gray: #adb5bd . white: #fff . indigo: #6610f2 . lightblue: #3c8dbc . navy: #001f3f . purple: #605ca8 . fuchsia: #f012be . pink: #e83e8c . maroon: #d81b60 . orange: #ff851b . lime: #01ff70 . teal: #39cccc . olive: #3d9970 .","code":""},{"path":"https://bs4dash.rinterface.com/reference/quote.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Boostrap 4 block quote — bs4Quote","text":"David Granjon, dgranjon@ymail.com","code":""},{"path":"https://bs4dash.rinterface.com/reference/quote.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Boostrap 4 block quote — bs4Quote","text":"","code":"if (interactive()) {  library(shiny)  library(bs4Dash)    shinyApp(   ui = dashboardPage(     header = dashboardHeader(),      sidebar = dashboardSidebar(),     body = dashboardBody(      fluidRow(       blockQuote(\"Blablabla\", color = \"indigo\"),       blockQuote(\"Blablabla\", color = \"danger\"),       blockQuote(\"Blablabla\", color = \"teal\"),       blockQuote(\"Blablabla\", color = \"orange\"),       blockQuote(\"Blablabla\", color = \"warning\"),       blockQuote(\"Blablabla\", color = \"fuchsia\")      )     ),      footer = dashboardFooter()   ),   server = function(input, output) { }  ) }"},{"path":"https://bs4dash.rinterface.com/reference/renderMenu.html","id":null,"dir":"Reference","previous_headings":"","what":"Create dynamic menu output (server side) — renderMenu","title":"Create dynamic menu output (server side) — renderMenu","text":"Create dynamic menu output (server side)","code":""},{"path":"https://bs4dash.rinterface.com/reference/renderMenu.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create dynamic menu output (server side) — renderMenu","text":"","code":"renderMenu(expr, env = parent.frame(), quoted = FALSE, outputArgs = list())"},{"path":"https://bs4dash.rinterface.com/reference/renderMenu.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create dynamic menu output (server side) — renderMenu","text":"expr expression returns Shiny tag object, HTML(), list objects. env parent environment reactive expression. default, calling environment, defining ordinary non-reactive expression. expr quosure quoted TRUE, env ignored. quoted TRUE, quote()ed value expr used expr evaluated. expr quosure like use expression value expr, must set quoted TRUE. outputArgs list arguments passed implicit call uiOutput() renderUI used interactive R Markdown document.","code":""},{"path":[]},{"path":"https://bs4dash.rinterface.com/reference/renderMenu.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create dynamic menu output (server side) — renderMenu","text":"","code":"## Only run these examples in interactive R sessions  if (interactive()) {   library(shiny)   library(bs4Dash)   messageData <- data.frame(     from = c(\"Admininstrator\", \"New User\", \"Support\"),     message = c(       \"Sales are steady this month.\",       \"How do I register?\",       \"The new server is ready.\"     ),     stringsAsFactors = FALSE   )    # ========== Dynamic dropdownMenu ==========   ui <- dashboardPage(     dashboardHeader(       title = \"Dynamic menus\",       dropdownMenuOutput(\"messageMenu\")     ),     dashboardSidebar(),     dashboardBody(       fluidRow(         box(           title = \"Controls\",           sliderInput(\"slider\", \"Number of observations:\", 1, 100, 50)         )       )     )   )    server <- function(input, output) {     output$messageMenu <- renderMenu({       # Code to generate each of the messageItems here, in a list. messageData       # is a data frame with two columns, 'from' and 'message'.       # Also add on slider value to the message content, so that messages update.       msgs <- apply(messageData, 1, function(row) {         messageItem(           from = row[[\"from\"]],           message = paste(row[[\"message\"]], input$slider)         )       })        dropdownMenu(type = \"messages\", .list = msgs)     })   }    shinyApp(ui, server)     # ========== Dynamic sidebarMenu ==========   ui <- dashboardPage(     dashboardHeader(title = \"Dynamic sidebar\"),     dashboardSidebar(       sidebarMenuOutput(\"menu\")     ),     dashboardBody()   )    server <- function(input, output) {     output$menu <- renderMenu({       sidebarMenu(         menuItem(\"Menu item\", icon = icon(\"calendar-days\"))       )     })   }    shinyApp(ui, server) }"},{"path":"https://bs4dash.rinterface.com/reference/ribbon.html","id":null,"dir":"Reference","previous_headings":"","what":"Boostrap 4 ribbon — bs4Ribbon","title":"Boostrap 4 ribbon — bs4Ribbon","text":"bs4Ribbon build bootstrap 4 ribbon","code":""},{"path":"https://bs4dash.rinterface.com/reference/ribbon.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Boostrap 4 ribbon — bs4Ribbon","text":"","code":"bs4Ribbon(text, color)  ribbon(text, color)"},{"path":"https://bs4dash.rinterface.com/reference/ribbon.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Boostrap 4 ribbon — bs4Ribbon","text":"text Ribbon text. color Ribbon color. Valid colors defined follows: primary: #007bff . secondary: #6c757d . info: #17a2b8 . success: #28a745 . warning: #ffc107 . danger: #dc3545 . gray-dark: #343a40 . gray: #adb5bd . white: #fff . indigo: #6610f2 . lightblue: #3c8dbc . navy: #001f3f . purple: #605ca8 . fuchsia: #f012be . pink: #e83e8c . maroon: #d81b60 . orange: #ff851b . lime: #01ff70 . teal: #39cccc . olive: #3d9970 .","code":""},{"path":"https://bs4dash.rinterface.com/reference/ribbon.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Boostrap 4 ribbon — bs4Ribbon","text":"David Granjon, dgranjon@ymail.com","code":""},{"path":"https://bs4dash.rinterface.com/reference/ribbon.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Boostrap 4 ribbon — bs4Ribbon","text":"","code":"if (interactive()) {  library(shiny)  library(bs4Dash)    shinyApp(   ui = dashboardPage(     header = dashboardHeader(),      sidebar = dashboardSidebar(),     body = dashboardBody(      fluidRow(       box(        width = 4,        title = \"Blue ribbon\",        bs4Ribbon(         text = \"New\",         color = \"primary\"        )       ),       box(        width = 4,        title = \"Purple ribbon\",        bs4Ribbon(         text = \"New\",         color = \"indigo\"        )       ),       box(        width = 4,        title = \"Orange ribbon\",        bs4Ribbon(         text = \"New\",         color = \"orange\"        )       )      )     ),      footer = dashboardFooter()   ),   server = function(input, output) { }  ) }"},{"path":"https://bs4dash.rinterface.com/reference/sidebarMenuOutput.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a sidebar menu output (client side) — sidebarMenuOutput","title":"Create a sidebar menu output (client side) — sidebarMenuOutput","text":"UI-side function creating dynamic sidebar menu.","code":""},{"path":"https://bs4dash.rinterface.com/reference/sidebarMenuOutput.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a sidebar menu output (client side) — sidebarMenuOutput","text":"","code":"sidebarMenuOutput(outputId)"},{"path":"https://bs4dash.rinterface.com/reference/sidebarMenuOutput.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a sidebar menu output (client side) — sidebarMenuOutput","text":"outputId Output variable name.","code":""},{"path":[]},{"path":"https://bs4dash.rinterface.com/reference/skinSelector.html","id":null,"dir":"Reference","previous_headings":"","what":"AdminLTE3 skin selector — skinSelector","title":"AdminLTE3 skin selector — skinSelector","text":"creates skin selector element.","code":""},{"path":"https://bs4dash.rinterface.com/reference/skinSelector.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"AdminLTE3 skin selector — skinSelector","text":"","code":"skinSelector()"},{"path":"https://bs4dash.rinterface.com/reference/skinSelector.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"AdminLTE3 skin selector — skinSelector","text":"","code":"if (interactive()) {  library(shiny)  library(bs4Dash)    shinyApp(    ui = dashboardPage(      header = dashboardHeader(),      sidebar = dashboardSidebar(       sidebarMenu(        menuItem(         text = \"Item 1\"        ),        menuItem(         text = \"Item 2\"        )       )      ),      body = dashboardBody(),      controlbar = dashboardControlbar(skinSelector(), pinned = TRUE),      title = \"Skin Selector\"    ),    server = function(input, output) { }  ) }"},{"path":"https://bs4dash.rinterface.com/reference/socialBox.html","id":null,"dir":"Reference","previous_headings":"","what":"AdminLTE3 social card — bs4SocialCard","title":"AdminLTE3 social card — bs4SocialCard","text":"socialBox Creates social card userBlock goes title socialBox. Create card comment insert socialBox","code":""},{"path":"https://bs4dash.rinterface.com/reference/socialBox.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"AdminLTE3 social card — bs4SocialCard","text":"","code":"bs4SocialCard(   ...,   title = NULL,   footer = NULL,   width = 6,   height = NULL,   collapsible = TRUE,   collapsed = FALSE,   closable = FALSE,   maximizable = FALSE,   boxToolSize = \"sm\",   elevation = NULL,   headerBorder = TRUE,   label = NULL,   dropdownMenu = NULL,   sidebar = NULL,   id = NULL )  userBlock(image, title, subtitle = NULL)  cardComment(..., image, title = NULL, date = NULL)  socialBox(   ...,   title = NULL,   footer = NULL,   width = 6,   height = NULL,   collapsible = TRUE,   collapsed = FALSE,   closable = FALSE,   maximizable = FALSE,   boxToolSize = \"sm\",   elevation = NULL,   headerBorder = TRUE,   label = NULL,   dropdownMenu = NULL,   sidebar = NULL,   id = NULL )  boxComment(..., image, title = NULL, date = NULL)"},{"path":"https://bs4dash.rinterface.com/reference/socialBox.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"AdminLTE3 social card — bs4SocialCard","text":"... Comment content. title Comment title. footer Optional footer text. width width box, using Bootstrap grid system. used row-based layouts. overall width region 12, default card width 6 occupies 1/2 width. column-based layouts, use NULL width; width set column contains box. height height box, pixels CSS unit. default height scales automatically content. collapsible TRUE, display button upper right allows user collapse box. collapsed TRUE, start collapsed. must used collapsible=TRUE. closable TRUE, display button upper right allows user close box. maximizable TRUE, card can displayed full screen mode. boxToolSize Size toolbox: choose among \"xs\", \"sm\", \"md\", \"lg\". elevation Card elevation. headerBorder Whether display border header body. TRUE default label Slot boxLabel. dropdownMenu List items boxtool dropdown menu. Use boxDropdown. sidebar Slot boxSidebar. id Card id. image Author image, . subtitle subtitle. date Date publication.","code":""},{"path":[]},{"path":"https://bs4dash.rinterface.com/reference/socialBox.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"AdminLTE3 social card — bs4SocialCard","text":"David Granjon, dgranjon@ymail.com","code":""},{"path":"https://bs4dash.rinterface.com/reference/socialBox.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"AdminLTE3 social card — bs4SocialCard","text":"","code":"if (interactive()) {   library(shiny)   library(bs4Dash)    shinyApp(     ui = dashboardPage(       dashboardHeader(),       dashboardSidebar(),       dashboardBody(         socialBox(           title = userBlock(             image = \"https://adminlte.io/themes/AdminLTE/dist/img/user4-128x128.jpg\",             title = \"Social Box\",             subtitle = \"example-01.05.2018\"           ),           \"Some text here!\",           attachmentBlock(             image = \"https://adminlte.io/themes/v3/dist/img/user1-128x128.jpg\",             title = \"Test\",             href = \"https://google.com\",             \"This is the content\"           ),           lapply(X = 1:10, FUN = function(i) {             boxComment(               image = \"https://adminlte.io/themes/AdminLTE/dist/img/user3-128x128.jpg\",               title = paste(\"Comment\", i),               date = \"01.05.2018\",               paste0(\"The \", i, \"-th comment\")             )           }),           footer = \"The footer here!\"         )       ),       controlbar = dashboardControlbar(),       title = \"socialBox\"     ),     server = function(input, output) { }   ) }"},{"path":"https://bs4dash.rinterface.com/reference/sortable.html","id":null,"dir":"Reference","previous_headings":"","what":"BS4 sortable section — bs4Sortable","title":"BS4 sortable section — bs4Sortable","text":"Create sortable UI section","code":""},{"path":"https://bs4dash.rinterface.com/reference/sortable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"BS4 sortable section — bs4Sortable","text":"","code":"bs4Sortable(..., width = 12)  sortable(..., width = 12)"},{"path":"https://bs4dash.rinterface.com/reference/sortable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"BS4 sortable section — bs4Sortable","text":"... Slot UI elements box. width Section width: 1 12.","code":""},{"path":"https://bs4dash.rinterface.com/reference/sortable.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"BS4 sortable section — bs4Sortable","text":"David Granjon, dgranjon@ymail.com","code":""},{"path":"https://bs4dash.rinterface.com/reference/sortable.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"BS4 sortable section — bs4Sortable","text":"","code":"if (interactive()) {  library(shiny)  library(bs4Dash)    shinyApp(   ui = dashboardPage(     header = dashboardHeader(),     sidebar = dashboardSidebar(),     controlbar = dashboardControlbar(),     footer = dashboardFooter(),     title = \"Sortable UI\",     body = dashboardBody(       fluidRow(        lapply(1:3, FUN = function(i) {          sortable(            width = 4,            p(class = \"text-center\", paste(\"Column\", i)),            lapply(1:2, FUN = function(j) {              box(                title = paste0(\"I am the \", j,\"-th card of the \", i, \"-th column\"),                 width = 12,                \"Click on my header\"              )            })          )        })       )     )   ),   server = function(input, output) {}  ) }"},{"path":"https://bs4dash.rinterface.com/reference/stars.html","id":null,"dir":"Reference","previous_headings":"","what":"AdminLTE3 stars — bs4Stars","title":"AdminLTE3 stars — bs4Stars","text":"Create block stars (ideal rating)","code":""},{"path":"https://bs4dash.rinterface.com/reference/stars.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"AdminLTE3 stars — bs4Stars","text":"","code":"bs4Stars(value, max = 5, color = \"warning\")  starBlock(value, max = 5, color = \"warning\")"},{"path":"https://bs4dash.rinterface.com/reference/stars.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"AdminLTE3 stars — bs4Stars","text":"value Current value. positive lower equal max. max Maximum number stars block. color Star color. Valid colors listed : primary: #007bff . secondary: #6c757d . info: #17a2b8 . success: #28a745 . warning: #ffc107 . danger: #dc3545 . gray-dark: #343a40 . gray: #adb5bd . white: #fff . indigo: #6610f2 . lightblue: #3c8dbc . navy: #001f3f . purple: #605ca8 . fuchsia: #f012be . pink: #e83e8c . maroon: #d81b60 . orange: #ff851b . lime: #01ff70 . teal: #39cccc . olive: #3d9970 .","code":""},{"path":"https://bs4dash.rinterface.com/reference/stars.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"AdminLTE3 stars — bs4Stars","text":"David Granjon, dgranjon@ymail.com","code":""},{"path":"https://bs4dash.rinterface.com/reference/stars.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"AdminLTE3 stars — bs4Stars","text":"","code":"if(interactive()){  library(shiny)  library(bs4Dash)    shinyApp(   ui = dashboardPage(     dashboardHeader(),     dashboardSidebar(),     dashboardBody(      box(       title = \"Star example\",       starBlock(5),       starBlock(5, color = \"fuchsia\"),       starBlock(1, color = \"danger\"),       starBlock(3, color = \"secondary\")      )     ),     title = \"starBlock\"   ),   server = function(input, output) { }  ) }"},{"path":"https://bs4dash.rinterface.com/reference/tabBox.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Boostrap 4 tabCard — bs4TabCard","title":"Create a Boostrap 4 tabCard — bs4TabCard","text":"Build adminLTE3 card tabs","code":""},{"path":"https://bs4dash.rinterface.com/reference/tabBox.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Boostrap 4 tabCard — bs4TabCard","text":"","code":"bs4TabCard(   ...,   id = NULL,   selected = NULL,   title = NULL,   width = 6,   height = NULL,   side = c(\"left\", \"right\"),   type = NULL,   footer = NULL,   status = NULL,   solidHeader = FALSE,   background = NULL,   collapsible = TRUE,   collapsed = FALSE,   closable = FALSE,   maximizable = FALSE,   icon = NULL,   gradient = FALSE,   boxToolSize = \"sm\",   elevation = NULL,   headerBorder = TRUE,   label = NULL,   dropdownMenu = NULL,   sidebar = NULL,   .list = NULL )  tabBox(   ...,   id = NULL,   selected = NULL,   title = NULL,   width = 6,   height = NULL,   side = c(\"left\", \"right\"),   type = NULL,   footer = NULL,   status = NULL,   solidHeader = FALSE,   background = NULL,   collapsible = TRUE,   collapsed = FALSE,   closable = FALSE,   maximizable = FALSE,   icon = NULL,   gradient = FALSE,   boxToolSize = \"sm\",   elevation = NULL,   headerBorder = TRUE,   label = NULL,   dropdownMenu = NULL,   sidebar = NULL,   .list = NULL )"},{"path":"https://bs4dash.rinterface.com/reference/tabBox.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Boostrap 4 tabCard — bs4TabCard","text":"... Contents box. id Card id. selected value (, none supplied, title) tab selected default. NULL, first tab selected. title Optional title. width width box, using Bootstrap grid system. used row-based layouts. overall width region 12, default card width 6 occupies 1/2 width. column-based layouts, use NULL width; width set column contains box. height height box, pixels CSS unit. default height scales automatically content. side tabPanel side. Either left right. type `\"tabs\"` Standard tab look `\"pills\"` Selected tabs use background fill color footer Optional footer text. status status item. determines item's background   color.  Valid statuses defined follows: primary: #007bff . secondary: #6c757d . info: #17a2b8 . success: #28a745 . warning: #ffc107 . danger: #dc3545 . gray-dark: #343a40 . gray: #adb5bd . white: #fff . indigo: #6610f2 . lightblue: #3c8dbc . navy: #001f3f . purple: #605ca8 . fuchsia: #f012be . pink: #e83e8c . maroon: #d81b60 . orange: #ff851b . lime: #01ff70 . teal: #39cccc . olive: #3d9970 . solidHeader header shown solid color background? background NULL (default), background box   white. Otherwise, color string. Valid colors listed   validColors. See : primary: #007bff . secondary: #6c757d . info: #17a2b8 . success: #28a745 . warning: #ffc107 . danger: #dc3545 . gray-dark: #343a40 . gray: #adb5bd . white: #fff . indigo: #6610f2 . lightblue: #3c8dbc . navy: #001f3f . purple: #605ca8 . fuchsia: #f012be . pink: #e83e8c . maroon: #d81b60 . orange: #ff851b . lime: #01ff70 . teal: #39cccc . olive: #3d9970 . collapsible TRUE, display button upper right allows user collapse box. collapsed TRUE, start collapsed. must used collapsible=TRUE. closable TRUE, display button upper right allows user close box. maximizable TRUE, card can displayed full screen mode. icon Header icon. Displayed title. Expect icon. gradient Whether allow gradient effect background color. Default FALSE. boxToolSize Size toolbox: choose among \"xs\", \"sm\", \"md\", \"lg\". elevation Card elevation. headerBorder Whether display border header body. TRUE default label Slot boxLabel. dropdownMenu List items boxtool dropdown menu. Use boxDropdown. sidebar Slot boxSidebar. .list case programmatically generated items. See example.","code":""},{"path":"https://bs4dash.rinterface.com/reference/tabBox.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Create a Boostrap 4 tabCard — bs4TabCard","text":"User access tabBox input input$<id>_box. allows get state box update server updateBox. forget title long, especially 3 tabs want box collapsible, closable maximizable, elements take extra horizontal space.","code":""},{"path":[]},{"path":"https://bs4dash.rinterface.com/reference/tabBox.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Create a Boostrap 4 tabCard — bs4TabCard","text":"David Granjon, dgranjon@ymail.com","code":""},{"path":"https://bs4dash.rinterface.com/reference/tabBox.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a Boostrap 4 tabCard — bs4TabCard","text":"","code":"if (interactive()) {   library(shiny)   library(bs4Dash)    menu_tab <- lapply(1:3, function(i) {     tabPanel(       sprintf(\"Menu %s\", i),       sprintf(\"Hello tab %s\", i)     )   })    shinyApp(     ui = dashboardPage(       header = dashboardHeader(),       sidebar = dashboardSidebar(),       controlbar = dashboardControlbar(),       footer = dashboardFooter(),       title = \"tabBox\",       body = dashboardBody(         tabBox(           id = \"tabcard\",           title = \"A card with tabs\",           selected = \"Tab 2\",           status = \"primary\",           solidHeader = FALSE,           type = \"tabs\",           tabPanel(             title = \"Tab 1\",             \"Content 1\"           ),           tabPanel(             title = \"Tab 2\",             \"Content 2\"           ),           tabPanel(             title = \"Tab 3\",             \"Content 3\"           )         ),         tabBox(          id = \"mybox2\",          title = \"\",          .list = menu_tab         ),         selectInput(         \"tab\",         \"Selected a tab\",         choices = paste(\"Menu\", 1:3),         \"Menu 2\"        )       )     ),     server = function(input, output, session) {       observeEvent(input$tab, {        updateTabsetPanel(session, inputId = \"mybox2\", input$tab)       })     }   ) }"},{"path":"https://bs4dash.rinterface.com/reference/table.html","id":null,"dir":"Reference","previous_headings":"","what":"Boostrap 4 table container — bs4Table","title":"Boostrap 4 table container — bs4Table","text":"Build Bootstrap 4 table container Build bs4 table item row Build bs4 table item","code":""},{"path":"https://bs4dash.rinterface.com/reference/table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Boostrap 4 table container — bs4Table","text":"","code":"bs4Table(data, cardWrap = FALSE, bordered = FALSE, striped = FALSE, width = 12)  bs4TableItems(...)  bs4TableItem(..., dataCell = FALSE)"},{"path":"https://bs4dash.rinterface.com/reference/table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Boostrap 4 table container — bs4Table","text":"data Expect dataframe, tibble list shiny tags... See examples. cardWrap Whether wrap table card. FALSE default. bordered Whether display border elements. FALSE default. striped Whether displayed striped elements. FALSE default. width Table width. 12 default. ... HTML element. dataCell Whether cell contain data text. <td> default.","code":""},{"path":"https://bs4dash.rinterface.com/reference/table.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Boostrap 4 table container — bs4Table","text":"David Granjon, dgranjon@ymail.com","code":""},{"path":"https://bs4dash.rinterface.com/reference/table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Boostrap 4 table container — bs4Table","text":"","code":"if (interactive()) {  library(shiny)  library(bs4Dash)    # width dataframe as input  shinyApp(   ui = dashboardPage(     header = dashboardHeader(),      sidebar = dashboardSidebar(),     body = dashboardBody(      bs4Table(       cardWrap = TRUE,       bordered = TRUE,       striped = TRUE,       iris      )     ),      footer = dashboardFooter()   ),   server = function(input, output) { }  )    # with shiny tags as input  shinyApp(   ui = dashboardPage(     header = dashboardHeader(),      sidebar = dashboardSidebar(),     body = dashboardBody(       bs4Table(         cardWrap = TRUE,         bordered = TRUE,         striped = TRUE,         list(           list(             income = \"$2,500 USD\",              status = dashboardBadge(               \"Pending\",               position = \"right\",               color = \"danger\",               rounded = TRUE             ),              progress = progressBar(value = 50, status = \"pink\", size = \"xxs\"),              text = \"test\",              confirm = actionButton(               \"go\",               \"Go\"             )           ),           list(\"$2,500 USD\", \"NA\", \"NA\", \"test\", \"NA\")         )       )     ),      footer = dashboardFooter()   ),   server = function(input, output) {}  ) }"},{"path":"https://bs4dash.rinterface.com/reference/tabsetPanel.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a tabsetPanel — tabsetPanel","title":"Create a tabsetPanel — tabsetPanel","text":"Imported bs4TabCard can used alone. modified shiny::tabsetPanel, handle bootstrap 4. function upgraded starting shiny 1.7.0 (support Bootstrap 4 tabs).","code":""},{"path":"https://bs4dash.rinterface.com/reference/tabsetPanel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a tabsetPanel — tabsetPanel","text":"","code":"tabsetPanel(   ...,   id = NULL,   selected = NULL,   type = c(\"tabs\", \"pills\", \"hidden\"),   vertical = FALSE,   side = \"left\",   .list = NULL )"},{"path":"https://bs4dash.rinterface.com/reference/tabsetPanel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a tabsetPanel — tabsetPanel","text":"... tabPanel() elements include tabset id provided, can use input$id server logic determine current tabs active. value correspond value argument passed tabPanel(). selected value (, none supplied, title) tab selected default. NULL, first tab selected. type `\"tabs\"` Standard tab look `\"pills\"` Selected tabs use background fill color vertical Whether displays tabs vertically. Default FALSE. side Tabs side: \"left\" \"right\". .list case programmatically generated items. See example.","code":""},{"path":"https://bs4dash.rinterface.com/reference/tabsetPanel.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Create a tabsetPanel — tabsetPanel","text":"David Granjon, dgranjon@ymail.com","code":""},{"path":"https://bs4dash.rinterface.com/reference/tabsetPanel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a tabsetPanel — tabsetPanel","text":"","code":"if(interactive()){  library(shiny)  library(bs4Dash)   shinyApp(    ui = dashboardPage(     header = dashboardHeader(),     sidebar = dashboardSidebar(),     controlbar = dashboardControlbar(),     footer = dashboardFooter(),     title = \"Bootstrap 4 tabsetPanel\",     body = dashboardBody(      # manually inserted panels      tabsetPanel(       id = \"tabcard\",       tabPanel(        title = \"Tab 1\",         \"Content 1\"       ),       tabPanel(        title = \"Tab 2\",         \"Content 2\"       ),       tabPanel(        title = \"Tab 3\",         \"Content 3\"       )      ),            br(), br(),      # programmatically inserted panels      tabsetPanel(        id = \"tabset\",        .list = lapply(1:3, function(i) {          tabPanel(            title = paste0(\"Tab\", i),             active = FALSE,            paste(\"Content\", i)          )        })       )     )    ),    server = function(input, output) {}  )    # update tabsetPanel  shinyApp(   ui = dashboardPage(    title = \"updateTabsetPanel\",    header = dashboardHeader(),    body = dashboardBody(      tabsetPanel(        id = \"tabset1\",        selected = \"Tab 2\",        tabPanel(          title = \"Tab 1\",           numericInput(\"val\", \"Value:\", 10, min = 1, max = 100),          verbatimTextOutput(\"value\")        ),        tabPanel(          title = \"Tab 2\",           \"Content 2\"        ),        tabPanel(          title = \"Tab 3\",           checkboxGroupInput(            inline = TRUE,            \"variable\", \"Variables to show:\",            c(\"Cylinders\" = \"cyl\",              \"Transmission\" = \"am\",              \"Gears\" = \"gear\")          ),          tableOutput(\"data\")        )      ),      uiOutput(\"tabSetPanel2\")    ),    sidebar = dashboardSidebar(      skin = \"light\",      sliderInput(        inputId = \"controller\",        label = \"Update the first tabset\",        min = 1,        max = 3,        value = 2      ),      br(),      sliderInput(        inputId = \"controller2\",        label = \"Update the second tabset\",        min = 1,        max = 3,        value = 3      )    ),    controlbar = dashboardControlbar(collapsed = FALSE),    footer = dashboardFooter()  ),  server = function(input, output, session) {      output$tabSetPanel2 <- renderUI({     tabsetPanel(       id = \"tabset2\",       tabPanel(         title = \"Tab 1\",          p(\"Tab 1 \")       ),       tabPanel(         title = \"Tab 2\",          p(\"Tab 2\")       ),       tabPanel(         title = \"Tab 3\",          p(\"Tab 3\")       )     )    })        # update tabset1    observeEvent(input$controller, {      updateTabsetPanel(        session,         inputId = \"tabset1\",         selected = paste(\"Tab\", input$controller)      )    }, ignoreInit = TRUE)        # update tabset 2    observeEvent(input$controller2, {      updateTabsetPanel(        session,         inputId = \"tabset2\",         selected = paste(\"Tab\", input$controller2)      )    }, ignoreInit = TRUE)        output$distPlot <- renderPlot({      hist(rnorm(input$obs))    })        output$data <- renderTable({      mtcars[, c(\"mpg\", input$variable), drop = FALSE]    }, rownames = TRUE)        output$txt <- renderText({      paste(\"You chose\", input$rb)    })        output$value <- renderText({ input$val })       }  ) }"},{"path":"https://bs4dash.rinterface.com/reference/tagAssert.html","id":null,"dir":"Reference","previous_headings":"","what":"Assert that a tag has specified properties — tagAssert","title":"Assert that a tag has specified properties — tagAssert","text":"Assert tag specified properties","code":""},{"path":"https://bs4dash.rinterface.com/reference/tagAssert.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assert that a tag has specified properties — tagAssert","text":"","code":"tagAssert(tag, type = NULL, class = NULL, allowUI = TRUE)"},{"path":"https://bs4dash.rinterface.com/reference/tagAssert.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assert that a tag has specified properties — tagAssert","text":"tag tag object. type type tag, like \"div\", \"\", \"span\". class HTML class. allowUI TRUE (default), allow dynamic outputs generated uiOutput htmlOutput. dynamic output provided, tagAssert try validate contents.","code":""},{"path":"https://bs4dash.rinterface.com/reference/timeline.html","id":null,"dir":"Reference","previous_headings":"","what":"AdminLTE3 timeline block — bs4Timeline","title":"AdminLTE3 timeline block — bs4Timeline","text":"timelineBlock creates timeline block may inserted box outside. timelineLabel creates timeline label element highlight event. timelineItem creates timeline item contains information given event like title, description, date, ... timelineItemMedia create specific container images. timelineStart indicates starting point. timelineEnd indicates end point.","code":""},{"path":"https://bs4dash.rinterface.com/reference/timeline.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"AdminLTE3 timeline block — bs4Timeline","text":"","code":"bs4Timeline(..., reversed = TRUE, width = 6)  bs4TimelineLabel(..., color = NULL)  bs4TimelineItem(   ...,   icon = NULL,   color = NULL,   time = NULL,   title = NULL,   border = TRUE,   footer = NULL,   elevation = NULL )  bs4TimelineItemMedia(image = NULL, height = NULL, width = NULL)  bs4TimelineStart(icon = shiny::icon(\"clock\"), color = NULL)  bs4TimelineEnd(icon = shiny::icon(\"hourglass-end\"), color = NULL)  timelineBlock(..., reversed = TRUE, width = 6)  timelineLabel(..., color = NULL)  timelineItem(   ...,   icon = NULL,   color = NULL,   time = NULL,   title = NULL,   border = TRUE,   footer = NULL,   elevation = NULL )  timelineItemMedia(image = NULL, height = NULL, width = NULL)  timelineStart(icon = shiny::icon(\"clock\"), color = NULL)  timelineEnd(icon = shiny::icon(\"hourglass-end\"), color = NULL)"},{"path":"https://bs4dash.rinterface.com/reference/timeline.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"AdminLTE3 timeline block — bs4Timeline","text":"... element timelineItemMedia ... reversed Whether timeline reversed . width Media width pixels. color Item color. Valid colors defined follows: primary: #007bff . secondary: #6c757d . info: #17a2b8 . success: #28a745 . warning: #ffc107 . danger: #dc3545 . gray-dark: #343a40 . gray: #adb5bd . white: #fff . indigo: #6610f2 . lightblue: #3c8dbc . navy: #001f3f . purple: #605ca8 . fuchsia: #f012be . pink: #e83e8c . maroon: #d81b60 . orange: #ff851b . lime: #01ff70 . teal: #39cccc . olive: #3d9970 . icon Item icon \"clock\", \"times\", ... time Item date time. title Item title. border Whether display border header body. TRUE default. footer Item footer . elevation Timeline elevation (numeric). NULL default. image Media url path. height Media height pixels.","code":""},{"path":"https://bs4dash.rinterface.com/reference/timeline.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"AdminLTE3 timeline block — bs4Timeline","text":"reversed useful user wants use timeline inside box.","code":""},{"path":[]},{"path":"https://bs4dash.rinterface.com/reference/timeline.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"AdminLTE3 timeline block — bs4Timeline","text":"David Granjon, dgranjon@ymail.com","code":""},{"path":"https://bs4dash.rinterface.com/reference/timeline.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"AdminLTE3 timeline block — bs4Timeline","text":"","code":"if(interactive()){  library(shiny)  library(bs4Dash)   shinyApp(    ui = bs4DashPage(     header = dashboardHeader(),     sidebar = dashboardSidebar(),     controlbar = dashboardControlbar(),     footer = dashboardFooter(),     title = \"test\",     body = dashboardBody(      box(       title = \"Timeline\",       timelineBlock(        width = 12,        reversed = TRUE,        timelineEnd(color = \"danger\"),        timelineLabel(\"10 Feb. 2014\", color = \"pink\"),        timelineItem(         elevation = 4,          title = \"Item 1\",         icon = icon(\"gears\"),         color = \"olive\",         time = \"now\",         footer = \"Here is the footer\",         \"This is the body\"        ),        timelineItem(         title = \"Item 2\",         border = FALSE        ),        timelineLabel(\"3 Jan. 2014\", color = \"lightblue\"),        timelineItem(         elevation = 2,         title = \"Item 3\",         icon = icon(\"paint-brush\"),         status = \"orange\",         timelineItemMedia(image = \"https://via.placeholder.com/150x100\"),         timelineItemMedia(image = \"https://via.placeholder.com/150x100\")        ),        timelineStart(color = \"secondary\")       )      )     )    ),    server = function(input, output) {}  ) }"},{"path":"https://bs4dash.rinterface.com/reference/toast.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an adminLTE toast — toast","title":"Create an adminLTE toast — toast","text":"Builtin AdminLTE3 toasts","code":""},{"path":"https://bs4dash.rinterface.com/reference/toast.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an adminLTE toast — toast","text":"","code":"toast(   title,   body = NULL,   subtitle = NULL,   options = NULL,   session = shiny::getDefaultReactiveDomain() )"},{"path":"https://bs4dash.rinterface.com/reference/toast.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an adminLTE toast — toast","text":"title Toast title. body Body content. subtitle Toast subtitle. options Toasts options: list. See https://adminlte.io/docs/3.0/javascript/toasts.html. session Shiny session object.","code":""},{"path":"https://bs4dash.rinterface.com/reference/toast.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create an adminLTE toast — toast","text":"","code":"if (interactive()) {   library(shiny)   library(bs4Dash)    shinyApp(     ui = dashboardPage(       header = dashboardHeader(),       sidebar = dashboardSidebar(),       body = dashboardBody(         actionButton(\"sendToast\", \"Send Toast\")       ),       controlbar = dashboardControlbar(),       title = \"Toasts\"     ),     server = function(input, output) {       observeEvent(input$sendToast, {         toast(           title = \"My Toast\",           body = h4(\"I am a toast!\"),           options = list(             autohide = TRUE,             icon = \"fas fa-home\",             close = FALSE           )         )       })     }   ) }"},{"path":"https://bs4dash.rinterface.com/reference/tooltip.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Bootstrap 4 Tooltip from the UI side — tooltip","title":"Create a Bootstrap 4 Tooltip from the UI side — tooltip","text":"replaces shinyBS tooltip feature compatible Bootstrap 4 addTooltip adds tooltip given target. removeTooltip destroys current targeted tooltip.","code":""},{"path":"https://bs4dash.rinterface.com/reference/tooltip.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Bootstrap 4 Tooltip from the UI side — tooltip","text":"","code":"tooltip(tag, title, placement = c(\"top\", \"bottom\", \"left\", \"right\"))  addTooltip(   id = NULL,   selector = NULL,   options,   session = shiny::getDefaultReactiveDomain() )  removeTooltip(id, session = shiny::getDefaultReactiveDomain())"},{"path":"https://bs4dash.rinterface.com/reference/tooltip.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Bootstrap 4 Tooltip from the UI side — tooltip","text":"tag Tooltip target. title Tooltip title. placement Tooltip placement: \"top\", \"bottom\", \"left\" \"right\". id Tooltip target id. selector jQuery selector. Allow customization target (nested tags). options List options pass tooltip. See https://getbootstrap.com/docs/4.0/components/tooltips/. session Shiny session object.","code":""},{"path":"https://bs4dash.rinterface.com/reference/tooltip.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Create a Bootstrap 4 Tooltip from the UI side — tooltip","text":"tooltip automatically handles tooltip removal must seperately implemented. dashboardHeader help parameter TRUE, tooltips may enabled disabled depending switch value, may solve problem. allows toggle tooltips whenever required. replaces shinyBS tooltip feature compatible Bootstrap 4","code":""},{"path":"https://bs4dash.rinterface.com/reference/tooltip.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a Bootstrap 4 Tooltip from the UI side — tooltip","text":"","code":"if (interactive()) {   library(shiny)   library(bs4Dash)    shinyApp(     ui = dashboardPage(       header = dashboardHeader(),       sidebar = dashboardSidebar(),       controlbar = dashboardControlbar(),       footer = dashboardFooter(),       title = \"Tooltip UI\",       body = dashboardBody(         tooltip(           actionButton(\"goButton\", \"Hover to see the tooltip\"),           title = \"My tooltip\",           placement = \"top\"         )       )     ),     server = function(input, output) {}   ) } if (interactive()) {   library(shiny)   library(bs4Dash)    shinyApp(     ui = dashboardPage(       header = dashboardHeader(),       sidebar = dashboardSidebar(),       controlbar = dashboardControlbar(),       footer = dashboardFooter(),       title = \"Tooltip server\",       body = dashboardBody(         sliderInput(\"obs\", \"Number of observations:\",           min = 0, max = 1000, value = 500         ),         plotOutput(\"distPlot\")       )     ),     server = function(input, output, session) {       output$distPlot <- renderPlot({         hist(rnorm(input$obs))       })        observeEvent(input$obs, {         if (input$obs > 500) {           addTooltip(             id = \"distPlot\",             options = list(               title = \"Server tooltip\",               placement = \"bottom\"             )           )         } else {           removeTooltip(id = \"distPlot\")         }       })     }   ) }"},{"path":"https://bs4dash.rinterface.com/reference/useAutoColor.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot auto-color module — useAutoColor","title":"Plot auto-color module — useAutoColor","text":"piece code necessary plots get good background color, automatically. requires use thematic package shiny dev.","code":""},{"path":"https://bs4dash.rinterface.com/reference/useAutoColor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot auto-color module — useAutoColor","text":"","code":"useAutoColor(input, output, session = shiny::getDefaultReactiveDomain())"},{"path":"https://bs4dash.rinterface.com/reference/useAutoColor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot auto-color module — useAutoColor","text":"input Shiny input object. output Shiny output object. session Shiny session object.","code":""},{"path":"https://bs4dash.rinterface.com/reference/useAutoColor.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot auto-color module — useAutoColor","text":"observer telling Shiny update current theme. inserted top main server function.","code":""},{"path":"https://bs4dash.rinterface.com/reference/useAutoColor.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot auto-color module — useAutoColor","text":"","code":"if (interactive()) {   library(shiny)   library(bs4Dash)   library(thematic)    thematic_shiny()   shinyApp(     ui = dashboardPage(       header = dashboardHeader(         title = bs4DashBrand(           title = \"My dashboard\",           color = \"primary\",           href = \"https://adminlte.io/themes/v3\",           image = \"https://adminlte.io/themes/v3/dist/img/AdminLTELogo.png\"         )       ),       sidebar = dashboardSidebar(),       body = dashboardBody(         sliderInput(\"obs\", \"Number of observations:\",           min = 0, max = 1000, value = 500         ),         plotOutput(\"distPlot\")       ),       controlbar = dashboardControlbar(),       title = \"DashboardPage\"     ),     server = function(input, output, session) {       useAutoColor()       output$distPlot <- renderPlot({         hist(rnorm(input$obs))       })     }   ) }"},{"path":"https://bs4dash.rinterface.com/reference/userBox.html","id":null,"dir":"Reference","previous_headings":"","what":"AdminLTE3 widget user card — bs4UserCard","title":"AdminLTE3 widget user card — bs4UserCard","text":"userBox creates user card. userDescription creates customized title tag userBox.","code":""},{"path":"https://bs4dash.rinterface.com/reference/userBox.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"AdminLTE3 widget user card — bs4UserCard","text":"","code":"bs4UserCard(   ...,   title = NULL,   footer = NULL,   status = NULL,   background = NULL,   width = 6,   height = NULL,   collapsible = TRUE,   collapsed = FALSE,   closable = FALSE,   maximizable = FALSE,   gradient = FALSE,   boxToolSize = \"sm\",   elevation = NULL,   headerBorder = TRUE,   label = NULL,   dropdownMenu = NULL,   sidebar = NULL,   id = NULL )  bs4UserDescription(   title,   subtitle = NULL,   image,   backgroundImage = NULL,   type = c(1, 2),   imageElevation = NULL )  userBox(   ...,   title = NULL,   footer = NULL,   status = NULL,   background = NULL,   width = 6,   height = NULL,   collapsible = TRUE,   collapsed = FALSE,   closable = FALSE,   maximizable = FALSE,   gradient = FALSE,   boxToolSize = \"sm\",   elevation = NULL,   headerBorder = TRUE,   label = NULL,   dropdownMenu = NULL,   sidebar = NULL,   id = NULL )  userDescription(   title,   subtitle = NULL,   image,   backgroundImage = NULL,   type = c(1, 2),   imageElevation = NULL )"},{"path":"https://bs4dash.rinterface.com/reference/userBox.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"AdminLTE3 widget user card — bs4UserCard","text":"... Contents box. title User card title. footer Optional footer text. status status item. determines item's background   color.  Valid statuses defined follows: primary: #007bff . secondary: #6c757d . info: #17a2b8 . success: #28a745 . warning: #ffc107 . danger: #dc3545 . gray-dark: #343a40 . gray: #adb5bd . white: #fff . indigo: #6610f2 . lightblue: #3c8dbc . navy: #001f3f . purple: #605ca8 . fuchsia: #f012be . pink: #e83e8c . maroon: #d81b60 . orange: #ff851b . lime: #01ff70 . teal: #39cccc . olive: #3d9970 . background NULL (default), background box   white. Otherwise, color string. Valid colors listed   validColors. See : primary: #007bff . secondary: #6c757d . info: #17a2b8 . success: #28a745 . warning: #ffc107 . danger: #dc3545 . gray-dark: #343a40 . gray: #adb5bd . white: #fff . indigo: #6610f2 . lightblue: #3c8dbc . navy: #001f3f . purple: #605ca8 . fuchsia: #f012be . pink: #e83e8c . maroon: #d81b60 . orange: #ff851b . lime: #01ff70 . teal: #39cccc . olive: #3d9970 . width width box, using Bootstrap grid system. used row-based layouts. overall width region 12, default card width 6 occupies 1/2 width. column-based layouts, use NULL width; width set column contains box. height height box, pixels CSS unit. default height scales automatically content. collapsible TRUE, display button upper right allows user collapse box. collapsed TRUE, start collapsed. must used collapsible=TRUE. closable TRUE, display button upper right allows user close box. maximizable TRUE, card can displayed full screen mode. gradient Whether allow gradient effect background color. Default FALSE. boxToolSize Size toolbox: choose among \"xs\", \"sm\", \"md\", \"lg\". elevation Card elevation. headerBorder Whether display border header body. TRUE default label Slot boxLabel. dropdownMenu List items boxtool dropdown menu. Use boxDropdown. sidebar Slot boxSidebar. id Card id. subtitle User card subtitle. image User image url path. backgroundImage image url, . Background needs TRUE. type User card type. Either 1 2. 1 corresponds centered user image, 2 left aligned user image. imageElevation User card image elevation (numeric). NULL default.","code":""},{"path":[]},{"path":"https://bs4dash.rinterface.com/reference/userBox.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"AdminLTE3 widget user card — bs4UserCard","text":"David Granjon, dgranjon@ymail.com","code":""},{"path":"https://bs4dash.rinterface.com/reference/userBox.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"AdminLTE3 widget user card — bs4UserCard","text":"","code":"if (interactive()) {   library(shiny)   library(bs4Dash)    shinyApp(     ui = dashboardPage(       header = dashboardHeader(),       sidebar = dashboardSidebar(),       controlbar = dashboardControlbar(),       footer = dashboardFooter(),       title = \"test\",       body = dashboardBody(         userBox(           title = userDescription(             title = \"Nadia Carmichael\",             subtitle = \"lead Developer\",             type = 2,             image = \"https://adminlte.io/themes/AdminLTE/dist/img/user7-128x128.jpg\",           ),           status = \"primary\",           gradient = TRUE,           background = \"primary\",           boxToolSize = \"xl\",           \"Some text here!\",           footer = \"The footer here!\"         ),         userBox(           title = userDescription(             title = \"Alexander Pierce\",             subtitle = \"Founder & CEO\",             type = 1,             image = \"https://adminlte.io/themes/AdminLTE/dist/img/user1-128x128.jpg\",           ),           status = \"indigo\",           closable = TRUE,           \"Some text here!\",           footer = \"The footer here!\"         ),         userBox(           title = userDescription(             title = \"Elizabeth Pierce\",             subtitle = \"Web Designer\",             image = \"https://adminlte.io/themes/AdminLTE/dist/img/user3-128x128.jpg\",             backgroundImage = \"https://cdn.statically.io/img/wallpaperaccess.com/full/1119564.jpg\",           ),           status = \"olive\",           closable = TRUE,           maximizable = TRUE,           \"Some text here!\",           footer = \"The footer here!\"         )       )     ),     server = function(input, output) {}   ) }"},{"path":"https://bs4dash.rinterface.com/reference/userList.html","id":null,"dir":"Reference","previous_headings":"","what":"AdminLTE3 user list container — userList","title":"AdminLTE3 user list container — userList","text":"userList creates user list container inserted box. userListItem creates user list item.","code":""},{"path":"https://bs4dash.rinterface.com/reference/userList.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"AdminLTE3 user list container — userList","text":"","code":"userList(...)  userListItem(image, title, subtitle = NULL)"},{"path":"https://bs4dash.rinterface.com/reference/userList.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"AdminLTE3 user list container — userList","text":"... slot userListItem. image image url path. title Item title. subtitle Item subtitle.","code":""},{"path":"https://bs4dash.rinterface.com/reference/userList.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"AdminLTE3 user list container — userList","text":"David Granjon, dgranjon@ymail.com","code":""},{"path":"https://bs4dash.rinterface.com/reference/userList.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"AdminLTE3 user list container — userList","text":"","code":"if (interactive()) {  library(shiny)  library(bs4Dash)    shinyApp(   ui = dashboardPage(     dashboardHeader(),     dashboardSidebar(),     dashboardBody(      box(       title = \"User List example\",       status = \"success\",       userList(         userListItem(           image = \"https://adminlte.io/themes/v3/dist/img/user1-128x128.jpg\",            title = \"Shiny\",            subtitle = \"Package 1\"         ),         userListItem(           image = \"https://adminlte.io/themes/v3/dist/img/user8-128x128.jpg\",            title = \"Tidyverse\",            subtitle = \"Package 2\"         ),         userListItem(           image = \"https://adminlte.io/themes/v3/dist/img/user7-128x128.jpg\",            title = \"tidyr\",            subtitle = \"Package 3\"         )       )      )     ),     title = \"User List\"   ),   server = function(input, output) { }  ) }"},{"path":"https://bs4dash.rinterface.com/reference/userMessage.html","id":null,"dir":"Reference","previous_headings":"","what":"AdminLTE3 user message container — userMessages","title":"AdminLTE3 user message container — userMessages","text":"userMessages creates user message container. Maybe inserted box. userMessage creates user message html element. updateUserMessages allows interact userMessages container, sending, removing editing messages.","code":""},{"path":"https://bs4dash.rinterface.com/reference/userMessage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"AdminLTE3 user message container — userMessages","text":"","code":"userMessages(..., id = NULL, status, width = 4, height = NULL)  userMessage(   ...,   author = NULL,   date = NULL,   image = NULL,   type = c(\"sent\", \"received\") )  updateUserMessages(   id,   action = c(\"add\", \"remove\", \"update\"),   index = NULL,   content = NULL,   session = shiny::getDefaultReactiveDomain() )"},{"path":"https://bs4dash.rinterface.com/reference/userMessage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"AdminLTE3 user message container — userMessages","text":"... Message text. id userMessages target. status Messages status. Valid colors defined follows: primary: #007bff . secondary: #6c757d . info: #17a2b8 . success: #28a745 . warning: #ffc107 . danger: #dc3545 . gray-dark: #343a40 . gray: #adb5bd . white: #fff . indigo: #6610f2 . lightblue: #3c8dbc . navy: #001f3f . purple: #605ca8 . fuchsia: #f012be . pink: #e83e8c . maroon: #d81b60 . orange: #ff851b . lime: #01ff70 . teal: #39cccc . olive: #3d9970 . width Container width: 1 12. height Container height. author Message author. date Message date. image Message author image path url. type Message type: c(\"sent\", \"received\"). action Action perform: add, remove update. index Index item update remove. content New message content list. actions like add update ! See example. session Shiny session object.","code":""},{"path":"https://bs4dash.rinterface.com/reference/userMessage.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"AdminLTE3 user message container — userMessages","text":"David Granjon, dgranjon@ymail.com","code":""},{"path":"https://bs4dash.rinterface.com/reference/userMessage.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"AdminLTE3 user message container — userMessages","text":"","code":"if (interactive()) {  library(shiny)  library(bs4Dash)    shinyApp(   ui = dashboardPage(     dashboardHeader(),     dashboardSidebar(),     dashboardBody(      box(       title = \"Box with messages\",       solidHeader = TRUE,       status = \"warning\",       userMessages(        width = 12,        status = \"teal\",        userMessage(          author = \"Alexander Pierce\",          date = \"20 Jan 2:00 pm\",          image = \"https://adminlte.io/themes/AdminLTE/dist/img/user1-128x128.jpg\",          type = \"sent\",          \"Is this template really for free? That's unbelievable!\"        ),        userMessage(          author = \"Sarah Bullock\",          date = \"23 Jan 2:05 pm\",          image = \"https://adminlte.io/themes/AdminLTE/dist/img/user3-128x128.jpg\",          type = \"received\",          \"You better believe it!\"        )       )      ),      userMessages(        width = 6,        status = \"danger\",         userMessage(          author = \"Alexander Pierce\",          date = \"20 Jan 2:00 pm\",          image = \"https://adminlte.io/themes/AdminLTE/dist/img/user1-128x128.jpg\",          type = \"received\",          \"Is this template really for free? That's unbelievable!\"        ),        userMessage(          author = \"Sarah Bullock\",          date = \"23 Jan 2:05 pm\",          image = \"https://adminlte.io/themes/AdminLTE/dist/img/user3-128x128.jpg\",          type = \"sent\",          \"You better believe it!\"        )       )     ),     title = \"user Message\"   ),   server = function(input, output) { }  ) }  if (interactive()) {  library(shiny)  library(bs4Dash)    shinyApp(   ui = dashboardPage(     dashboardHeader(),     dashboardSidebar(),     dashboardBody(       fluidRow(         actionButton(\"remove\", \"Remove message\"),         actionButton(\"add\", \"Add message\"),         actionButton(\"update\", \"Update message\")       ),       numericInput(\"index\", \"Message index:\", 1, min = 1, max = 3),       br(),       br(),       userMessages(         width = 6,         status = \"danger\",         id = \"message\",         userMessage(           author = \"Alexander Pierce\",           date = \"20 Jan 2:00 pm\",           image = \"https://adminlte.io/themes/AdminLTE/dist/img/user1-128x128.jpg\",           type = \"received\",           \"Is this template really for free? That's unbelievable!\"         ),         userMessage(           author = \"Sarah Bullock\",           date = \"23 Jan 2:05 pm\",           image = \"https://adminlte.io/themes/AdminLTE/dist/img/user3-128x128.jpg\",           type = \"sent\",           \"You better believe it!\"         )       )     ),     title = \"user Message\"   ),   server = function(input, output, session) {     observeEvent(input$remove, {       updateUserMessages(\"message\", action = \"remove\", index = input$index)     })     observeEvent(input$add, {       updateUserMessages(         \"message\",          action = \"add\",          content = list(           author = \"David\",           date = \"Now\",           image = \"https://i.pinimg.com/originals/f1/15/df/f115dfc9cab063597b1221d015996b39.jpg\",           type = \"received\",           text = tagList(            sliderInput(             \"obs\",              \"Number of observations:\",             min = 0,              max = 1000,              value = 500            ),            plotOutput(\"distPlot\")           )         )       )     })          output$distPlot <- renderPlot({      hist(rnorm(input$obs))     })          observeEvent(input$update, {       updateUserMessages(         \"message\",          action = \"update\",          index = input$index,         content = list(          text = tagList(           appButton(            inputId = \"reload\",            label = \"Click me!\",             icon = icon(\"arrows-rotate\"),             dashboardBadge(1, color = \"primary\")           )          )         )       )     })          observeEvent(input$reload, {      showNotification(\"Yeah!\", duration = 1, type = \"default\")     })   }  ) }"},{"path":"https://bs4dash.rinterface.com/reference/userPost.html","id":null,"dir":"Reference","previous_headings":"","what":"AdminLTE3 user post — userPost","title":"AdminLTE3 user post — userPost","text":"Creates user post. content may inserted box. userPostTagItems creates container host userPostTagItem. userPostTagItem creates user post tool item","code":""},{"path":"https://bs4dash.rinterface.com/reference/userPost.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"AdminLTE3 user post — userPost","text":"","code":"userPost(   ...,   id = NULL,   image,   author,   description = NULL,   collapsible = TRUE,   collapsed = FALSE )  userPostTagItems(...)  userPostTagItem(...)"},{"path":"https://bs4dash.rinterface.com/reference/userPost.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"AdminLTE3 user post — userPost","text":"... Tool content label, button, ... id Unique id post. image Profile image, . author Post author. description Post description. collapsible TRUE, display button upper right allows user collapse comment. collapsed Whether comment collapsed application starts, FALSE default.","code":""},{"path":[]},{"path":"https://bs4dash.rinterface.com/reference/userPost.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"AdminLTE3 user post — userPost","text":"David Granjon, dgranjon@ymail.com","code":""},{"path":"https://bs4dash.rinterface.com/reference/userPost.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"AdminLTE3 user post — userPost","text":"","code":"if (interactive()) {  library(shiny)  library(bs4Dash)    shinyApp(   ui = dashboardPage(     dashboardHeader(),     dashboardSidebar(),     dashboardBody(      box(       title = \"Box with user comment\",       status = \"primary\",       userPost(        id = 1,        image = \"https://adminlte.io/themes/AdminLTE/dist/img/user1-128x128.jpg\",        author = \"Jonathan Burke Jr.\",        description = \"Shared publicly - 7:30 PM today\",        \"Lorem ipsum represents a long-held tradition for designers,         typographers and the like. Some people hate it and argue for         its demise, but others ignore the hate as they create awesome         tools to help create filler text for everyone from bacon         lovers to Charlie Sheen fans.\",        collapsible = FALSE,        userPostTagItems(         userPostTagItem(dashboardBadge(\"item 1\", color = \"info\")),         userPostTagItem(dashboardBadge(\"item 2\", color = \"danger\"), side = \"right\")        )       ),       userPost(        id = 2,        image = \"https://adminlte.io/themes/AdminLTE/dist/img/user6-128x128.jpg\",        author = \"Adam Jones\",        userPostMedia(image = \"https://adminlte.io/themes/AdminLTE/dist/img/photo2.png\"),        userPostTagItems(         userPostTagItem(dashboardBadge(\"item 1\", color = \"success\")),         userPostTagItem(dashboardBadge(\"item 2\", color = \"danger\"), side = \"right\")        )       )      )     ),     title = \"userPost\"   ),   server = function(input, output) { }  ) }"},{"path":"https://bs4dash.rinterface.com/reference/userPostMedia.html","id":null,"dir":"Reference","previous_headings":"","what":"AdminLTE3 user post media — userPostMedia","title":"AdminLTE3 user post media — userPostMedia","text":"userPostMedia creates container include image userPost.","code":""},{"path":"https://bs4dash.rinterface.com/reference/userPostMedia.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"AdminLTE3 user post media — userPostMedia","text":"","code":"userPostMedia(image, height = NULL, width = NULL)"},{"path":"https://bs4dash.rinterface.com/reference/userPostMedia.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"AdminLTE3 user post media — userPostMedia","text":"image Image path url ... height Media height pixels. width Media width pixels.","code":""},{"path":"https://bs4dash.rinterface.com/reference/userPostMedia.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"AdminLTE3 user post media — userPostMedia","text":"David Granjon, dgranjon@ymail.com","code":""},{"path":"https://bs4dash.rinterface.com/reference/validColors.html","id":null,"dir":"Reference","previous_headings":"","what":"Valid colors — validColors","title":"Valid colors — validColors","text":"valid colors various dashboard components. Valid colors listed :","code":""},{"path":"https://bs4dash.rinterface.com/reference/validColors.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Valid colors — validColors","text":"indigo Indigo lightblue Light blue navy Dark Grey/Blue purple Purple fuchsia Fuchsia pink Pink maroon Pink orange Orange lime Light green teal Blue/Green olive Pastel green","code":""},{"path":"https://bs4dash.rinterface.com/reference/validNuances.html","id":null,"dir":"Reference","previous_headings":"","what":"Valid nuances — validNuances","title":"Valid nuances — validNuances","text":"nuances strings correspond colors defined AdminLTE's CSS. Although colors can vary depending particular CSS selector, generally appear follows:","code":""},{"path":"https://bs4dash.rinterface.com/reference/validNuances.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Valid nuances — validNuances","text":"gray-dark Gray dark gray Gray white White","code":""},{"path":"https://bs4dash.rinterface.com/reference/validStatuses.html","id":null,"dir":"Reference","previous_headings":"","what":"Valid statuses — validStatuses","title":"Valid statuses — validStatuses","text":"status strings correspond colors defined Bootstrap's CSS. Although colors can vary depending particular CSS selector, generally appear follows:","code":""},{"path":"https://bs4dash.rinterface.com/reference/validStatuses.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Valid statuses — validStatuses","text":"primary Blue (sometimes dark blue) secondary Light gray info Blue success Green warning Orange danger Red","code":""},{"path":"https://bs4dash.rinterface.com/reference/validStatusesPlus.html","id":null,"dir":"Reference","previous_headings":"","what":"Valid statuses extra — validStatusesPlus","title":"Valid statuses extra — validStatusesPlus","text":"Valid statuses extra","code":""},{"path":"https://bs4dash.rinterface.com/reference/valueBox.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a value box (server side) — renderbs4ValueBox","title":"Create a value box (server side) — renderbs4ValueBox","text":"server-side function creating dynamic bs4ValueBox. UI-side function creating dynamic bs4ValueBox. beautiful AdminLTE3 value box.","code":""},{"path":"https://bs4dash.rinterface.com/reference/valueBox.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a value box (server side) — renderbs4ValueBox","text":"","code":"renderbs4ValueBox(expr, env = parent.frame(), quoted = FALSE)  bs4ValueBoxOutput(outputId, width = 4)  bs4ValueBox(   value,   subtitle,   icon = NULL,   color = NULL,   width = 3,   href = NULL,   footer = NULL,   gradient = FALSE,   elevation = NULL )  valueBox(   value,   subtitle,   icon = NULL,   color = NULL,   width = 3,   href = NULL,   footer = NULL,   gradient = FALSE,   elevation = NULL )  valueBoxOutput(outputId, width = 4)  renderValueBox(expr, env = parent.frame(), quoted = FALSE)"},{"path":"https://bs4dash.rinterface.com/reference/valueBox.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a value box (server side) — renderbs4ValueBox","text":"expr expression returns Shiny tag object, HTML(), list objects. env parent environment reactive expression. default, calling environment, defining ordinary non-reactive expression. expr quosure quoted TRUE, env ignored. quoted TRUE, quote()ed value expr used expr evaluated. expr quosure like use expression value expr, must set quoted TRUE. outputId Output variable name. width width box, using Bootstrap grid system. used row-based layouts. overall width region 12, default width 4 occupies 1/3 width. column-based layouts, use NULL width; width set column contains box. value value display box. Usually number short text. subtitle Subtitle text. icon icon tag, created icon. color color item. determines item's background   color.  Valid colors defined follows: primary: #007bff . secondary: #6c757d . info: #17a2b8 . success: #28a745 . warning: #ffc107 . danger: #dc3545 . gray-dark: #343a40 . gray: #adb5bd . white: #fff . indigo: #6610f2 . lightblue: #3c8dbc . navy: #001f3f . purple: #605ca8 . fuchsia: #f012be . pink: #e83e8c . maroon: #d81b60 . orange: #ff851b . lime: #01ff70 . teal: #39cccc . olive: #3d9970 . href optional URL link footer. `footer` parameter set, `footer` take precedence. footer Optional html content footer box. gradient Whether use gradient style background color. Default FALSE. elevation Value box elevation.","code":""},{"path":[]},{"path":"https://bs4dash.rinterface.com/reference/valueBox.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Create a value box (server side) — renderbs4ValueBox","text":"David Granjon, dgranjon@ymail.com","code":""},{"path":"https://bs4dash.rinterface.com/reference/valueBox.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a value box (server side) — renderbs4ValueBox","text":"","code":"if (interactive()) {   library(shiny)   library(bs4Dash)    shiny::shinyApp(     ui = dashboardPage(       header = dashboardHeader(),       sidebar = dashboardSidebar(),       controlbar = dashboardControlbar(),       footer = dashboardFooter(),       title = \"test\",       body = dashboardBody(         fluidRow(           valueBoxOutput(\"vbox\"),           infoBoxOutput(\"ibox\")         )       )     ),     server = function(input, output) {       output$vbox <- renderValueBox({         valueBox(           value = 150,           subtitle = \"New orders\",           color = \"primary\",           icon = icon(\"shopping-cart\"),           href = \"#\"         )       })        output$ibox <- renderInfoBox({         infoBox(           title = \"Comments\",           fill = TRUE,           gradient = TRUE,           color = \"success\",           value = 41410,           icon = icon(\"comments\")         )       })     }   ) } if (interactive()) {   library(shiny)   library(bs4Dash)    shinyApp(     ui = dashboardPage(       header = dashboardHeader(),       sidebar = dashboardSidebar(),       controlbar = dashboardControlbar(),       footer = dashboardFooter(),       title = \"test\",       body = bs4DashBody(         fluidRow(           valueBox(             value = 150,             subtitle = \"New orders\",             color = \"primary\",             icon = icon(\"cart-shopping\")           ),           valueBox(             value = \"53%\",             subtitle = \"New orders\",             color = \"indigo\",             icon = icon(\"gears\"),             footer = div(\"Hello World\")           ),           valueBox(             value = \"44\",             subtitle = \"User Registrations\",             color = \"teal\",             icon = icon(\"sliders\")           )         )       )     ),     server = function(input, output) {}   ) }"},{"path":"https://bs4dash.rinterface.com/news/index.html","id":"bs4dash-234","dir":"Changelog","previous_headings":"","what":"bs4Dash 2.3.4","title":"bs4Dash 2.3.4","text":"Added shinylive support documentation examples.","code":""},{"path":"https://bs4dash.rinterface.com/news/index.html","id":"minor-change-2-3-4","dir":"Changelog","previous_headings":"","what":"Minor change","title":"bs4Dash 2.3.4","text":"Update jquery-ui 1.13.2. Thanks @biognosys-. Fix CRAN NOTES.","code":""},{"path":"https://bs4dash.rinterface.com/news/index.html","id":"bs4dash-233","dir":"Changelog","previous_headings":"","what":"bs4Dash 2.3.3","title":"bs4Dash 2.3.3","text":"CRAN release: 2024-01-23","code":""},{"path":"https://bs4dash.rinterface.com/news/index.html","id":"breaking-change-potential-2-3-3","dir":"Changelog","previous_headings":"","what":"Breaking change (potential)","title":"bs4Dash 2.3.3","text":"Fix #302: dashboardSidebar() dashboardControlbar() default skin value NULL. allows inherit parent dashboardPage() dark parameter either full light full dark skin. Therefore, won’t possible anymore apply light sidebar background dashboardPage() main theme dark inversely. want , set dark = NULL, instance:","code":"library(shiny) library(bs4Dash)  shinyApp(   ui = dashboardPage(     dark = NULL,     header = dashboardHeader(       title = dashboardBrand(         title = \"My dashboard\",         color = \"primary\",         href = \"https://adminlte.io/themes/v3\",         image = \"https://adminlte.io/themes/v3/dist/img/AdminLTELogo.png\"       )     ),     sidebar = dashboardSidebar(skin = \"dark\"),     body = dashboardBody(       box(status = \"danger\"),       box(status = \"primary\"),       box(status = \"orange\")     ),     controlbar = dashboardControlbar(skin = \"dark\"),     title = \"DashboardPage\"   ),   server = function(input, output) { } )"},{"path":"https://bs4dash.rinterface.com/news/index.html","id":"bug-fixes-2-3-3","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"bs4Dash 2.3.3","text":"Remove unused headTitles parameter bs4Table(). Fix #315: alert title added alert body Alert closable header contains “undefined” key word. Thanks @MohammedFCIS.","code":""},{"path":"https://bs4dash.rinterface.com/news/index.html","id":"bs4dash-230","dir":"Changelog","previous_headings":"","what":"bs4Dash 2.3.0","title":"bs4Dash 2.3.0","text":"CRAN release: 2023-06-15","code":""},{"path":"https://bs4dash.rinterface.com/news/index.html","id":"new-feature-2-3-0","dir":"Changelog","previous_headings":"","what":"New feature","title":"bs4Dash 2.3.0","text":"New navbar navigation menu. - navbarTab(), navbarMenu() updateNavbarTabs() create navbar navigation. close #108.","code":""},{"path":"https://bs4dash.rinterface.com/news/index.html","id":"minor-change-2-3-0","dir":"Changelog","previous_headings":"","what":"Minor change","title":"bs4Dash 2.3.0","text":"New dropdownHeader() function display Bootstrap 4 dropdown headers. Adjust dropdownDivider() invisible. tabItems() .list parameter pass tabItem() elements list. Fix #342: better title alignment tabBox(). Increase padding card pills. Thanks @HugoGit39 reporting.","code":""},{"path":"https://bs4dash.rinterface.com/news/index.html","id":"bug-fixes-2-3-0","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"bs4Dash 2.3.0","text":"Fix #349: allow pass list accordionItem() .list parameter accordion(). Thanks @vladimirstroganov reporting. Fix #330: allow use input elements (menuItem element) sidebar. Fix #343: Refine help parameter behavior dashboardPage(). NULL, icon shown. FALSE, icon toggle shown checked. TRUE toggle checked.","code":""},{"path":"https://bs4dash.rinterface.com/news/index.html","id":"internal-2-3-0","dir":"Changelog","previous_headings":"","what":"Internal","title":"bs4Dash 2.3.0","text":"Change dark/light switch CSS class consistency.","code":""},{"path":"https://bs4dash.rinterface.com/news/index.html","id":"bs4dash-221","dir":"Changelog","previous_headings":"","what":"bs4Dash 2.2.1","title":"bs4Dash 2.2.1","text":"CRAN release: 2022-12-20","code":""},{"path":"https://bs4dash.rinterface.com/news/index.html","id":"new-features-2-2-1","dir":"Changelog","previous_headings":"","what":"New features","title":"bs4Dash 2.2.1","text":"New pagination() updatePagination(). Bootstrap 4 implementation pagination.","code":""},{"path":"https://bs4dash.rinterface.com/news/index.html","id":"minor-change-2-2-1","dir":"Changelog","previous_headings":"","what":"Minor change","title":"bs4Dash 2.2.1","text":"Fix #323: remove sidebar collapse animation app startup. JS code moved back R. Thanks @lucas-alcantara reporting.","code":""},{"path":"https://bs4dash.rinterface.com/news/index.html","id":"bug-fixes-2-2-1","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"bs4Dash 2.2.1","text":"Fix #325: menuItem() applied wrong class nested element menuSubItem(). Thanks @echoplaza reporting. Fix #322: notificationItem() href work. Fix #306: Dynamic menuSubItems() apply() adds extra text. Added .list param menuItem() programmatically pass menuSubItem() list. Fix #297: tabsetPanel() renders list tabPanels vertical = TRUE. Changed layout fluidRow. Thanks @lucas-alcantara reporting. Fix #296: Documentation issue valueBox() infoBox() render function section. Thanks @corderoortiz reporting. Fix #293: Navbar stays keeps white background, even dark mode selected/toggled. Related previous PR. Thanks @JJohnson-DA reporting. Fix #290: don’t set data-toggle=\"tab\" href NULL tabsetPanel(). Thanks @veer0318 reporting. Fix #243: tabsetPanel() id’s properly generated inserting tabs non-empty tabset. Thanks @DarkSideOfTheMat reporting giving hints.","code":""},{"path":"https://bs4dash.rinterface.com/news/index.html","id":"bs4dash-210","dir":"Changelog","previous_headings":"","what":"bs4Dash 2.1.0","title":"bs4Dash 2.1.0","text":"CRAN release: 2022-05-05","code":""},{"path":"https://bs4dash.rinterface.com/news/index.html","id":"breaking-change-2-1-0","dir":"Changelog","previous_headings":"","what":"Breaking change","title":"bs4Dash 2.1.0","text":"Align shiny remove position tabsetPanel(). long time deprecated.","code":""},{"path":"https://bs4dash.rinterface.com/news/index.html","id":"minor-changesfixes-2-1-0","dir":"Changelog","previous_headings":"","what":"Minor changes/fixes","title":"bs4Dash 2.1.0","text":"Remove echarts4r suggest causing #240. Fix issue bs4DashGallery() tabsetPanel(). now use bs4Dash::tabsetPanel(). Fix issue navbar theme. #268. Thanks @etiennebacher. Allow type = \"hidden\" tabsetPanel. Fixes #248. Fix regression introduced 2.0.3: renderMenu() working. See #234 Update Github actions. Add bs4Dash class card binding. Thanks @galachad. Typo vignette. Thanks @Duque-de-Sealand. Wrong parameter doc. Thanks @zoezhang106. Add new .list param tabBox() allow programmatically generated items, like tabsetPanel(). Thanks @mtopart","code":""},{"path":"https://bs4dash.rinterface.com/news/index.html","id":"bs4dash-203","dir":"Changelog","previous_headings":"","what":"bs4Dash 2.0.3","title":"bs4Dash 2.0.3","text":"CRAN release: 2021-09-16 release patch fix issue preventing release Shiny 1.7.0.","code":""},{"path":"https://bs4dash.rinterface.com/news/index.html","id":"minor-changes-2-0-3","dir":"Changelog","previous_headings":"","what":"Minor changes","title":"bs4Dash 2.0.3","text":"Internal change regarding waiter package user impact. Thanks @JohnCoene.","code":""},{"path":"https://bs4dash.rinterface.com/news/index.html","id":"bs4dash-202","dir":"Changelog","previous_headings":"","what":"bs4Dash 2.0.2","title":"bs4Dash 2.0.2","text":"CRAN release: 2021-07-23 Patch fix CRAN warning Mac M1.","code":""},{"path":"https://bs4dash.rinterface.com/news/index.html","id":"minor-changes-2-0-2","dir":"Changelog","previous_headings":"","what":"Minor changes","title":"bs4Dash 2.0.2","text":"Move away shiny:::processDeps favor htmltools::renderTags. impact end user.","code":""},{"path":"https://bs4dash.rinterface.com/news/index.html","id":"bs4dash-201","dir":"Changelog","previous_headings":"","what":"bs4Dash 2.0.1","title":"bs4Dash 2.0.1","text":"CRAN release: 2021-07-16","code":""},{"path":"https://bs4dash.rinterface.com/news/index.html","id":"minor-changes-2-0-1","dir":"Changelog","previous_headings":"","what":"Minor changes","title":"bs4Dash 2.0.1","text":"Simple patch fix wrong .Rbuildignore rule. Update internal file structure. Clean NOTE: https://cran.rstudio.com//web/checks/check_results_bs4Dash.html","code":""},{"path":"https://bs4dash.rinterface.com/news/index.html","id":"bug-fix-2-0-1","dir":"Changelog","previous_headings":"","what":"Bug Fix","title":"bs4Dash 2.0.1","text":"Fix #220: Disable badgeLabel SidebarMenuItem collapsed. Wrong tag structure fixed. Fix #219: icon appears header bs4Card/box.","code":""},{"path":"https://bs4dash.rinterface.com/news/index.html","id":"bs4dash-200","dir":"Changelog","previous_headings":"","what":"bs4Dash 2.0.0","title":"bs4Dash 2.0.0","text":"CRAN release: 2021-05-26","code":""},{"path":"https://bs4dash.rinterface.com/news/index.html","id":"breaking-changes-2-0-0","dir":"Changelog","previous_headings":"","what":"Breaking changes","title":"bs4Dash 2.0.0","text":"align shinydashboard shinydashboardPlus. ### bs4DashPage/dashboardPage - navbar param becomes header. - Remove old_school, sidebar_mini, sidebar_collapsed, controlbar_collapsed, controlbar_overlay, enable_preloader, loading_duration loading_background. parameters move dashboardSidebar, controlbar … - New freshTheme parameter pass fresh powered themes. - New options parameter configure AdminLTE3. - New preloader use waiter preloading engine.","code":""},{"path":"https://bs4dash.rinterface.com/news/index.html","id":"bs4dashfooter-2-0-0","dir":"Changelog","previous_headings":"Breaking changes","what":"bs4DashFooter","title":"bs4Dash 2.0.0","text":"... becomes left. right_text becomes right.","code":""},{"path":"https://bs4dash.rinterface.com/news/index.html","id":"bs4dashnavbardashboardheader-2-0-0","dir":"Changelog","previous_headings":"Breaking changes","what":"bs4DashNavbar/dashboardHeader","title":"bs4Dash 2.0.0","text":"controlbarIcon accepts shiny::icon instead icon name. sidebarIcon accepts shiny::icon instead icon name. add title, titleWidth disable","code":""},{"path":"https://bs4dash.rinterface.com/news/index.html","id":"bs4usermenu-2-0-0","dir":"Changelog","previous_headings":"Breaking changes","what":"bs4UserMenu","title":"bs4Dash 2.0.0","text":"src becomes image.","code":""},{"path":"https://bs4dash.rinterface.com/news/index.html","id":"bs4dashcontrolbardashboardcontrolbar-2-0-0","dir":"Changelog","previous_headings":"Breaking changes","what":"bs4DashControlbar/dashboardControlbar","title":"bs4Dash 2.0.0","text":"Add collapsed overlay. Remove title. Rename inputId id.","code":""},{"path":"https://bs4dash.rinterface.com/news/index.html","id":"updatebs4controlbar-2-0-0","dir":"Changelog","previous_headings":"Breaking changes","what":"updatebs4Controlbar","title":"bs4Dash 2.0.0","text":"inputId becomes id. New alias: updateControlbar. session mandatory","code":""},{"path":"https://bs4dash.rinterface.com/news/index.html","id":"bs4dashsidebardashboardsidebarupdatesidebar-2-0-0","dir":"Changelog","previous_headings":"Breaking changes","what":"bs4DashSidebar/dashboardSidebar/updateSidebar","title":"bs4Dash 2.0.0","text":"inputId moved end. inputId renamed id. Added collapsed minified. Add width. Remove opacity, title, brandColor, url src.","code":""},{"path":"https://bs4dash.rinterface.com/news/index.html","id":"bs4sidebarmenu-2-0-0","dir":"Changelog","previous_headings":"Breaking changes","what":"bs4SidebarMenu","title":"bs4Dash 2.0.0","text":"child_indent becomes childIndent. Add .list pass programmatically generated bs4SidebarMenuItem.","code":""},{"path":"https://bs4dash.rinterface.com/news/index.html","id":"bs4sidebarmenuitem-2-0-0","dir":"Changelog","previous_headings":"Breaking changes","what":"bs4SidebarMenuItem","title":"bs4Dash 2.0.0","text":"Add href newTab. icon expects shiny::icon.","code":""},{"path":"https://bs4dash.rinterface.com/news/index.html","id":"bs4sidebaruserpanel-2-0-0","dir":"Changelog","previous_headings":"Breaking changes","what":"bs4SidebarUserPanel","title":"bs4Dash 2.0.0","text":"img text become image name, respectively.","code":""},{"path":"https://bs4dash.rinterface.com/news/index.html","id":"bs4card-2-0-0","dir":"Changelog","previous_headings":"Breaking changes","what":"bs4Card","title":"bs4Dash 2.0.0","text":"Change solidHeader behavior. Remove sidebar related parameters bs4Card(). now part new bs4CardSidebar(). Remove dropdownIcon parameter bs4Card(). now part dropdownItemList(). Remove labelStatus, labelText labelTooltip params bs4Card(). reduce number parameters cards. default, closable now FALSE bs4Card(). Rename dropdownItemList cardDropdown Rename dropdownItemListItem cardDropdownItem","code":""},{"path":"https://bs4dash.rinterface.com/news/index.html","id":"bs4cardsidebar-2-0-0","dir":"Changelog","previous_headings":"Breaking changes","what":"bs4CardSidebar","title":"bs4Dash 2.0.0","text":"inputId becomes id. icon expects shiny::icon.","code":""},{"path":"https://bs4dash.rinterface.com/news/index.html","id":"bs4tabcard-2-0-0","dir":"Changelog","previous_headings":"Breaking changes","what":"bs4TabCard","title":"bs4Dash 2.0.0","text":"Change solidHeader behavior.","code":""},{"path":"https://bs4dash.rinterface.com/news/index.html","id":"bs4valuebox-2-0-0","dir":"Changelog","previous_headings":"Breaking changes","what":"bs4ValueBox","title":"bs4Dash 2.0.0","text":"status becomes color. icon expects shiny::icon.","code":""},{"path":"https://bs4dash.rinterface.com/news/index.html","id":"bs4infobox-2-0-0","dir":"Changelog","previous_headings":"Breaking changes","what":"bs4InfoBox","title":"bs4Dash 2.0.0","text":"status becomes color Remove ... subtitle Remove iconStatus. Add href fill. Rename gradientColor gradient.","code":""},{"path":"https://bs4dash.rinterface.com/news/index.html","id":"bs4usercard-2-0-0","dir":"Changelog","previous_headings":"Breaking changes","what":"bs4UserCard","title":"bs4Dash 2.0.0","text":"src becomes image. status becomes color.","code":""},{"path":"https://bs4dash.rinterface.com/news/index.html","id":"bs4socialbox-2-0-0","dir":"Changelog","previous_headings":"Breaking changes","what":"bs4SocialBox","title":"bs4Dash 2.0.0","text":"rework component add userBlock() pass title.","code":""},{"path":"https://bs4dash.rinterface.com/news/index.html","id":"attachmentblock-2-0-0","dir":"Changelog","previous_headings":"Breaking changes","what":"attachmentBlock","title":"bs4Dash 2.0.0","text":"src becomes image. titleUrl becomes href.","code":""},{"path":"https://bs4dash.rinterface.com/news/index.html","id":"descriptionblock-2-0-0","dir":"Changelog","previous_headings":"Breaking changes","what":"descriptionBlock","title":"bs4Dash 2.0.0","text":"icon expects shiny::icon.","code":""},{"path":"https://bs4dash.rinterface.com/news/index.html","id":"bs4box-2-0-0","dir":"Changelog","previous_headings":"Breaking changes","what":"bs4Box","title":"bs4Dash 2.0.0","text":"component removed","code":""},{"path":"https://bs4dash.rinterface.com/news/index.html","id":"bs4tabcard-2-0-0-1","dir":"Changelog","previous_headings":"Breaking changes","what":"bs4TabCard","title":"bs4Dash 2.0.0","text":"rework component. Like tabBox() shinydashboard","code":""},{"path":"https://bs4dash.rinterface.com/news/index.html","id":"bs4dropdownmenu-2-0-0","dir":"Changelog","previous_headings":"Breaking changes","what":"bs4DropdownMenu","title":"bs4Dash 2.0.0","text":"badge becomes badgeStatus Add type. icon expects shiny::icon. Replace labelText headerText. Add .list href. Remove align.","code":""},{"path":"https://bs4dash.rinterface.com/news/index.html","id":"bs4dropdownmenuitem-2-0-0","dir":"Changelog","previous_headings":"Breaking changes","what":"bs4DropdownMenuItem","title":"bs4Dash 2.0.0","text":"replaced notificationItem() messageItem()","code":""},{"path":"https://bs4dash.rinterface.com/news/index.html","id":"others-2-0-0","dir":"Changelog","previous_headings":"Breaking changes","what":"Others","title":"bs4Dash 2.0.0","text":"Reworked bs4Table() API. bs4Stars(): grade maxstar, respectively become value grade. listGroupItem(), remove type put listGroup(). src becomes href. status becomes color blockQuote. Remove src carouselItem() bs4Ribbon(), status becomes color. Remove size. bs4Badge(), status becomes color. userMessage(), src becomes image side becomes type. timelineItemMedia(), src becomes image. timelineItem(), timelineStart() timelineEnd(), icon expects shiny::icon. status becomes color timelineItem(), timelineLabel(), timelineStart() timelineEnd(). userPost() userPostMedia(), src becomes image. Removed collapseStatus. bs4Stars(), status becomes color. Remove bs4ShowTab(), bs4HideTab() bs4RemoveTab(). shiny vanilla function work well now. Remove bs4TabPanel(). bs4TabSetPanel() becomes bs4TabsetPanel() built top shiny::tabsetPanel. cardProfile(), add bordered. src becomes image. Remove cardProfileItemList(). updatebs4TabSetPanel(): selected takes name tab instead index. convenient (shinydashboard) value now mandatory bs4InfoBox() change attachmentBlock() title_url titleUrl (match new upcoming package…) descriptionBlock(): number_color, number_icon, right_border margin_bottom become camel case parms (numberColor, numberIcon, rightBorder marginBottom) numberIcon descriptionBlock() need name icon (‘times’) instead bs4Jumbotron(): btn_name becomes btnName userPost(): collapse_status becomes collapseStatus","code":""},{"path":"https://bs4dash.rinterface.com/news/index.html","id":"new-features-2-0-0","dir":"Changelog","previous_headings":"","what":"New features","title":"bs4Dash 2.0.0","text":"Add easyClose param boxSidebar() allow close sidebar outside-click. Thanks @predict42-patrick suggestion JS code. New gradient parameter valuebox(). New help mode dashboardPage() automatically toggle tooltips popovers. Use bs4TooltipUI() bs4PopoverUI(). New useAutoColor() leveraging new Shiny features {thematic} automatically style plots depending dashboard background color. New bottom area dashboardSidebar(). Add fullscreen widget dashboardPage(). New updateAccordion(). actionButton() updated provide Bootstrap 4 features. New appButton(). New updateUserMessages(). New userList() userListItem(). New productList() productListItem(). New userDescription() userBlock(). New built-skinSelector. New built-dark/light mode switcher. New “go top” feature. New dashboardUserItem(), userOutput() renderUser(). New bs4DashBrand better dashboard titles. add bs4ShowTab() bs4HideTab(): thanks @fmmattioni reminder ;) New bs4CardLayout(): simplify way deal bs4Card()! New bs4CloseAlert(): programmatically close bs4Alert() New bs4Toast(): include builtin AdminLTE3 toasts! Add options select bs4SidebarMenuItem() bs4SidebarMenuSubItem() start. Now bs4DropdownMenuItem() may act actionButton Whenever bs4Card() maximized, collapsible icon hidden (make sense ) new bs4CardLabel() add text labels bs4Card() new bs4CardSidebar(): access status via input$id. Add updatebs4CardSidebar() toggle card sidebar add bs4PopoverServer(), bs4PopoverUI(), bs4TooltipUI() bs4TooltipServer() bs4TabSetPanel(): may access currently selected tab input$id add type parameter bs4TabSetPanel() bs4TabCard() select pills tabs (cosmetic choice). type provided, behaviour unchanged (pills default) add fixed param bs4DashFooter() add fixed parameter bs4DashSidebar(). Thanks @mppallante re-add fixed parameter bs4DashNavbar(). reintroduced adminlte new css class name add animated, label parameters bs4ProgressBar() add iconStatus parameter bs4InfoBox() allow icon color independant card status (https://adminlte.io/themes/v3/pages/widgets.html). Thanks @rolando-gsw","code":""},{"path":"https://bs4dash.rinterface.com/news/index.html","id":"minor-change-2-0-0","dir":"Changelog","previous_headings":"","what":"Minor change","title":"bs4Dash 2.0.0","text":"bs4Sortable() initialized time new sortable element added. Fixes #198. New taskItem(). Add indicators .list carousel(). insertTab() using shiny vanilla elements. bs4UserMenu() close clicked inside. Add glyphicons html dependency New legacy parameter bs4SidebarMenu(): use old AdminLTE2 styling item selection Now, clicking outside bs4DashControlbar() opened close . keep open, see New pinned option bs4DashControlbar(): allow block controlbar state New expandedName param bs4SidebarMenuItem align shinydashboard id NULL bs4TabSetPanel() default side default left bs4TabSetPanel() change bs4TabPanel() param order align shiny","code":""},{"path":"https://bs4dash.rinterface.com/news/index.html","id":"bug-fix-2-0-0","dir":"Changelog","previous_headings":"","what":"Bug Fix","title":"bs4Dash 2.0.0","text":"Fix #200: simplified bs4Table() API. Fix #189: hidden type available bs4Dash::tabsetPanel uses old version shiny::tabsetPanel. Thanks @zilch42. Upgrade AdminLTE 3.1.0. fixes many sidebar issues!!! Fix issue #110: due fact bs4Controlbar() now collapse clicked outside, clicking input triggering updatebs4Controlbar() toggle twice. Thanks @dwhdai Fix issue #112 sliderInput z-index bs4DashPage() preloader. Thanks @analytichealth report Fix issue bs4DashSidebar() url link. Thanks @pvictor Fix #30: programmatically close bs4Alert() Fix #47: Control bar showing top elements collapsed FALSE Fix #99: rework way sidebar items work. default, sidebar items subitems selected, first item selected. leave choice user. Thanks @analytichealth Fix bs4DropdownMenu() example fix #94: render element dependencies bs4InsertTab() fix #93: set default inputId provided bs4DashControlbar() renderUI works. Thanks @artemklevtsov fix #86 : use updatebs4TabSetPanel() renderUI. Thanks @jyjek add condition argument bs4SidebarMenuItem(). See https://github.com/RinteRface/bs4Dash/issues/35. Thanks @aldomann vignettes examples date","code":""},{"path":"https://bs4dash.rinterface.com/news/index.html","id":"bs4dash-050","dir":"Changelog","previous_headings":"","what":"bs4Dash 0.5.0","title":"bs4Dash 0.5.0","text":"CRAN release: 2019-11-27","code":""},{"path":"https://bs4dash.rinterface.com/news/index.html","id":"breaking-changes-0-5-0","dir":"Changelog","previous_headings":"","what":"Breaking Changes","title":"bs4Dash 0.5.0","text":"remove fixed parameters bs4DashNavbar() since exist new AdminLTE version rework bs4DropdownMenuItem: change text message, date time. Add new params: , src, status type.","code":""},{"path":"https://bs4dash.rinterface.com/news/index.html","id":"major-changes-0-5-0","dir":"Changelog","previous_headings":"","what":"Major Changes","title":"bs4Dash 0.5.0","text":"add link back https://www.glyphicons.com. Thanks @statnmap upgrade AdminLTE3 version rc4 add bs4DashSidebar() input binding indicate state (collapse: FALSE, open: TRUE) well updatebs4Sidebar() programmatically toggle state add bs4Controlbar() input binding indicate state (collapse: FALSE, open: TRUE) well updatebs4Controlbar() programmatically toggle state add bs4Card() input binding indicate state (collapse: FALSE, open: TRUE, maximize, closed, …) well updatebs4Card() programmatically toggle state add bs4InsertTab() programmatically insert bs4TabPanel() bs4TabSetPanel() add bs4RemoveTab() programmatically remove bs4TabPanel() bs4TabSetPanel()","code":""},{"path":"https://bs4dash.rinterface.com/news/index.html","id":"new-features-0-5-0","dir":"Changelog","previous_headings":"","what":"New features","title":"bs4Dash 0.5.0","text":"bs4DashPage() new sidebar_mini parameter. TRUE, sidebar minimum width collapsed (still see icons). false, behaves like shinydashboard bs4InfoBox() can now navigate tabs tabName parameter specified. must however correspond existing bs4TabItem() body! bs4ValueBox() footer argument. different href parameter. Thanks @stefanfritsch add expand_on_hover parameter bs4DashSidebar() add compact parameters bs4DashNavbar() reduce navbar size add getAdminLTEColors() preview available color themes default, bs4DashSidebar() fixed layout. prevent seeing sidebar items body contains many elements bs4DashPage() options change bs4Controlbar() behavior expands (see controlbar_overlay) bs4SidebarMenu() 3 new parameters: flat (design effect), child_indent compact add sidebar bs4Card() add bs4UserMenu() bs4DashNavbar() add bs4Ribbon(), sort enhanced label cards content add bs4Quote(), improved blockquote tag Bootstrap 4","code":""},{"path":"https://bs4dash.rinterface.com/news/index.html","id":"bug-fix-0-5-0","dir":"Changelog","previous_headings":"","what":"Bug Fix","title":"bs4Dash 0.5.0","text":"fix #66 #71: sidebar_collapsed working. Thanks @analytichealth @federicomarini remove hardcoded style navbar dropdown icons remove hardcoded style navbar icons (fixed last adminLTE3 release). Thanks @federicomarini fix height issue bs4Card(). Thanks @analytichealth Rework column() function Shiny make work Bootstrap 4. Thanks @federicomarini fix bs4DashNavbar() background color issue. rework bs4DashBody() element sidebar tabItems body, margin sidebar, controlbar 0 btn_name NULL bs4Jumbotron(), show button. Thanks @davidlvb fix bs4ProgressBar(): remove height width parameters. Add size parameter. fix progress behaviour wrong","code":""},{"path":"https://bs4dash.rinterface.com/news/index.html","id":"bs4dash-040","dir":"Changelog","previous_headings":"","what":"bs4Dash 0.4.0","title":"bs4Dash 0.4.0","text":"CRAN release: 2019-07-25","code":""},{"path":"https://bs4dash.rinterface.com/news/index.html","id":"major-changes-0-4-0","dir":"Changelog","previous_headings":"","what":"Major changes","title":"bs4Dash 0.4.0","text":"add bs4DashControlbarMenu(), bs4DashControlbarItem() updatebs4ControlbarMenu() add updatebs4TabItems() updateTabItems() programatically update selected sidebar tab corresponding body tab add updatebs4TabSetPanel() updateTabsetPanel() (aliases) dynamically update bs4TabSetPanel() server side add maximizable option bs4Card() bs4TabCard(). words, allow full screen option Fix #8: add input binding bs4SidebarMenu(). Now adding id menu, user can recover currently selected tab. Thanks @rpodcast add aliases make bs4Dash closer shinydashboard (conversion easier). instance bs4DashPage() can also dashboardPage() update adminLTE dependencies add vertical mode bs4TabSetPanel() add bs4SidebarMenuSubItem() add bs4Table(), bs4TableItems() bs4TableItem()","code":""},{"path":"https://bs4dash.rinterface.com/news/index.html","id":"breaking-changes-0-4-0","dir":"Changelog","previous_headings":"","what":"Breaking changes","title":"bs4Dash 0.4.0","text":"add text arg bs4SidebarMenuItem() Now … arg bs4SidebarMenuSubItem()","code":""},{"path":"https://bs4dash.rinterface.com/news/index.html","id":"minor-changes-0-4-0","dir":"Changelog","previous_headings":"","what":"Minor Changes","title":"bs4Dash 0.4.0","text":"Fix #41: add disable argument bs4DashSidebar() bs4DashControlbar(). Thanks @jamiebono images centered userPost() add startExpanded arg bs4SidebarMenuItem() add bs4TabSetPanel() gallery","code":""},{"path":"https://bs4dash.rinterface.com/news/index.html","id":"bug-fix-0-4-0","dir":"Changelog","previous_headings":"","what":"Bug Fix","title":"bs4Dash 0.4.0","text":"fix overflow-y issue bs4TabCard() fix #44: update bs4InfoBox() class. Thanks @henry090. update adminLTE dependencies (fix sidebar horizontal overflow, …) hide bs4DashControlbar() toggle bs4DashControlbar() given bs4DashPage() fix wrong url attachmentBlock() image (replace http https) fix #24: right border collapsed sidebar menu items. Thanks @aldomann Tooltips z-index lower sidebar’s z-index, cause tooltips showing (see https://github.com/ColorlibHQ/AdminLTE/pull/2105) Bootstrap 4.3.1 update table color green calendar widget changed black, caused bootstrap (see https://github.com/ColorlibHQ/AdminLTE/pull/2105)","code":""},{"path":"https://bs4dash.rinterface.com/news/index.html","id":"bs4dash-030","dir":"Changelog","previous_headings":"","what":"bs4Dash 0.3.0","title":"bs4Dash 0.3.0","text":"CRAN release: 2019-04-06","code":""},{"path":"https://bs4dash.rinterface.com/news/index.html","id":"breaking-change-0-3-0","dir":"Changelog","previous_headings":"","what":"Breaking change","title":"bs4Dash 0.3.0","text":"rework bs4TabSetPanel() bs4TabCard(). bs4TabSetPanel() can now used independently bs4TabCard(). Need provide id argument bs4TabCard().","code":""},{"path":"https://bs4dash.rinterface.com/news/index.html","id":"major-changes-0-3-0","dir":"Changelog","previous_headings":"","what":"Major changes","title":"bs4Dash 0.3.0","text":"update adminLTE3 latest release update bootstrap 4.3.1 add preloader options bs4DashPage() add collapsible closable bs4TabCard(). Buttons visible default. PR @statnmap add preloader options bs4DashPage() move RinteRface add bs4Sortable() necessary javascript dependencies add userPost(), userPostMedia(), userPostTagItems() userPostTagItem() add userMessages() userMessage() add descriptionBlock(), attachmentBlock() cardPad() add bs4SidebarUserPanel() add cardProfile(), cardProfileItemList() cardProfileItem() add bs4SocialCard() cardComment()","code":""},{"path":"https://bs4dash.rinterface.com/news/index.html","id":"minor-changes-0-3-0","dir":"Changelog","previous_headings":"","what":"Minor changes","title":"bs4Dash 0.3.0","text":"add collapse_status argument userPost() add glyphicons (BS3 old dependency) thanks @ntncmch add overflow argument bs4Card() enable disable overflow hide bs4Card() footer footer NULL patch bs4Accordion(): click 1 item collapse items accordion add id argument. add licence add controlbar_collapsed argument bs4DashPage() fix #16: add side argument bs4TabCard(). Thanks @stephLH fix #11: add width arg bs4DashControlbar(). Thanks @stephLH fix #14: remove bs4TabCard() max-height attribute. Thanks @stephLH add hex icon add menuIcon arg align arg bs4DropdownMenu(), add id arg bs4DashControlbar() PR @bjornlind add background header colours like cards bs4TabCard(). PR @statnmap","code":""},{"path":"https://bs4dash.rinterface.com/news/index.html","id":"bug-fix-0-3-0","dir":"Changelog","previous_headings":"","what":"Bug fix","title":"bs4Dash 0.3.0","text":"Fix icon rendering issue due change shiny 1.2.0 dependencies (font awesome) Fix #19: Whenever bs4Card() starts collapsed state, content displayed uncollapsed pressed. Thanks @stanmap remark. (See similar issue) bs4Card(): collapse icon changes + - depending current collapse status. fix various issues bs4DropdownMenu() fix #12: Compatibility shinyWidgets pickerInput. Thanks @pvictor fix #13 bs4TabPanel(): handle tabName space punctuation characters. Thanks @stephLH fix bs4TabCard(): user set 2 active tabs time, first one selected related #16: modify bs4Dash.js file first body content tab selected bs4TabCard(), class (tab-pane).","code":""},{"path":"https://bs4dash.rinterface.com/news/index.html","id":"bs4dash-020","dir":"Changelog","previous_headings":"","what":"bs4Dash 0.2.0","title":"bs4Dash 0.2.0","text":"CRAN release: 2018-09-20","code":""},{"path":"https://bs4dash.rinterface.com/news/index.html","id":"major-changes-0-2-0","dir":"Changelog","previous_headings":"","what":"Major changes","title":"bs4Dash 0.2.0","text":"bs4Dash now works shinyapp.io (previously, problem tab navigation) major update dependencies (bootstrap 4, fontawesome, ionicons, …) htmltools","code":""},{"path":"https://bs4dash.rinterface.com/news/index.html","id":"minor-changes-0-2-0","dir":"Changelog","previous_headings":"","what":"Minor changes","title":"bs4Dash 0.2.0","text":"close collapse buttons shown title NULL bs4Card() bs4ValueBox() footer shown external link NULL bs4ValueBox() external link opens new page add sidebar_collapsed argument bs4DashPage() control sidebar opening start update bs4DashGallery(). Add “theme” argument add ionicon() (implementation ionicons) fix vignette titles add “fixed” argument bs4DashNavbar() (#7, thanks @theRcast) update Readme","code":""},{"path":"https://bs4dash.rinterface.com/news/index.html","id":"bs4dash-010","dir":"Changelog","previous_headings":"","what":"bs4Dash 0.1.0","title":"bs4Dash 0.1.0","text":"CRAN release: 2018-07-05 initial release","code":""}]
